Gadgets information
============================================================
0x000000000042faef : adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042fb59 : adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000047741d : adc al, 0 ; add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x000000000041ff35 : adc al, 0x13 ; jmp rdx
0x00000000004181f5 : adc al, 0x16 ; sub eax, edx ; ret
0x00000000004957b0 : adc al, 0x19 ; add byte ptr [rax], al ; pop rsp ; jp 0x4957b5 ; call qword ptr [rdx]
0x00000000004481b4 : adc al, 0x24 ; jmp 0x44817d
0x000000000047713a : adc al, 0x24 ; mov edi, 1 ; call rax
0x0000000000406e71 : adc al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rdx
0x000000000046f4c0 : adc al, 0x48 ; add esp, 0x38 ; ret
0x0000000000436ec0 : adc al, 0x48 ; lea eax, dword ptr [rdi + 0x14] ; ret
0x000000000047af24 : adc al, 0x6d ; clc ; push rbp ; insb byte ptr [rdi], dx ; clc ; call rsi
0x000000000045e7c8 : adc al, 0x90 ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x0000000000430f80 : adc al, 0x91 ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x000000000042f6ae : adc al, 0x91 ; sub eax, edx ; ret
0x000000000041ff31 : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000405a20 : adc al, 0x97 ; add rdx, rdi ; jmp rdx
0x0000000000416df7 : adc al, 0xa ; jmp r10
0x0000000000418363 : adc al, 0xa ; sub eax, edx ; ret
0x000000000043943f : adc al, 0xe ; cmp rdi, rdx ; jb 0x439452 ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000041c7da : adc al, 0xe ; sub eax, edx ; ret
0x000000000041e4aa : adc al, 0xe ; sub eax, edx ; vzeroupper ; ret
0x0000000000405828 : adc al, 0xf3 ; add byte ptr [rax], al ; nop dword ptr [rax] ; ret
0x000000000040a68b : adc al, 0xf6 ; ret 0x7420
0x00000000004774bd : adc al, 0xf7 ; ret
0x000000000047d6dd : adc al, 0xfb ; call rax
0x0000000000416a16 : adc al, 1 ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x000000000046caf0 : adc al, 9 ; ret 0x8b48
0x000000000042fc97 : adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042fd01 : adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000400fba : adc al, byte ptr [rdx] ; add byte ptr [rax], al ; call qword ptr [rbx + 0x10]
0x00000000004096f7 : adc al, ch ; ret
0x00000000004165b0 : adc al, ch ; ret 0xfe9e
0x00000000004412d8 : adc al, ch ; ret 0xffba
0x000000000047d6d9 : adc bh, bl ; call rax
0x0000000000416d5a : adc bh, byte ptr [rbx + 0xf480001] ; ret 0x66c3
0x000000000045f1ff : adc bh, dl ; dec dword ptr [rax + 1] ; ret
0x00000000004995b1 : adc bl, bh ; call qword ptr [rcx]
0x000000000047d6d5 : adc bl, bh ; call rax
0x0000000000433385 : adc bl, ch ; call 0xffffffffc413bcda
0x00000000004332a5 : adc bl, ch ; call 0xffffffffc43bbbfa
0x000000000046dec2 : adc bl, ch ; jno 0x46df18 ; shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x00000000004367f6 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x0000000000436867 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000004367c7 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x00000000004367f5 : adc bl, r14b ; movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x000000000046acca : adc byte ptr [r11 + 0x5d], bl ; pop r12 ; ret
0x000000000040fc15 : adc byte ptr [r11 + 0x5d], r11b ; ret
0x000000000040bda6 : adc byte ptr [r11 + 6], r14b ; movzx eax, byte ptr [rax] ; ret
0x000000000046d59f : adc byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x00000000004095d2 : adc byte ptr [r8 + 1], r9b ; ret
0x000000000040efdf : adc byte ptr [r8 - 0x77], r9b ; ret 0xf8b
0x0000000000467e3f : adc byte ptr [r8 - 0x7d], cl ; ret
0x00000000004095fd : adc byte ptr [r9 + 0x2b], r9b ; or byte ptr [r8 + 0x29], r9b ; ret
0x0000000000462f47 : adc byte ptr [rax + 0x39], cl ; ret
0x000000000046d5a0 : adc byte ptr [rax + 0x5a], bl ; pop rbx ; ret
0x000000000044374c : adc byte ptr [rax + 0xf], cl ; ret 0x8b49
0x00000000004095d3 : adc byte ptr [rax + 1], cl ; ret
0x00000000004089e7 : adc byte ptr [rax + 1], cl ; ret 0x2b48
0x0000000000400dee : adc byte ptr [rax - 0x39], cl ; ret 0
0x0000000000454148 : adc byte ptr [rax - 0x3f], cl ; cli ; add ch, al ; ret
0x0000000000462145 : adc byte ptr [rax - 0x73], cl ; or al, 0x8e ; add eax, dword ptr [rcx + rdx] ; ret
0x000000000043ccbc : adc byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x00000000004125d2 : adc byte ptr [rax - 0x77], cl ; and al, 8 ; call rcx
0x000000000041254f : adc byte ptr [rax - 0x77], cl ; and al, 8 ; call rsi
0x00000000004107c4 : adc byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000045dba7 : adc byte ptr [rax - 0x77], cl ; jo 0x45dbc5 ; mov qword ptr [rax + 0x40], rcx ; ret
0x000000000044ad61 : adc byte ptr [rax - 0x77], cl ; out dx, eax ; call r12
0x000000000045db67 : adc byte ptr [rax - 0x77], cl ; push rax ; adc byte ptr [rax - 0x77], cl ; ret
0x0000000000441be7 : adc byte ptr [rax - 0x77], cl ; ret
0x00000000004129cb : adc byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000045f6ed : adc byte ptr [rax - 0x77], cl ; ret 0x8949
0x00000000004137ea : adc byte ptr [rax - 0x77], cl ; ret 0x8d4c
0x000000000040efe0 : adc byte ptr [rax - 0x77], cl ; ret 0xf8b
0x0000000000433567 : adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; call qword ptr [rbx]
0x00000000004335a3 : adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret
0x0000000000400fc0 : adc byte ptr [rax - 0x7d], cl ; ret
0x0000000000410d93 : adc byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000445fb0 : adc byte ptr [rax - 0x7d], cl ; ret 0x4902
0x000000000040be14 : adc byte ptr [rax - 1], bh ; jmp 0x40bdd8
0x000000000043154c : adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042fea1 : adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000455d86 : adc byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0xd089
0x000000000043a71c : adc byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000004976ac : adc byte ptr [rax], bh ; add byte ptr [rax], al ; shr byte ptr [rbx], 0xfa ; call qword ptr [rdx]
0x00000000004783e8 : adc byte ptr [rbp + 0x13], dh ; xor eax, eax ; ret
0x0000000000475248 : adc byte ptr [rbp + 0x1d], dh ; xor eax, eax ; ret
0x000000000040bc24 : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000408853 : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000040fc16 : adc byte ptr [rbx + 0x5d], bl ; ret
0x000000000049b92b : adc byte ptr [rbx + 0x80e5802], al ; ret
0x0000000000496d3b : adc byte ptr [rbx + 0x80e6402], al ; ret
0x000000000040bda7 : adc byte ptr [rbx + 6], dh ; movzx eax, byte ptr [rax] ; ret
0x000000000043de23 : adc byte ptr [rbx - 0x1e], dh ; ret
0x000000000040ec02 : adc byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x0000000000499a6d : adc byte ptr [rbx], al ; ret 0xe01
0x00000000004095fe : adc byte ptr [rcx + 0x2b], cl ; or byte ptr [r8 + 0x29], r9b ; ret
0x000000000045e9f3 : adc byte ptr [rcx + rcx*4 - 0x19], cl ; call rbx
0x00000000004481b1 : adc byte ptr [rcx - 0x77], al ; adc al, 0x24 ; jmp 0x448180
0x0000000000443db2 : adc byte ptr [rcx - 0x77], cl ; add ecx, dword ptr [rax - 0x77] ; ret 0x3389
0x0000000000446529 : adc byte ptr [rcx - 0x77], cl ; add ecx, dword ptr [rax - 0x77] ; ret 0x3b89
0x000000000043cacb : adc byte ptr [rcx - 0x77], cl ; ret
0x000000000040fb67 : adc byte ptr [rcx - 0x7d], al ; ret
0x000000000041c86d : adc byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x00000000004063e4 : adc byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000043af49 : adc byte ptr [rcx], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000047e684 : adc byte ptr [rcx], al ; cld ; push rax ; add ah, bh ; call rax
0x000000000040ec05 : adc byte ptr [rcx], ch ; rol bl, 1 ; mov eax, 0xffffffff ; ret
0x0000000000409f47 : adc byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000004370d3 : adc byte ptr [rdi], cl ; test esi, edx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x000000000041cc51 : adc byte ptr [rdi], cl ; xchg ah, bl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000041cd41 : adc byte ptr [rdi], cl ; xchg ah, ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000041cb61 : adc byte ptr [rdi], cl ; xchg ah, cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000041d5a9 : adc byte ptr [rdi], cl ; xchg byte ptr [rax + rax - 0x7cb80000], al ; ret 0xeb10
0x000000000041d101 : adc byte ptr [rdi], cl ; xchg byte ptr [rax - 0x7cb80000], ch ; ret 0xeb10
0x000000000041c891 : adc byte ptr [rdi], cl ; xchg byte ptr [rbp + rcx - 0x7cb80000], bl ; ret 0xeb10
0x000000000041d2e1 : adc byte ptr [rdi], cl ; xchg byte ptr [rbx + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000041ca71 : adc byte ptr [rdi], cl ; xchg byte ptr [rbx + rcx - 0x7cb80000], bh ; ret 0xeb10
0x000000000041d4c1 : adc byte ptr [rdi], cl ; xchg byte ptr [rcx + rax], ch ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000041d3d1 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000041cd13 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx], bl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000041ce03 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx], ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000041cc23 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx], cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000041c981 : adc byte ptr [rdi], cl ; xchg byte ptr [rsp + rcx - 0x7cb80000], ch ; ret 0xeb10
0x000000000041cb33 : adc byte ptr [rdi], cl ; xchg dl, bh ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000041c953 : adc byte ptr [rdi], cl ; xchg dl, bl ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000041ca43 : adc byte ptr [rdi], cl ; xchg dl, ch ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000041c863 : adc byte ptr [rdi], cl ; xchg dl, cl ; or eax, 0x83480000 ; ret 0x4910
0x000000000043c289 : adc byte ptr [rdi], cl ; xchg eax, esp ; ret 0x2044
0x00000000004995ac : adc byte ptr [rdi], dl ; add byte ptr [rax], al ; adc bl, bh ; call qword ptr [rcx]
0x0000000000495687 : adc byte ptr [rdx + 0xe], al ; or byte ptr [rax + 0xb], cl ; add dh, byte ptr [rcx + 0xa] ; ret
0x0000000000420429 : adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000041f36b : adc byte ptr [rdx], cl ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000048c5cc : adc byte ptr [rip + 0x448fffd], al ; std ; call qword ptr [rax]
0x000000000048c584 : adc byte ptr [rip + 0x458fffd], al ; std ; call qword ptr [rax]
0x000000000048c50c : adc byte ptr [rip + 0x4a0fffd], al ; std ; call qword ptr [rax]
0x000000000048c54c : adc byte ptr [rip + 0x4c8fffd], al ; std ; call qword ptr [rax]
0x000000000048c560 : adc byte ptr [rip + 0x4d8fffd], al ; std ; call qword ptr [rax]
0x000000000048c524 : adc byte ptr [rip + 0x510fffd], al ; std ; call qword ptr [rax]
0x000000000041f21a : adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret
0x000000000041e815 : adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000416f45 : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000042b46b : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x0000000000497290 : adc byte ptr [rsi], bh ; stc ; call qword ptr [rax]
0x000000000047d250 : adc ch, 0xfa ; call qword ptr [rax]
0x000000000047d680 : adc ch, ah ; cli ; jmp qword ptr [rax]
0x000000000041693a : adc ch, byte ptr [rbp] ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x000000000041044f : adc ch, byte ptr [rcx] ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000410445 : adc ch, byte ptr [rcx] ; add byte ptr [rax + 1], cl ; ret
0x000000000046f49f : adc cl, byte ptr [rax - 0x7d] ; ret 0x4801
0x0000000000433295 : adc cl, byte ptr [rax - 1] ; ret 0x2288
0x0000000000470a6a : adc cl, byte ptr [rcx + 0x48b48d8] ; ret 0x8b48
0x000000000045f1ca : adc cl, byte ptr [rcx] ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x00000000004604fa : adc cl, byte ptr [rdx] ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x0000000000412006 : adc dh, dh ; ret 0xf0f
0x000000000045d26b : adc dword ptr [rax + 0x39], ecx ; ret 0x3873
0x000000000044a53d : adc dword ptr [rax - 0x39], ecx ; ret 0xffe0
0x00000000004095ef : adc dword ptr [rax - 0x3f], ecx ; cli ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x2948
0x000000000040498f : adc dword ptr [rax - 0x7d], ecx ; ret
0x000000000043154b : adc dword ptr [rax], 0x83480000 ; ret 0x4910
0x000000000042fe37 : adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043144f : adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000439698 : adc dword ptr [rbx], eax ; ret
0x0000000000439611 : adc dword ptr [rbx], esp ; ret
0x0000000000468066 : adc dword ptr [rcx + 0x39], ecx ; ret 0x840f
0x000000000042ad97 : adc dword ptr [rcx + 7], edi ; ret
0x000000000040f9ee : adc dword ptr [rcx + rax*2 + 0x48], esi ; mov dword ptr [rsi], ecx ; ret
0x000000000043960c : adc dword ptr [rcx - 0x30], eax ; movups xmmword ptr [r11], xmm4 ; ret
0x000000000042aa32 : adc dword ptr [rcx - 1], ebx ; ret
0x000000000042a9f6 : adc dword ptr [rcx - 1], edi ; ret
0x0000000000439693 : adc dword ptr [rdi + 0x30], edi ; movups xmmword ptr [r11], xmm8 ; ret
0x00000000004393f3 : adc dword ptr [rdi + rdx - 0x10], ecx ; ret
0x0000000000439575 : adc dword ptr [rdi + rdx - 0x10], edx ; movups xmmword ptr [rdi + rdx - 0x20], xmm3 ; ret
0x000000000043957a : adc dword ptr [rdi + rdx - 0x20], ebx ; ret
0x0000000000439552 : adc dword ptr [rdi + rdx - 0x30], esi ; movups xmmword ptr [rdi + rdx - 0x40], xmm7 ; ret
0x0000000000439557 : adc dword ptr [rdi + rdx - 0x40], edi ; ret
0x000000000042aef9 : adc dword ptr [rdi - 8], edi ; ret
0x00000000004393f0 : adc dword ptr [rdi], eax ; movups xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x00000000004391ec : adc dword ptr [rdi], edx ; vmovups zmmword ptr [rsi - 0x40], zmm2 ; ret
0x0000000000415e5b : adc dword ptr [rdx], eax ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x000000000043931f : adc dword ptr [rsi + 3], edx ; ret
0x00000000004393bc : adc dword ptr [rsi + 7], edx ; ret
0x00000000004391be : adc dword ptr [rsi - 1], edx ; ret
0x00000000004750c6 : adc dword ptr [rsp - 0x28], eax ; ret
0x000000000042fe36 : adc dword ptr es:[rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000416a14 : adc eax, 0x11407 ; cmovne rax, rdx ; ret
0x0000000000415ec0 : adc eax, 0x1d4cb ; cmovne rax, rdx ; ret
0x0000000000416bf0 : adc eax, 0x1df4b ; cmovne rax, rdx ; ret
0x0000000000416985 : adc eax, 0x209c6 ; cmovne rax, rdx ; ret
0x0000000000415e59 : adc eax, 0x211d2 ; cmovne rax, rdx ; ret
0x000000000046d6a5 : adc eax, 0x2353b6 ; mov qword ptr [rax], rdx ; pop rbx ; ret
0x000000000044a519 : adc eax, 0x2584ba ; je 0x44a530 ; ret
0x0000000000415e90 : adc eax, 0x25cb ; cmovne rax, rdx ; ret
0x000000000043f0b7 : adc eax, 0x26193c ; pop rbx ; ret
0x000000000040f853 : adc eax, 0x291ef8 ; ret
0x0000000000460c1b : adc eax, 0x30 ; cmovne rax, rdx ; ret
0x0000000000467722 : adc eax, 0x4000003 ; xor eax, eax ; ret
0x0000000000415f9a : adc eax, 0x4f71 ; cmovne rax, rdx ; ret
0x000000000042f9c1 : adc eax, 0x83480000 ; ret 0xe910
0x0000000000464f4d : adc eax, 0x89000003 ; ret 0xe8c0
0x00000000004610ea : adc eax, 0xe180d188 ; pcmpeqb mm3, qword ptr [rsi] ; ret
0x0000000000416cb4 : adc eax, 0xe697 ; cmovne rax, rdx ; ret
0x0000000000416b74 : adc eax, 0xe7b7 ; cmovne rax, rdx ; ret
0x000000000043a244 : adc eax, 0xf880272 ; ret
0x0000000000460565 : adc eax, 0xfffd9e86 ; cmove rax, rdx ; ret
0x00000000004312ae : adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000046efc9 : adc eax, eax ; ret
0x000000000046f106 : adc eax, edx ; pop rbp ; pop rbx ; ret
0x0000000000490025 : adc ebp, dword ptr [rbx] ; fstp dword ptr [rbx + 0x4a315a58] ; ret 0x1b49
0x0000000000402308 : adc ebp, dword ptr [rdx] ; add byte ptr [rbp + 0xa], dh ; jmp 0x40233a
0x000000000040ab17 : adc ebx, dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000046214c : adc ebx, esi ; ret
0x000000000040de7a : adc ecx, dword ptr [rax - 0x7b] ; push qword ptr [rbp + rax - 0xa] ; ret 0x7401
0x0000000000407031 : adc ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000447bc4 : adc ecx, dword ptr [rcx + 0x29d231fb] ; ret
0x000000000046ab6e : adc edi, dword ptr [rcx] ; ret 0x840f
0x000000000046ac0b : adc edi, dword ptr [rcx] ; ret 0xc74
0x0000000000499221 : adc edi, esi ; jmp qword ptr [rdi]
0x000000000049153e : adc esi, dword ptr [rbp - 0x60001a67] ; mov dh, 0xc7 ; ret 0xe71f
0x000000000040d5a3 : adc esi, dword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x000000000047825c : adc esi, dword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x000000000040a689 : adc esi, dword ptr [rsp + rdx - 0xa] ; ret 0x7420
0x000000000047d944 : adc esi, ecx ; sti ; call qword ptr [rcx]
0x0000000000408620 : adc esi, esi ; ret 0x7520
0x000000000042ad96 : adc qword ptr [rcx + 7], rdi ; ret
0x000000000042aa31 : adc qword ptr [rcx - 1], rbx ; ret
0x000000000042a9f5 : adc qword ptr [rcx - 1], rdi ; ret
0x000000000042aef8 : adc qword ptr [rdi - 8], rdi ; ret
0x000000000043931e : adc qword ptr [rsi + 3], rdx ; ret
0x00000000004393bb : adc qword ptr [rsi + 7], rdx ; ret
0x00000000004391bd : adc qword ptr [rsi - 1], rdx ; ret
0x000000000046f105 : adc rax, rdx ; pop rbp ; pop rbx ; ret
0x0000000000496bcb : add ah, ah ; call 0x30c6bce
0x000000000049769b : add ah, ah ; sub bh, dl ; jmp rbx
0x000000000049764b : add ah, al ; sub bh, dl ; call qword ptr [rdx]
0x000000000043a66e : add ah, bh ; add eax, dword ptr [rax] ; pop rbx ; ret
0x000000000047e689 : add ah, bh ; call rax
0x000000000043a74b : add ah, bh ; inc dword ptr [rbx] ; div ecx ; pop rbx ; mov eax, eax ; ret
0x000000000043a6b9 : add ah, bh ; inc dword ptr [rbx] ; pop rbx ; ret
0x0000000000499897 : add ah, bh ; pop rcx ; add byte ptr [rax], al ; test byte ptr [rbx], bl ; sti ; call qword ptr [rdx]
0x0000000000498413 : add ah, bl ; insb byte ptr [rdi], dx ; cli ; jmp qword ptr [rdx]
0x000000000043931a : add ah, byte ptr [rdx - 0xf] ; jl 0x43936f ; adc dword ptr [rsi + 3], edx ; ret
0x0000000000496d3d : add ah, byte ptr [rsi + rcx + 8] ; ret
0x00000000004975d3 : add ah, ch ; and edx, edi ; call rsp
0x000000000049925b : add ah, dh ; hlt ; cli ; jmp rax
0x00000000004009c9 : add ah, dh ; nop dword ptr [rax + rax] ; ret
0x000000000049cdab : add ah, dl ; pop rdi ; std ; jmp qword ptr [rdx]
0x0000000000409170 : add al, 0 ; add byte ptr [rax + 1], cl ; ret
0x000000000041d1c7 : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043216f : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000041d1f5 : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000478380 : add al, 0 ; add byte ptr [rax], al ; jne 0x4783a7 ; ret
0x0000000000461173 : add al, 0 ; add byte ptr [rax], al ; ret
0x000000000045ef80 : add al, 0 ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000465efa : add al, 0 ; add byte ptr [rbx - 0x76b7ffbb], cl ; ret 0x314c
0x0000000000416965 : add al, 0 ; add byte ptr [rsi - 9], dh ; ret 0
0x000000000043b5d1 : add al, 0 ; movsxd rax, dword ptr [rdx + rbx*4] ; add rax, rdx ; jmp rax
0x000000000043a615 : add al, 0 ; movsxd rax, dword ptr [rsi + rdi*4] ; add rax, rsi ; jmp rax
0x000000000046214b : add al, 0x11 ; ret
0x000000000043a704 : add al, 0x12 ; pop rbx ; and eax, 0x7ff80000 ; ret
0x00000000004181f1 : add al, 0x17 ; movzx edx, byte ptr [rsi + rdx] ; sub eax, edx ; ret
0x000000000041818a : add al, 0x17 ; sub eax, ecx ; ret
0x0000000000474fc7 : add al, 0x24 ; add rsp, 0x38 ; pop rbx ; pop r14 ; ret
0x0000000000474ccb : add al, 0x24 ; add rsp, 0x38 ; ret
0x000000000043bea8 : add al, 0x24 ; jmp 0x43be49
0x000000000044a57a : add al, 0x25 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000046ef1b : add al, 0x25 ; sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x46ef67 ; leave ; ret
0x0000000000406f37 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000045fcce : add al, 0x31 ; ret
0x00000000004972a0 : add al, 0x34 ; add byte ptr [rax], al ; or al, 0x3e ; stc ; jmp qword ptr [rsi]
0x000000000045fbca : add al, 0x37 ; ret
0x000000000040e27f : add al, 0x3a ; ret
0x000000000046b436 : add al, 0x48 ; cmp ecx, dword ptr [rdi + rsi] ; jae 0x46b3ea ; xor eax, eax ; ret
0x0000000000436d2b : add al, 0x48 ; lea eax, dword ptr [rdi + 5] ; ret
0x0000000000436239 : add al, 0x48 ; lea eax, dword ptr [rdx + 4] ; ret
0x000000000043624b : add al, 0x48 ; lea eax, dword ptr [rdx + 5] ; ret
0x00000000004774d0 : add al, 0x48 ; mov dword ptr [rax], edx ; ret
0x000000000042793a : add al, 0x48 ; mov dword ptr [rdi], ecx ; ret
0x0000000000434a79 : add al, 0x48 ; mov eax, edi ; ret
0x000000000045ffa4 : add al, 0x48 ; xor eax, eax ; ret
0x0000000000460858 : add al, 0x4c ; lea ecx, dword ptr [rsp + 0x20] ; call rbx
0x0000000000436247 : add al, 0x66 ; mov dword ptr [rdx + 4], eax ; lea rax, qword ptr [rdx + 5] ; ret
0x0000000000434a87 : add al, 0x66 ; mov dword ptr [rdx + 4], eax ; mov rax, rdi ; ret
0x0000000000447bc2 : add al, 0x72 ; adc ecx, dword ptr [rcx + 0x29d231fb] ; ret
0x000000000045c038 : add al, 0x81 ; add rax, rcx ; jmp rax
0x000000000042f6ab : add al, 0x81 ; mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x0000000000430f83 : add al, 0x81 ; sub eax, edx ; ret
0x0000000000401b93 : add al, 0x82 ; add rax, rdx ; jmp rax
0x000000000043abc8 : add al, 0x82 ; sub eax, dword ptr [rdx + rcx*4] ; je 0x43abb8 ; ret
0x000000000042d2b7 : add al, 0x82 ; sub eax, ecx ; ret
0x000000000043f189 : add al, 0x83 ; add rax, rbx ; jmp rax
0x000000000047636a : add al, 0x84 ; add rax, r12 ; jmp rax
0x0000000000460c49 : add al, 0x85 ; sal byte ptr [rbp - 0xe], cl ; ret
0x0000000000476c6b : add al, 0x86 ; add rax, r14 ; jmp rax
0x000000000045c74d : add al, 0x86 ; add rax, rsi ; jmp rax
0x0000000000475319 : add al, 0x87 ; add rax, r15 ; jmp rax
0x0000000000436236 : add al, 0x88 ; add al, 0x48 ; lea eax, dword ptr [rdx + 4] ; ret
0x0000000000434a76 : add al, 0x88 ; add al, 0x48 ; mov eax, edi ; ret
0x00000000004750f3 : add al, 0x88 ; add rax, r8 ; jmp rax
0x000000000043abcb : add al, 0x8a ; je 0x43abb5 ; ret
0x000000000043a6d3 : add al, 0x96 ; add rax, rsi ; jmp rax
0x00000000004768a3 : add al, 0x99 ; add rax, r9 ; jmp rax
0x000000000043b5d5 : add al, 0x9a ; add rax, rdx ; jmp rax
0x0000000000467c4f : add al, 0xa6 ; add rax, rsi ; jmp rax
0x000000000043a619 : add al, 0xbe ; add rax, rsi ; jmp rax
0x000000000044f075 : add al, 0xc6 ; jmp rax
0x000000000046f05d : add al, 0xde ; lea r9, qword ptr [rdx] ; jmp 0x46f0b9
0x0000000000472bbd : add al, 0xde ; lea r9, qword ptr [rdx] ; jmp 0x472c19
0x0000000000448fe8 : add al, 0xe8 ; test rax, rax ; je 0x448ff8 ; call rax
0x000000000047a681 : add al, 0xe8 ; test rax, rax ; je 0x47a691 ; call rax
0x0000000000403d8a : add al, 0xeb ; ret
0x000000000046f858 : add al, 0xf ; mov dh, 0xc0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041c7d6 : add al, 0xf ; movzx edx, byte ptr [rsi + rcx] ; sub eax, edx ; ret
0x000000000043912b : add al, 0xf ; sub rax, rsi ; ret
0x0000000000459e91 : add al, 0xf0 ; jmp rax
0x0000000000427ca3 : add al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x000000000043bc4b : add al, 0xf3 ; ret
0x000000000044f412 : add al, 0xf8 ; jmp rax
0x000000000047d6bd : add al, 0xfb ; call rax
0x000000000048c509 : add al, 0xfd ; call qword ptr [rax]
0x000000000048c51d : add al, 0xfd ; lcall ptr [rax + 4] ; std ; call qword ptr [rax]
0x00000000004941a0 : add al, 3 ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; fcomi st(6) ; call rsp
0x000000000041fa77 : add al, 3 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000043269d : add al, 7 ; cmp byte ptr [rax], sil ; cmovne rax, rdx ; ret
0x000000000044f071 : add al, 7 ; mov rax, qword ptr [rsi + rax*8] ; jmp rax
0x00000000004328b8 : add al, 7 ; ret
0x000000000041835f : add al, 8 ; movzx edx, byte ptr [rdx + rcx] ; sub eax, edx ; ret
0x000000000049a99f : add al, ah ; cld ; jmp qword ptr [rbx]
0x00000000004981ef : add al, ah ; pop rdx ; cli ; call qword ptr [rdx]
0x0000000000487867 : add al, al ; sldt word ptr [rax] ; ret
0x00000000004976af : add al, al ; sub edi, edx ; call qword ptr [rdx]
0x000000000049a9b7 : add al, bh ; cld ; jmp qword ptr [rbx]
0x0000000000499367 : add al, bh ; idiv edx ; call rbx
0x000000000043a765 : add al, bh ; jg 0x43a767 ; int1 ; mov eax, eax ; ret
0x000000000049d127 : add al, bh ; jl 0x49d12c ; call qword ptr [rdx]
0x000000000049db93 : add al, bh ; pushfq ; add byte ptr [rax], al ; cwde ; ret 0xfffd
0x000000000049c773 : add al, bl ; mov byte ptr [rax], al ; add byte ptr [rax], bl ; xor bh, ch ; jmp qword ptr [rdx]
0x0000000000497307 : add al, bl ; pushfq ; stc ; call qword ptr [rax]
0x0000000000433291 : add al, byte ptr [rax + rax*8 - 0xb7ed8c] ; ret 0x2288
0x0000000000400fbb : add al, byte ptr [rax] ; add bh, bh ; push rbx ; adc byte ptr [rax - 0x7d], cl ; ret
0x0000000000444487 : add al, byte ptr [rax] ; add bh, dh ; ret 0xf800
0x0000000000445cf7 : add al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000466b92 : add al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret 0xed75
0x000000000044df7b : add al, byte ptr [rax] ; add byte ptr [rax + 0x63], cl ; ret
0x000000000041d6d2 : add al, byte ptr [rax] ; add byte ptr [rax + 1], cl ; clc ; add rax, rcx ; ret
0x0000000000472a9e : add al, byte ptr [rax] ; add byte ptr [rax + 1], cl ; ret 0x3a83
0x000000000044a60d : add al, byte ptr [rax] ; add byte ptr [rax + rcx*2 - 0x77], ah ; adc dword ptr [rax - 0x39], ecx ; ret 0xffe0
0x0000000000400fa5 : add al, byte ptr [rax] ; add byte ptr [rax - 0x39], cl ; ret
0x00000000004565ed : add al, byte ptr [rax] ; add byte ptr [rax - 0x39], cl ; ret 0x2b40
0x0000000000467e3a : add al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; adc byte ptr [r8 - 0x7d], cl ; ret
0x0000000000439c54 : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000041d3a7 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000430d41 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000041d3d5 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000044a502 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7f], cl ; ret 0x200
0x00000000004696e6 : add al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x000000000043ca29 : add al, byte ptr [rax] ; add byte ptr [rax], al ; jmp rax
0x0000000000460f04 : add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000004618aa : add al, byte ptr [rax] ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004386d4 : add al, byte ptr [rax] ; add byte ptr [rbx - 0x7bf0ed07], al ; ret 2
0x0000000000470594 : add al, byte ptr [rax] ; add byte ptr [rcx + 0xc8b48d8], cl ; ret 0xb60f
0x000000000046cbe3 : add al, byte ptr [rax] ; add byte ptr [rcx - 0x77], al ; ret
0x0000000000416913 : add al, byte ptr [rax] ; cmove rax, rdx ; ret
0x0000000000415e5c : add al, byte ptr [rax] ; cmovne rax, rdx ; ret
0x0000000000465791 : add al, byte ptr [rax] ; mov edx, 0x870 ; call 0x401a29
0x00000000004657ce : add al, byte ptr [rax] ; mov edx, 0x871 ; call 0x401a29
0x000000000045c7b1 : add al, byte ptr [rax] ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x0000000000467c4b : add al, byte ptr [rax] ; movsxd rax, dword ptr [rsi + r12*4] ; add rax, rsi ; jmp rax
0x000000000045c749 : add al, byte ptr [rax] ; movsxd rax, dword ptr [rsi + rax*4] ; add rax, rsi ; jmp rax
0x000000000043f0ca : add al, byte ptr [rax] ; xor edx, edx ; cmp ebx, eax ; setne dl ; jmp 0x43f0be
0x0000000000457858 : add al, byte ptr [rcx + 0x29] ; ret
0x000000000043dc0e : add al, byte ptr [rcx + 0x39] ; ret
0x00000000004966a1 : add al, byte ptr [rdx + 0xe] ; nop ; add dword ptr [rsi + rcx + 0x10], ecx ; ret
0x0000000000416ce1 : add al, byte ptr cs:[rax] ; cmovne rax, rdx ; ret
0x0000000000416acd : add al, byte ptr ss:[rax] ; cmovne rax, rdx ; ret
0x00000000004014f5 : add al, ch ; add eax, 0x390003a6 ; ret
0x000000000044994d : add al, ch ; int 0x80
0x00000000004018fb : add al, ch ; jmp rsi
0x0000000000494883 : add al, ch ; or dword ptr [rax], eax ; add byte ptr [rax], bl ; sub dh, bh ; call qword ptr [rax]
0x0000000000499883 : add al, ch ; pop rcx ; add byte ptr [rax], al ; mov byte ptr [rbx], bl ; sti ; call qword ptr [rax]
0x00000000004981d7 : add al, ch ; pop rdx ; cli ; call qword ptr [rax]
0x0000000000499d83 : add al, ch ; pop rsi ; add byte ptr [rax], al ; cwde ; ret
0x0000000000499583 : add al, ch ; push rsi ; add byte ptr [rax], al ; call 0x124990a4
0x0000000000408157 : add al, ch ; ret
0x0000000000472238 : add al, ch ; ret 0xb8dd
0x0000000000403238 : add al, ch ; ret 0xbfcd
0x0000000000404ff8 : add al, ch ; ret 0xffb4
0x00000000004657d4 : add al, ch ; ret 0xfff9
0x000000000045e31f : add al, ch ; sti ; ret 0xfffa
0x000000000044e2ef : add al, ch ; sti ; ret 0xfffb
0x0000000000497687 : add al, ch ; sub bh, dl ; call qword ptr [rax]
0x00000000004976d7 : add al, ch ; sub edi, edx ; call qword ptr [rbx]
0x0000000000413bc8 : add al, ch ; xchg eax, edx ; ret 0xffff
0x0000000000498163 : add al, cl ; add byte ptr [rax], al ; pop rdx ; cli ; jmp qword ptr [rdi]
0x00000000004991d7 : add al, cl ; hlt ; cli ; call qword ptr [rdx]
0x0000000000499363 : add al, cl ; push rsp ; add byte ptr [rax], al ; clc ; idiv edx ; call rbx
0x000000000049921f : add al, dh ; adc edi, esi ; jmp qword ptr [rdi]
0x000000000049c78b : add al, dh ; mov byte ptr [rax], al ; add byte ptr [rax], dh ; xor bh, ch ; jmp rdx
0x000000000049ad3f : add al, dh ; pop rsi ; cld ; jmp qword ptr [rax]
0x000000000049728b : add al, dh ; xor eax, dword ptr [rax] ; add byte ptr [rax], dl ; stc ; call qword ptr [rax]
0x000000000049986b : add al, dl ; pop rcx ; add byte ptr [rax], al ; sbb byte ptr [rbx], 0xfb ; call qword ptr [rbx]
0x000000000049956b : add al, dl ; push rsi ; add byte ptr [rax], al ; loopne 0x499589 ; sti ; call qword ptr [rdi]
0x000000000049be6e : add bh, ah ; ret
0x00000000004404cf : add bh, al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000044d29f : add bh, al ; test dword ptr [rax], ecx ; idiv edi ; call qword ptr [rax]
0x000000000040702f : add bh, bh ; adc ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000400fbd : add bh, bh ; push rbx ; adc byte ptr [rax - 0x7d], cl ; ret
0x0000000000468396 : add bh, bh ; ror byte ptr [rax - 0x7d], 1 ; ret
0x000000000047044f : add bh, bh ; ror dword ptr [rax - 0x77], cl ; ret
0x000000000047d6b9 : add bh, bl ; call rax
0x000000000046f199 : add bh, byte ptr [rax + 1] ; ret
0x000000000046f2f4 : add bh, byte ptr [rax + 2] ; ret
0x000000000043b96b : add bh, byte ptr [rax - 1] ; ret
0x0000000000438aa2 : add bh, byte ptr [rcx] ; enter -0x3fe7, -0x7d ; fdivr st(7) ; ret
0x0000000000400d8a : add bh, dh ; ret 0
0x0000000000444489 : add bh, dh ; ret 0xf800
0x000000000040757f : add bh, dh ; ret 0xffef
0x000000000047d67c : add bl, ah ; cli ; call qword ptr [rax]
0x0000000000460f01 : add bl, al ; mov eax, 2 ; ret
0x0000000000472aba : add bl, al ; nop dword ptr [rax] ; xor eax, eax ; ret
0x000000000047d6b5 : add bl, bh ; call rax
0x0000000000494525 : add bl, byte ptr [rax + 0xa] ; ret
0x00000000004744fb : add bl, ch ; add eax, 0x1489066 ; ret 0xb70f
0x0000000000413920 : add bl, ch ; ret
0x00000000004750c3 : add bl, dh ; movups xmmword ptr [rsp - 0x28], xmm0 ; ret
0x00000000004009cf : add bl, dh ; ret
0x000000000040582e : add bl, sil ; ret
0x000000000045f226 : add byte ptr [r8 - 0x77], r9b ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000465efe : add byte ptr [r8 - 0x77], r9b ; ret 0x314c
0x00000000004981d5 : add byte ptr [r8], al ; call 0x11497c3d
0x00000000004981ed : add byte ptr [r8], al ; loopne 0x498252 ; cli ; call qword ptr [rdx]
0x0000000000497f9d : add byte ptr [r8], al ; push rsp ; cli ; call qword ptr [rdx]
0x0000000000498225 : add byte ptr [r8], al ; sbb byte ptr [rbx - 6], bl ; call qword ptr [rcx]
0x000000000044253d : add byte ptr [r8], r8b ; add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret
0x0000000000415f9c : add byte ptr [r8], r8b ; cmovne rax, rdx ; ret
0x000000000043727e : add byte ptr [rax + 0x1478d48], dl ; ret
0x0000000000415d9f : add byte ptr [rax + 0x16], bh ; ret
0x0000000000498223 : add byte ptr [rax + 0x18000043], cl ; pop rbx ; cli ; call qword ptr [rcx]
0x000000000040a0b8 : add byte ptr [rax + 0x29], cl ; ret
0x0000000000444663 : add byte ptr [rax + 0x29], cl ; ret 0x8348
0x0000000000454141 : add byte ptr [rax + 0x29], cl ; ret 0x8349
0x0000000000466667 : add byte ptr [rax + 0x29], cl ; ret 0x8d48
0x000000000049741b : add byte ptr [rax + 0x30000035], al ; out dx, eax ; stc ; jmp qword ptr [rbx]
0x000000000040700f : add byte ptr [rax + 0x39], cl ; ret
0x00000000004752c3 : add byte ptr [rax + 0x39], cl ; ret 0x830f
0x000000000040b36f : add byte ptr [rax + 0x39], cl ; ret 0x850f
0x0000000000475358 : add byte ptr [rax + 0x39], cl ; ret 0x9272
0x000000000046b5ad : add byte ptr [rax + 0x39], cl ; ret 0xd589
0x0000000000466b94 : add byte ptr [rax + 0x39], cl ; ret 0xed75
0x000000000046466a : add byte ptr [rax + 0x39], cl ; ret 0xf48
0x000000000043de1f : add byte ptr [rax + 0x3b], cl ; push rdi ; adc byte ptr [rbx - 0x1e], dh ; ret
0x0000000000497adb : add byte ptr [rax + 0x3c], al ; add byte ptr [rax], al ; loopne 0x497b27 ; cli ; jmp qword ptr [rcx]
0x0000000000497dfb : add byte ptr [rax + 0x3f], ah ; add byte ptr [rax], al ; push rax ; cli ; jmp qword ptr [rcx]
0x000000000049a6df : add byte ptr [rax + 0x41], al ; cld ; jmp qword ptr [rdx]
0x00000000004981eb : add byte ptr [rax + 0x43], dl ; add byte ptr [rax], al ; loopne 0x498254 ; cli ; call qword ptr [rdx]
0x0000000000497e17 : add byte ptr [rax + 0x4b], ch ; cli ; jmp qword ptr [rcx]
0x0000000000497dff : add byte ptr [rax + 0x4b], dl ; cli ; jmp qword ptr [rcx]
0x0000000000497f9f : add byte ptr [rax + 0x54], al ; cli ; call qword ptr [rdx]
0x0000000000498167 : add byte ptr [rax + 0x5a], cl ; cli ; jmp qword ptr [rdi]
0x0000000000499a0b : add byte ptr [rax + 0x5b], dh ; add byte ptr [rax], al ; and byte ptr [rbx + rdi*8], ah ; call rsp
0x000000000049bf1c : add byte ptr [rax + 0x5f00000], 0xfd ; jmp qword ptr [rcx]
0x0000000000405a1d : add byte ptr [rax + 0x63], cl ; adc al, 0x97 ; add rdx, rdi ; jmp rdx
0x000000000045c0e5 : add byte ptr [rax + 0x63], cl ; add al, 0x81 ; add rax, rcx ; jmp rax
0x0000000000401b90 : add byte ptr [rax + 0x63], cl ; add al, 0x82 ; add rax, rdx ; jmp rax
0x000000000045c74a : add byte ptr [rax + 0x63], cl ; add al, 0x86 ; add rax, rsi ; jmp rax
0x000000000043b5d2 : add byte ptr [rax + 0x63], cl ; add al, 0x9a ; add rax, rdx ; jmp rax
0x000000000043a616 : add byte ptr [rax + 0x63], cl ; add al, 0xbe ; add rax, rsi ; jmp rax
0x00000000004494a0 : add byte ptr [rax + 0x63], cl ; ret
0x000000000045618a : add byte ptr [rax + 0x63], cl ; ret 0x8948
0x0000000000476d93 : add byte ptr [rax + 0x63], cl ; ret 0xbc80
0x000000000045ca2b : add byte ptr [rax + 0x63], cl ; ror dword ptr [rax - 0x75], 4 ; ret 0x8548
0x000000000044c371 : add byte ptr [rax + 0x63], cl ; ror dword ptr [rax - 0x7d], cl ; ret 0x4820
0x0000000000461c4f : add byte ptr [rax + 0x66], bh ; syscall ; ret
0x000000000049a6db : add byte ptr [rax + 0x68], al ; add byte ptr [rax], al ; cld ; jmp qword ptr [rdx]
0x0000000000461c6f : add byte ptr [rax + 0x68], bh ; syscall ; ret
0x0000000000461c5f : add byte ptr [rax + 0x6b], bh ; syscall ; ret
0x0000000000461c7f : add byte ptr [rax + 0x6c], bh ; syscall ; ret
0x000000000049711b : add byte ptr [rax + 0x70000032], al ; jb 0x497123 ; call rsp
0x000000000049711f : add byte ptr [rax + 0x72], dh ; clc ; call rsp
0x000000000049b29f : add byte ptr [rax + 0x74], dl ; cld ; jmp rbx
0x000000000043328f : add byte ptr [rax + 0x74c08402], cl ; adc cl, byte ptr [rax - 1] ; ret 0x2288
0x0000000000436ccf : add byte ptr [rax + 0x78d4837], cl ; ret
0x0000000000498133 : add byte ptr [rax + 0x8000042], bl ; pop rdx ; cli ; jmp qword ptr [rcx]
0x0000000000415db7 : add byte ptr [rax + 0xc], bh ; pop rbx ; ret
0x0000000000416c39 : add byte ptr [rax + 0xf4802e5], al ; ret 0xc3f3
0x000000000043a6e7 : add byte ptr [rax + 0xf48f0e5], al ; ret 0xc35b
0x000000000040ca2f : add byte ptr [rax + 0xf], al ; mov dh, 0xc5 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000045fb35 : add byte ptr [rax + 0xf], cl ; mov ebp, 0xf80148c0 ; ret
0x00000000004418ff : add byte ptr [rax + 0xf], cl ; mov esi, 0x83480147 ; ret
0x00000000004128b4 : add byte ptr [rax + 0xf], cl ; ret
0x0000000000466d16 : add byte ptr [rax + 0xf], cl ; ret 0x3e80
0x0000000000415ee4 : add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x00000000004442c2 : add byte ptr [rax + 0xf], cl ; ret 0x8948
0x000000000041382c : add byte ptr [rax + 0xf], cl ; ret 0x894c
0x0000000000466d65 : add byte ptr [rax + 0xf], cl ; ret 0x8b48
0x000000000043a65a : add byte ptr [rax + 0xf], cl ; ret 0xc35b
0x0000000000415e5d : add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x0000000000444e1d : add byte ptr [rax + 0xf], cl ; ret 0xf685
0x00000000004169fd : add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x000000000046f15c : add byte ptr [rax + 1], bh ; ret
0x000000000041d6d4 : add byte ptr [rax + 1], cl ; clc ; add rax, rcx ; ret
0x0000000000402187 : add byte ptr [rax + 1], cl ; ret
0x000000000046e70f : add byte ptr [rax + 1], cl ; ret 0x149
0x0000000000472aa0 : add byte ptr [rax + 1], cl ; ret 0x3a83
0x000000000046f36d : add byte ptr [rax + 2], bh ; ret
0x00000000004629c0 : add byte ptr [rax + 9], cl ; ret 0x850f
0x000000000048680b : add byte ptr [rax + rax + 0xbf0000], bh ; add byte ptr [rax], al ; ret 0
0x000000000049bf2f : add byte ptr [rax + rax*4 + 0x60c0000], dl ; std ; call rdx
0x000000000045ef7f : add byte ptr [rax + rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000416964 : add byte ptr [rax + rax], al ; add byte ptr [rsi - 9], dh ; ret 0
0x000000000041391c : add byte ptr [rax + rax], cl ; add byte ptr [rax], al ; jmp 0x4138ec
0x0000000000413609 : add byte ptr [rax + rax], cl ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000460547 : add byte ptr [rax + rax], cl ; add byte ptr [rbx + rax - 0xd], dh ; ret
0x000000000049b29c : add byte ptr [rax + rax], dh ; push rax ; je 0x49b2a6 ; jmp rbx
0x000000000044a51d : add byte ptr [rax + rcx - 0xd], dh ; ret
0x000000000044a60f : add byte ptr [rax + rcx*2 - 0x77], ah ; adc dword ptr [rax - 0x39], ecx ; ret 0xffe0
0x00000000004879b7 : add byte ptr [rax + rdx + 0x10bf0000], bh ; add byte ptr [rax], al ; ret 0x10
0x00000000004675d4 : add byte ptr [rax - 0x168b7f80], 0x89 ; ret 0xeac1
0x0000000000400fa7 : add byte ptr [rax - 0x39], cl ; ret
0x0000000000407fb3 : add byte ptr [rax - 0x39], cl ; ret 0x2b40
0x000000000045355d : add byte ptr [rax - 0x39], cl ; ret 0x31e8
0x00000000004063ef : add byte ptr [rax - 0x39], cl ; ret 0xffc0
0x000000000041398b : add byte ptr [rax - 0x39], cl ; ret 0xffdf
0x000000000046ffb5 : add byte ptr [rax - 0x39], cl ; ret 0xffff
0x000000000046115f : add byte ptr [rax - 0x39], cl ; rol byte ptr [rbx], 0 ; add byte ptr [rax], al ; ret
0x000000000046119f : add byte ptr [rax - 0x39], cl ; rol byte ptr [rdi], 0 ; add byte ptr [rax], al ; ret
0x000000000046114f : add byte ptr [rax - 0x39], cl ; rol byte ptr [rdx], 0 ; add byte ptr [rax], al ; ret
0x000000000046118f : add byte ptr [rax - 0x39], cl ; rol byte ptr [rsi], 0 ; add byte ptr [rax], al ; ret
0x0000000000447edb : add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x0000000000448810 : add byte ptr [rax - 0x3f], cl ; ret 0x6411
0x000000000044fdaf : add byte ptr [rax - 0x50743], al ; jmp qword ptr [rax]
0x000000000049dbfb : add byte ptr [rax - 0x63], ah ; add byte ptr [rax], al ; mov al, 0xc4 ; std ; jmp qword ptr [rax]
0x000000000047d7b4 : add byte ptr [rax - 0x6fef0005], dl ; sti ; jmp qword ptr [rax]
0x000000000043f07f : add byte ptr [rax - 0x73], cl ; add eax, 0x263199 ; ret
0x0000000000442411 : add byte ptr [rax - 0x73], cl ; add qword ptr [rax - 0x7d], r9 ; ret 0x8b01
0x0000000000412002 : add byte ptr [rax - 0x73], cl ; push rax ; adc dh, dh ; ret 0xf0f
0x00000000004103d5 : add byte ptr [rax - 0x73], cl ; push rcx ; dec dword ptr [rax - 0x7b] ; ret 0x850f
0x0000000000467e3c : add byte ptr [rax - 0x75], cl ; adc byte ptr [r8 - 0x7d], cl ; ret
0x0000000000410d8f : add byte ptr [rax - 0x75], cl ; adc byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000470a67 : add byte ptr [rax - 0x75], cl ; adc cl, byte ptr [rcx + 0x48b48d8] ; ret 0x8b48
0x0000000000474cc8 : add byte ptr [rax - 0x75], cl ; add al, 0x24 ; add rsp, 0x38 ; ret
0x0000000000459e8e : add byte ptr [rax - 0x75], cl ; add al, 0xf0 ; jmp rax
0x000000000044f40f : add byte ptr [rax - 0x75], cl ; add al, 0xf8 ; jmp rax
0x0000000000447f0f : add byte ptr [rax - 0x75], cl ; add eax, 0x25be81 ; ret
0x00000000004405ff : add byte ptr [rax - 0x75], cl ; add eax, 0x264241 ; ret
0x000000000040eebf : add byte ptr [rax - 0x75], cl ; add eax, 0x292179 ; ret
0x00000000004067e7 : add byte ptr [rax - 0x75], cl ; and al, 8 ; call rax
0x000000000044058f : add byte ptr [rax - 0x75], cl ; cmp ecx, dword ptr [rax - 0x7d] ; ret
0x000000000041530f : add byte ptr [rax - 0x75], cl ; je 0x415341 ; sub byte ptr [rax - 0x77], cl ; out dx, eax ; call rax
0x0000000000406f62 : add byte ptr [rax - 0x75], cl ; js 0x406f8c ; call rdx
0x00000000004736b7 : add byte ptr [rax - 0x75], cl ; or cl, byte ptr [rax - 0x7d] ; ret 0xf08
0x0000000000400e6d : add byte ptr [rax - 0x75], cl ; push rax ; and byte ptr [rax + 1], cl ; ret 0xb70f
0x000000000042185f : add byte ptr [rax - 0x75], cl ; push rsi ; clc ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000440d59 : add byte ptr [rax - 0x75], cl ; ret
0x000000000040a1bf : add byte ptr [rax - 0x76b80000], al ; ret
0x000000000046f526 : add byte ptr [rax - 0x77], cl ; add eax, 0x234a5a ; ret
0x0000000000410c5a : add byte ptr [rax - 0x77], cl ; add eax, 0x290b1e ; ret
0x000000000040f7ec : add byte ptr [rax - 0x77], cl ; add eax, 0x291f0c ; ret
0x000000000040f7bc : add byte ptr [rax - 0x77], cl ; add eax, 0x291f44 ; ret
0x000000000040a6d2 : add byte ptr [rax - 0x77], cl ; clc ; ret
0x0000000000471b26 : add byte ptr [rax - 0x77], cl ; cwde ; call 0x43dd67
0x00000000004085d3 : add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000465944 : add byte ptr [rax - 0x77], cl ; fucompi st(0) ; ret
0x000000000047576e : add byte ptr [rax - 0x77], cl ; fucompi st(1) ; ret
0x000000000043de2f : add byte ptr [rax - 0x77], cl ; ja 0x43de59 ; ret
0x000000000040a823 : add byte ptr [rax - 0x77], cl ; mov edx, 0x130 ; pop rbx ; ret
0x0000000000403158 : add byte ptr [rax - 0x77], cl ; ret
0x000000000043b7cb : add byte ptr [rax - 0x77], cl ; ret 0x16e9
0x000000000041442c : add byte ptr [rax - 0x77], cl ; ret 0x1bf
0x000000000046addf : add byte ptr [rax - 0x77], cl ; ret 0x2948
0x0000000000409246 : add byte ptr [rax - 0x77], cl ; ret 0x294c
0x000000000040b2ba : add byte ptr [rax - 0x77], cl ; ret 0x294d
0x0000000000465eff : add byte ptr [rax - 0x77], cl ; ret 0x314c
0x0000000000478b3c : add byte ptr [rax - 0x77], cl ; ret 0x3948
0x000000000043b877 : add byte ptr [rax - 0x77], cl ; ret 0x6ae9
0x0000000000402752 : add byte ptr [rax - 0x77], cl ; ret 0x7be9
0x000000000044e92b : add byte ptr [rax - 0x77], cl ; ret 0x8148
0x000000000041163f : add byte ptr [rax - 0x77], cl ; ret 0x8348
0x00000000004024d2 : add byte ptr [rax - 0x77], cl ; ret 0x8548
0x0000000000447e6c : add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000004163db : add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x000000000047828f : add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x0000000000402aeb : add byte ptr [rax - 0x77], cl ; ret 0xc031
0x000000000045450f : add byte ptr [rax - 0x77], cl ; ret 0xc148
0x000000000046388a : add byte ptr [rax - 0x77], cl ; ret 0xf631
0x000000000043b7e2 : add byte ptr [rax - 0x77], cl ; ret 0xffe9
0x000000000040b9d9 : add byte ptr [rax - 0x77], cl ; ror dword ptr [rax - 0x39], cl ; ret 0x2b40
0x00000000004394b0 : add byte ptr [rax - 0x77], cl ; sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000046d2a1 : add byte ptr [rax - 0x77], cl ; sbb byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x0000000000476eaf : add byte ptr [rax - 0x77], cl ; shr cl, 1 ; ret 0xfffe
0x0000000000467283 : add byte ptr [rax - 0x77], cl ; xchg dword ptr [rax], eax ; add eax, dword ptr [rax] ; add bl, dh ; ret
0x000000000040839c : add byte ptr [rax - 0x77], cl ; xchg eax, ecx ; xor byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x000000000049ab53 : add byte ptr [rax - 0x77ffff94], bh ; cld ; jmp rdx
0x0000000000474da6 : add byte ptr [rax - 0x7ab70000], al ; ret 0x840f
0x000000000045ff9f : add byte ptr [rax - 0x7b], cl ; div byte ptr [rbp + 4] ; xor rax, rax ; ret
0x0000000000455428 : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret 5
0x000000000047aa97 : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + 3], cl ; ret
0x0000000000478fee : add byte ptr [rax - 0x7d], cl ; and al, 0x10 ; or byte ptr [rax - 0x7d], cl ; ret
0x000000000041481f : add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000412cf7 : add byte ptr [rax - 0x7d], cl ; clc ; add cl, byte ptr [rax + 0xf] ; ret 0x8948
0x000000000041280c : add byte ptr [rax - 0x7d], cl ; clc ; add cl, byte ptr [rax + 0xf] ; ret 0x8d44
0x000000000046b3ed : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax + 0xf] ; ret 0x66c3
0x0000000000415e1d : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax + 0xf] ; ret 0x8348
0x00000000004019a9 : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret
0x000000000040d95f : add byte ptr [rax - 0x7d], cl ; jg 0x40d9a5 ; add byte ptr [rcx + rcx - 0xd], dh ; ret
0x000000000045e056 : add byte ptr [rax - 0x7d], cl ; jle 0x45e094 ; add byte ptr [rdx + rax - 0xd], dh ; ret
0x00000000004139ab : add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x00000000004056df : add byte ptr [rax - 0x7d], cl ; ret
0x0000000000438b9f : add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x00000000004076c7 : add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000004704cf : add byte ptr [rax - 0x7d], cl ; ret 0x4808
0x00000000004696ea : add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x000000000044c354 : add byte ptr [rax - 0x7d], cl ; ret 0x481e
0x000000000045f4be : add byte ptr [rax - 0x7d], cl ; ret 0x4901
0x000000000041c869 : add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000047826f : add byte ptr [rax - 0x7d], cl ; ret 0x8001
0x000000000045c63f : add byte ptr [rax - 0x7d], cl ; ret 0x8b04
0x000000000042f823 : add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000041c897 : add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000004451e7 : add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x000000000041829f : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x48], 0x83 ; ret 0x4840
0x00000000004600df : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x49], 0x39 ; ret 0x2774
0x0000000000448d38 : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx], 0x83 ; ret 0x4801
0x000000000040861a : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx], 0x8b ; adc esi, esi ; ret 0x7520
0x0000000000473cea : add byte ptr [rax - 0x7d], cl ; ror byte ptr [rax], 0x83 ; ret 0x3901
0x000000000049bffb : add byte ptr [rax - 0x7f], ah ; add byte ptr [rax], al ; add byte ptr [rcx], cl ; std ; jmp qword ptr [rsi]
0x000000000044a504 : add byte ptr [rax - 0x7f], cl ; ret 0x200
0x00000000004254cb : add byte ptr [rax - 0x7f], cl ; ret 0x80
0x00000000004972df : add byte ptr [rax - 0x7f], dl ; stc ; call qword ptr [rax]
0x000000000049d123 : add byte ptr [rax - 0x7ffff6e], cl ; jl 0x49d130 ; call qword ptr [rdx]
0x0000000000497e2b : add byte ptr [rax - 0x7fffffc1], dl ; cli ; jmp qword ptr [rcx]
0x000000000049ad3b : add byte ptr [rax - 0xfffff92], ah ; pop rsi ; cld ; jmp qword ptr [rax]
0x000000000049921b : add byte ptr [rax - 0xfffffad], al ; adc edi, esi ; jmp qword ptr [rdi]
0x0000000000456357 : add byte ptr [rax - 1], bh ; mov qword ptr [rdi], rsi ; ret
0x0000000000409caa : add byte ptr [rax - 1], bh ; ret
0x00000000004993cf : add byte ptr [rax - 2], dh ; cli ; call rsp
0x0000000000468e37 : add byte ptr [rax - 9], cl ; int1 ; mov rsi, rax ; call 0x4150e9
0x0000000000411614 : add byte ptr [rax], 0 ; add al, ch ; ret
0x000000000040cefa : add byte ptr [rax], 0 ; add bl, dh ; ret
0x000000000040232d : add byte ptr [rax], 0 ; add byte ptr [rax - 0x39], cl ; ret
0x0000000000427cab : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x000000000043a69b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; movzx eax, cl ; pop rbx ; ret
0x000000000043d3d3 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; ret
0x000000000041e52b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000047ad4d : add byte ptr [rax], 0 ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000041ea91 : add byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000465546 : add byte ptr [rax], 0 ; add cl, ch ; ret
0x000000000049bf31 : add byte ptr [rax], 0 ; or al, 6 ; std ; call rdx
0x0000000000499eff : add byte ptr [rax], ah ; add byte ptr [rdi + rbp*8], ch ; sti ; call rax
0x0000000000499a0f : add byte ptr [rax], ah ; and al, 0xfb ; call rsp
0x0000000000497ccf : add byte ptr [rax], ah ; cli ; call qword ptr [rbx]
0x000000000049ab9f : add byte ptr [rax], ah ; push rsi ; cld ; jmp qword ptr [rax]
0x00000000004957ae : add byte ptr [rax], al ; adc al, 0x19 ; add byte ptr [rax], al ; pop rsp ; jp 0x4957b7 ; call qword ptr [rdx]
0x000000000047af22 : add byte ptr [rax], al ; adc al, 0x6d ; clc ; push rbp ; insb byte ptr [rdi], dx ; clc ; call rsi
0x00000000004995af : add byte ptr [rax], al ; adc bl, bh ; call qword ptr [rcx]
0x00000000004976aa : add byte ptr [rax], al ; adc byte ptr [rax], bh ; add byte ptr [rax], al ; shr byte ptr [rbx], 0xfa ; call qword ptr [rdx]
0x00000000004995aa : add byte ptr [rax], al ; adc byte ptr [rdi], dl ; add byte ptr [rax], al ; adc bl, bh ; call qword ptr [rcx]
0x000000000049728e : add byte ptr [rax], al ; adc byte ptr [rsi], bh ; stc ; call qword ptr [rax]
0x000000000049729e : add byte ptr [rax], al ; add al, 0x34 ; add byte ptr [rax], al ; or al, 0x3e ; stc ; jmp qword ptr [rsi]
0x000000000049419e : add byte ptr [rax], al ; add al, 3 ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; fcomi st(6) ; call rsp
0x000000000049db91 : add byte ptr [rax], al ; add al, bh ; pushfq ; add byte ptr [rax], al ; cwde ; ret 0xfffd
0x00000000004018f9 : add byte ptr [rax], al ; add al, ch ; jmp rsi
0x0000000000499d81 : add byte ptr [rax], al ; add al, ch ; pop rsi ; add byte ptr [rax], al ; cwde ; ret
0x0000000000408155 : add byte ptr [rax], al ; add al, ch ; ret
0x0000000000404ff6 : add byte ptr [rax], al ; add al, ch ; ret 0xffb4
0x000000000045e31d : add byte ptr [rax], al ; add al, ch ; sti ; ret 0xfffa
0x000000000044d2e6 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rax], ecx ; idiv edi ; call qword ptr [rax]
0x000000000040702d : add byte ptr [rax], al ; add bh, bh ; adc ecx, dword ptr [rax - 0x7d] ; ret
0x000000000047044d : add byte ptr [rax], al ; add bh, bh ; ror dword ptr [rax - 0x77], cl ; ret
0x000000000044b73d : add byte ptr [rax], al ; add bh, dh ; ret 0xffef
0x0000000000460eff : add byte ptr [rax], al ; add bl, al ; mov eax, 2 ; ret
0x000000000041391e : add byte ptr [rax], al ; add bl, ch ; ret
0x000000000040cefb : add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000497f9b : add byte ptr [rax], al ; add byte ptr [r8], al ; push rsp ; cli ; call qword ptr [rdx]
0x000000000043727c : add byte ptr [rax], al ; add byte ptr [rax + 0x1478d48], dl ; ret
0x0000000000415d9d : add byte ptr [rax], al ; add byte ptr [rax + 0x16], bh ; ret
0x0000000000456641 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x000000000045413f : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x8349
0x0000000000466665 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x8d48
0x0000000000410736 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret
0x00000000004752c1 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x830f
0x000000000040b36d : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x850f
0x0000000000475356 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x9272
0x000000000046b5ab : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0xd589
0x000000000049bf1a : add byte ptr [rax], al ; add byte ptr [rax + 0x5f00000], 0xfd ; jmp qword ptr [rcx]
0x0000000000458bca : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret
0x0000000000436ccd : add byte ptr [rax], al ; add byte ptr [rax + 0x78d4837], cl ; ret
0x000000000043a6e5 : add byte ptr [rax], al ; add byte ptr [rax + 0xf48f0e5], al ; ret 0xc35b
0x00000000004128b2 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret
0x000000000046fca2 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x00000000004442c0 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x000000000041382a : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x894c
0x000000000043a658 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xc35b
0x0000000000460c1d : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x0000000000444e1b : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xf685
0x000000000046f15a : add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; ret
0x0000000000442540 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret
0x000000000046e70d : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x149
0x000000000046f36b : add byte ptr [rax], al ; add byte ptr [rax + 2], bh ; ret
0x000000000049b29a : add byte ptr [rax], al ; add byte ptr [rax + rax], dh ; push rax ; je 0x49b2a8 ; jmp rbx
0x000000000040232e : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x0000000000407fb1 : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0x2b40
0x000000000043bc0d : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xffc0
0x0000000000447ed9 : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x000000000044880e : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; ret 0x6411
0x0000000000410d8d : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; adc byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000406f60 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; js 0x406f8e ; call rdx
0x00000000004736b5 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; or cl, byte ptr [rax - 0x7d] ; ret 0xf08
0x000000000040eeed : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; clc ; ret
0x0000000000471b24 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; cwde ; call 0x43dd69
0x0000000000465942 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fucompi st(0) ; ret
0x000000000047576c : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fucompi st(1) ; ret
0x000000000043de2d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ja 0x43de5b ; ret
0x00000000004083f1 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000041442a : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x1bf
0x0000000000409244 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x294c
0x000000000044e929 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8148
0x000000000041163d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x000000000047828d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x000000000045450d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000476ead : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; shr cl, 1 ; ret 0xfffe
0x0000000000474da4 : add byte ptr [rax], al ; add byte ptr [rax - 0x7ab70000], al ; ret 0x840f
0x0000000000455426 : add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret 5
0x000000000047aa95 : add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + 3], cl ; ret
0x00000000004056dd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000438b9d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x00000000004404d3 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000004704cd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4808
0x00000000004696e8 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x000000000045f4bc : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4901
0x000000000041d583 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000047826d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8001
0x0000000000430ee1 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000041d5ad : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000041829d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x48], 0x83 ; ret 0x4840
0x0000000000448d36 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx], 0x83 ; ret 0x4801
0x0000000000473ce8 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ror byte ptr [rax], 0x83 ; ret 0x3901
0x0000000000426cc4 : add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x0000000000409ca8 : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x000000000045e31b : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ch ; sti ; ret 0xfffa
0x000000000040702b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bh, bh ; adc ecx, dword ptr [rax - 0x7d] ; ret
0x000000000047044b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bh, bh ; ror dword ptr [rax - 0x77], cl ; ret
0x000000000044b73b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bh, dh ; ret 0xffef
0x000000000040eeab : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x000000000040b36b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x850f
0x000000000044253e : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret
0x000000000043bc0b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xffc0
0x000000000040eeeb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000043de2b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ja 0x43de5d ; ret
0x0000000000414428 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x1bf
0x000000000041163b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x000000000047828b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x000000000045450b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000476eab : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; shr cl, 1 ; ret 0xfffe
0x00000000004056db : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000438b9b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x000000000045f86b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000004704cb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4808
0x000000000047826b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8001
0x000000000040dfbf : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000488692 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x24
0x0000000000488b82 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x33
0x0000000000464cec : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; ret
0x0000000000438ddb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret
0x00000000004185eb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x0000000000416efb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000040c57b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi + rcx - 0x42], cl ; ret 0x4a8d
0x000000000040aaeb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 2 ; ret
0x000000000043c8eb : add byte ptr [rax], al ; add byte ptr [rax], al ; add dh, dh ; ret 0x7404
0x0000000000454b0b : add byte ptr [rax], al ; add byte ptr [rax], al ; add dh, dh ; ret 0xf50
0x000000000046111c : add byte ptr [rax], al ; add byte ptr [rax], al ; add rax, 3 ; ret
0x000000000047aaf5 : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbx ; ret
0x000000000046d14f : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000045e31c : add byte ptr [rax], al ; add byte ptr [rax], al ; call 0x40a626
0x000000000045ecbf : add byte ptr [rax], al ; add byte ptr [rax], al ; call 0x43af06
0x000000000040702c : add byte ptr [rax], al ; add byte ptr [rax], al ; call qword ptr [rbx]
0x000000000047044c : add byte ptr [rax], al ; add byte ptr [rax], al ; call rbx
0x000000000048a6bc : add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x000000000048986c : add byte ptr [rax], al ; add byte ptr [rax], al ; call rsp
0x000000000043a657 : add byte ptr [rax], al ; add byte ptr [rax], al ; cmove rax, rdx ; pop rbx ; ret
0x0000000000477474 : add byte ptr [rax], al ; add byte ptr [rax], al ; je 0x47745c ; ret
0x00000000004591b5 : add byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x00000000004372fc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xa] ; ret
0x000000000043730c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xb] ; ret
0x000000000043731c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xc] ; ret
0x000000000043732c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xd] ; ret
0x000000000043733c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xe] ; ret
0x000000000043728c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 2] ; ret
0x000000000043729c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 3] ; ret
0x00000000004372ac : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 4] ; ret
0x00000000004372bc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 5] ; ret
0x00000000004372cc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 6] ; ret
0x00000000004372dc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 8] ; ret
0x00000000004372ec : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 9] ; ret
0x0000000000400b4f : add byte ptr [rax], al ; add byte ptr [rax], al ; leave ; ret
0x0000000000436ccc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; lea rax, qword ptr [rdi] ; ret
0x00000000004366ac : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x0000000000415d9c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x16 ; ret
0x000000000040ee6c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000046f159 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x000000000046f36a : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 2 ; ret
0x0000000000427cac : add byte ptr [rax], al ; add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x000000000043de2c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi + 0x20], rsi ; ret
0x000000000040fc54 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi + 0x60], rcx ; ret
0x000000000046d15c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 8] ; ret
0x000000000040eeec : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rdi ; ret
0x000000000040aaec : add byte ptr [rax], al ; add byte ptr [rax], al ; movzx eax, byte ptr [rdx] ; ret
0x000000000043a69c : add byte ptr [rax], al ; add byte ptr [rax], al ; movzx eax, cl ; pop rbx ; ret
0x0000000000427dfc : add byte ptr [rax], al ; add byte ptr [rax], al ; movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x000000000043727b : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; lea rax, qword ptr [rdi + 1] ; ret
0x000000000043726b : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; lea rax, qword ptr [rdi] ; ret
0x00000000004370ab : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; xor rax, rax ; ret
0x0000000000438f49 : add byte ptr [rax], al ; add byte ptr [rax], al ; nop dword ptr [rax] ; xor eax, eax ; ret
0x000000000040980c : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000040df98 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000048968c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d4
0x0000000000489e24 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d5
0x0000000000488694 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x24
0x0000000000488b84 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x33
0x0000000000400407 : add byte ptr [rax], al ; add byte ptr [rax], al ; test rax, rax ; je 0x40041b ; call rax
0x000000000040e0ac : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000046112c : add byte ptr [rax], al ; add byte ptr [rax], al ; xor rax, rax ; ret
0x00000000004995ae : add byte ptr [rax], al ; add byte ptr [rax], dl ; sti ; call qword ptr [rcx]
0x000000000043b924 : add byte ptr [rax], al ; add byte ptr [rbp + 0x10], dh ; add rsp, 0x28 ; ret
0x000000000046d70d : add byte ptr [rax], al ; add byte ptr [rbp + 0x12], dh ; add rsp, 0x38 ; ret
0x000000000046f4bc : add byte ptr [rax], al ; add byte ptr [rbp + 0x14], dh ; add rsp, 0x38 ; ret
0x0000000000478381 : add byte ptr [rax], al ; add byte ptr [rbp + 0x1a], dh ; ret
0x000000000046d4a3 : add byte ptr [rax], al ; add byte ptr [rbp + 0x1c], dh ; add rsp, 0x48 ; ret
0x0000000000461ff0 : add byte ptr [rax], al ; add byte ptr [rbp + 0x1e], dh ; add rsp, 0x38 ; ret
0x000000000044fb0f : add byte ptr [rax], al ; add byte ptr [rbp + 0x29], cl ; ret 0xf4c
0x000000000046d2fe : add byte ptr [rax], al ; add byte ptr [rbp + 0x30], dh ; add rsp, 0x38 ; ret
0x0000000000447c45 : add byte ptr [rax], al ; add byte ptr [rbp + 0x31], al ; leave ; call r15
0x000000000046ef1e : add byte ptr [rax], al ; add byte ptr [rbp + 0x3b], dh ; leave ; ret
0x000000000043ca3d : add byte ptr [rax], al ; add byte ptr [rbp + 0x41], bl ; pop rsp ; jmp rax
0x000000000043bb54 : add byte ptr [rax], al ; add byte ptr [rbp + 0x42], dh ; add rsp, 0x58 ; ret
0x000000000043bda3 : add byte ptr [rax], al ; add byte ptr [rbp + 0x43], dh ; add rsp, 0x18 ; ret
0x0000000000461ea9 : add byte ptr [rax], al ; add byte ptr [rbp + 0x45], dh ; add rsp, 0x58 ; ret
0x0000000000474c26 : add byte ptr [rax], al ; add byte ptr [rbp + 0xb], dh ; add rsp, 0x28 ; ret
0x000000000046d393 : add byte ptr [rax], al ; add byte ptr [rbp + 0xc], dh ; add rsp, 0x38 ; ret
0x000000000043c853 : add byte ptr [rax], al ; add byte ptr [rbp + 0xf], dh ; add rsp, 0x28 ; ret
0x0000000000472d48 : add byte ptr [rax], al ; add byte ptr [rbp + 0xf], dh ; add rsp, 0x38 ; ret
0x000000000044a65c : add byte ptr [rax], al ; add byte ptr [rbp + 5], dh ; add rsp, 0x18 ; ret
0x000000000046fafa : add byte ptr [rax], al ; add byte ptr [rbp + 5], dh ; add rsp, 0x38 ; ret
0x000000000043bf24 : add byte ptr [rax], al ; add byte ptr [rbp + 5], dh ; add rsp, 0x58 ; ret
0x00000000004774b6 : add byte ptr [rax], al ; add byte ptr [rbp + rax + 0x48], dh ; mov dword ptr [rdi + rsi*8], edx ; ret
0x000000000042542c : add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 0x1d], cl ; ret 0x57c
0x000000000043da98 : add byte ptr [rax], al ; add byte ptr [rbp - 0x3dbbf040], al ; ret
0x0000000000464cee : add byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; ret
0x00000000004545af : add byte ptr [rax], al ; add byte ptr [rbp - 0x7b], cl ; rol byte ptr [rcx + 0xf], cl ; xchg eax, esp ; ret 0xf45
0x000000000049ab9a : add byte ptr [rax], al ; add byte ptr [rbp], ch ; add byte ptr [rax], ah ; push rsi ; cld ; jmp qword ptr [rax]
0x0000000000448069 : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsp ; ret
0x0000000000470059 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000004014b4 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000407f59 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000477475 : add byte ptr [rax], al ; add byte ptr [rbx + rbx*8 - 0xd], dh ; ret
0x000000000045a93d : add byte ptr [rax], al ; add byte ptr [rbx - 0x4f743], al ; jmp qword ptr [rax]
0x000000000045a532 : add byte ptr [rax], al ; add byte ptr [rbx - 0x51f43], al ; call qword ptr [rax]
0x000000000045424a : add byte ptr [rax], al ; add byte ptr [rbx - 0x77], bl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x000000000047921d : add byte ptr [rax], al ; add byte ptr [rbx - 0x7fbf8f19], al ; jmp qword ptr [rax]
0x000000000044c59b : add byte ptr [rax], al ; add byte ptr [rbx - 0x8f743], al ; call qword ptr [rax]
0x000000000049a99a : add byte ptr [rax], al ; add byte ptr [rbx], ch ; add al, ah ; cld ; jmp qword ptr [rbx]
0x0000000000409534 : add byte ptr [rax], al ; add byte ptr [rcx + 0x2b], cl ; and byte ptr [r8 + 1], r9b ; ret
0x0000000000455f18 : add byte ptr [rax], al ; add byte ptr [rcx + 0x415d5bd0], cl ; pop rsp ; ret
0x0000000000457028 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; mov dh, 0x56 ; or al, 0x83 ; ret
0x0000000000456fb5 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; mov dh, 0x56 ; or al, 0xf6 ; ret 0xf08
0x000000000045b069 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; ret 0x3941
0x0000000000438ddd : add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret
0x000000000046036d : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x40], cl ; vzeroupper ; ret
0x00000000004716d6 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; ret
0x000000000044db21 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret
0x00000000004140c3 : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; jmp qword ptr [rax]
0x0000000000412971 : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret
0x00000000004185ed : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x0000000000416efd : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000041dfb0 : add byte ptr [rax], al ; add byte ptr [rcx - 9], cl ; ret 1
0x000000000041dfd6 : add byte ptr [rax], al ; add byte ptr [rcx - 9], cl ; ret 2
0x0000000000497f9a : add byte ptr [rax], al ; add byte ptr [rcx], al ; add byte ptr [rax + 0x54], al ; cli ; call qword ptr [rdx]
0x0000000000455d88 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0xd089
0x000000000049bffe : add byte ptr [rax], al ; add byte ptr [rcx], cl ; std ; jmp qword ptr [rsi]
0x0000000000407242 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000041d8ba : add byte ptr [rax], al ; add byte ptr [rcx], dh ; rol bl, 0x83 ; ret 0x6620
0x00000000004771e3 : add byte ptr [rax], al ; add byte ptr [rdi + 1], bh ; call r14
0x000000000047720b : add byte ptr [rax], al ; add byte ptr [rdi + 1], bh ; call rax
0x0000000000477f5a : add byte ptr [rax], al ; add byte ptr [rdi + 2], dh ; sbb eax, eax ; ret
0x000000000045a8e5 : add byte ptr [rax], al ; add byte ptr [rdi + rcx + 0x48], cl ; fimul dword ptr [rbp + 0x63] ; ret
0x0000000000459bf2 : add byte ptr [rax], al ; add byte ptr [rdi + rcx + 0x48], cl ; fmul dword ptr [rbp + 0x63] ; ret
0x000000000040c57d : add byte ptr [rax], al ; add byte ptr [rdi + rcx - 0x42], cl ; ret 0x4a8d
0x000000000043a5e5 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; lahf ; ret 0xea81
0x0000000000427d8d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x0000000000427dfd : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x000000000043a69d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0xc1 ; pop rbx ; ret
0x000000000040aaed : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 2 ; ret
0x000000000041d8fd : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov esp, 0xf80148c0 ; ret
0x0000000000448859 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0xc083
0x00000000004773e5 : add byte ptr [rax], al ; add byte ptr [rdx + 0x48], dh ; add esp, 0x18 ; ret
0x000000000041ea92 : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000041d822 : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret 0xc085
0x000000000040eedb : add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; mov rax, qword ptr [rdi + 0x68] ; ret
0x0000000000444b1d : add byte ptr [rax], al ; add cl, ch ; ret
0x0000000000444767 : add byte ptr [rax], al ; add cl, ch ; ret 0xfffc
0x0000000000400b50 : add byte ptr [rax], al ; add cl, cl ; ret
0x000000000045773d : add byte ptr [rax], al ; add dh, al ; test eax, esi ; idiv bh ; jmp qword ptr [rax]
0x000000000044d00f : add byte ptr [rax], al ; add dh, al ; test esp, eax ; idiv bh ; jmp qword ptr [rax]
0x00000000004429ad : add byte ptr [rax], al ; add dh, dh ; ret 0x4801
0x000000000043c8ed : add byte ptr [rax], al ; add dh, dh ; ret 0x7404
0x0000000000438531 : add byte ptr [rax], al ; add dh, dh ; ret 0x7501
0x0000000000454b0d : add byte ptr [rax], al ; add dh, dh ; ret 0xf50
0x000000000046111e : add byte ptr [rax], al ; add rax, 3 ; ret
0x000000000041d6d3 : add byte ptr [rax], al ; add rax, rdi ; add rax, rcx ; ret
0x000000000047aaf7 : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbx ; ret
0x00000000004098d2 : add byte ptr [rax], al ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000477420 : add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x0000000000474ee3 : add byte ptr [rax], al ; add rsp, 0x38 ; pop rbx ; pop r14 ; ret
0x000000000040d14b : add byte ptr [rax], al ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x000000000043ba49 : add byte ptr [rax], al ; add rsp, 0x68 ; ret
0x0000000000461d9e : add byte ptr [rax], al ; add rsp, 0x78 ; ret
0x0000000000440667 : add byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000413b77 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000499a0e : add byte ptr [rax], al ; and byte ptr [rbx + rdi*8], ah ; call rsp
0x0000000000497cce : add byte ptr [rax], al ; and byte ptr [rbx - 6], al ; call qword ptr [rbx]
0x000000000049ab9e : add byte ptr [rax], al ; and byte ptr [rsi - 4], dl ; jmp qword ptr [rax]
0x000000000043a6e6 : add byte ptr [rax], al ; and ch, 0xf0 ; cmovne rax, rdx ; pop rbx ; ret
0x000000000041d8fe : add byte ptr [rax], al ; bsf eax, eax ; add rax, rdi ; ret
0x0000000000432f20 : add byte ptr [rax], al ; bsf rax, rdx ; ret
0x000000000045fb34 : add byte ptr [rax], al ; bsr rax, rax ; add rax, rdi ; ret
0x0000000000497686 : add byte ptr [rax], al ; call 0x114970bc
0x00000000004981d6 : add byte ptr [rax], al ; call 0x11497c3c
0x0000000000499586 : add byte ptr [rax], al ; call 0x124990a1
0x00000000004976d6 : add byte ptr [rax], al ; call 0x1449710d
0x0000000000465796 : add byte ptr [rax], al ; call 0x401a24
0x000000000045e31e : add byte ptr [rax], al ; call 0x40a624
0x000000000045ecc1 : add byte ptr [rax], al ; call 0x43af04
0x0000000000461971 : add byte ptr [rax], al ; call 0x43dbb4
0x0000000000400fbc : add byte ptr [rax], al ; call qword ptr [rbx + 0x10]
0x000000000040702e : add byte ptr [rax], al ; call qword ptr [rbx]
0x00000000004771e9 : add byte ptr [rax], al ; call r14
0x0000000000406f3b : add byte ptr [rax], al ; call rax
0x000000000047044e : add byte ptr [rax], al ; call rbx
0x000000000048a6be : add byte ptr [rax], al ; call rdi
0x0000000000406e75 : add byte ptr [rax], al ; call rdx
0x000000000048986e : add byte ptr [rax], al ; call rsp
0x000000000049a9b6 : add byte ptr [rax], al ; clc ; cld ; jmp qword ptr [rbx]
0x0000000000499366 : add byte ptr [rax], al ; clc ; idiv edx ; call rbx
0x000000000043a764 : add byte ptr [rax], al ; clc ; jg 0x43a768 ; int1 ; mov eax, eax ; ret
0x000000000049d126 : add byte ptr [rax], al ; clc ; jl 0x49d12d ; call qword ptr [rdx]
0x000000000049db92 : add byte ptr [rax], al ; clc ; pushfq ; add byte ptr [rax], al ; cwde ; ret 0xfffd
0x000000000049a6de : add byte ptr [rax], al ; cld ; jmp qword ptr [rdx]
0x0000000000499896 : add byte ptr [rax], al ; cld ; pop rcx ; add byte ptr [rax], al ; test byte ptr [rbx], bl ; sti ; call qword ptr [rdx]
0x000000000043a691 : add byte ptr [rax], al ; cmove rax, rcx ; pop rbx ; ret
0x000000000043a659 : add byte ptr [rax], al ; cmove rax, rdx ; pop rbx ; ret
0x000000000041693c : add byte ptr [rax], al ; cmove rax, rdx ; ret
0x0000000000415e93 : add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x00000000004976d2 : add byte ptr [rax], al ; cmp byte ptr [rax], bh ; add byte ptr [rax], al ; call 0x14497111
0x00000000004981d2 : add byte ptr [rax], al ; cmp byte ptr [rbx], al ; add al, ch ; pop rdx ; cli ; call qword ptr [rax]
0x00000000004991d2 : add byte ptr [rax], al ; cmp byte ptr [rbx], dl ; add al, cl ; hlt ; cli ; call qword ptr [rdx]
0x000000000046b3ec : add byte ptr [rax], al ; cmp rax, -1 ; cmove rax, rdx ; ret
0x000000000043de1e : add byte ptr [rax], al ; cmp rdx, qword ptr [rdi + 0x10] ; jae 0x43de11 ; ret
0x0000000000414327 : add byte ptr [rax], al ; cmp rdx, r8 ; jne 0x4142f8 ; ret
0x0000000000498132 : add byte ptr [rax], al ; cwde ; add byte ptr [rax], al ; or byte ptr [rdx - 6], bl ; jmp qword ptr [rcx]
0x0000000000499d86 : add byte ptr [rax], al ; cwde ; ret
0x000000000049db96 : add byte ptr [rax], al ; cwde ; ret 0xfffd
0x0000000000498162 : add byte ptr [rax], al ; enter 0x42, 0 ; pop rdx ; cli ; jmp qword ptr [rdi]
0x0000000000499362 : add byte ptr [rax], al ; enter 0x54, 0 ; clc ; idiv edx ; call rbx
0x000000000049c772 : add byte ptr [rax], al ; fmul dword ptr [rax + 0x32180000] ; std ; jmp qword ptr [rdx]
0x000000000049ce46 : add byte ptr [rax], al ; fsub dword ptr [rax - 3] ; jmp qword ptr [rcx]
0x000000000049925a : add byte ptr [rax], al ; hlt ; hlt ; cli ; jmp rax
0x00000000004009c8 : add byte ptr [rax], al ; hlt ; nop dword ptr [rax + rax] ; ret
0x000000000049a99b : add byte ptr [rax], al ; imul eax, dword ptr [rax], 0 ; loopne 0x49a9f1 ; cld ; jmp qword ptr [rbx]
0x000000000049769a : add byte ptr [rax], al ; in al, 0x2a ; cli ; jmp rbx
0x0000000000496bca : add byte ptr [rax], al ; in al, 0xe8 ; idiv edi ; ret 2
0x00000000004975d2 : add byte ptr [rax], al ; in al, dx ; and edx, edi ; call rsp
0x0000000000499d02 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; ret 0xfffb
0x000000000049ab9b : add byte ptr [rax], al ; insd dword ptr [rdi], dx ; add byte ptr [rax], al ; and byte ptr [rsi - 4], dl ; jmp qword ptr [rax]
0x0000000000477f5b : add byte ptr [rax], al ; ja 0x477f68 ; sbb eax, eax ; ret
0x000000000040a626 : add byte ptr [rax], al ; je 0x40a631 ; ret
0x00000000004169a0 : add byte ptr [rax], al ; je 0x41696f ; ret
0x0000000000460549 : add byte ptr [rax], al ; je 0x460555 ; ret
0x00000000004773e6 : add byte ptr [rax], al ; je 0x4773d4 ; add rsp, 0x18 ; ret
0x0000000000477476 : add byte ptr [rax], al ; je 0x47745a ; ret
0x00000000004774b7 : add byte ptr [rax], al ; je 0x4774c8 ; mov qword ptr [rdi + rsi*8], rdx ; ret
0x000000000049b29b : add byte ptr [rax], al ; je 0x49b2a7 ; add byte ptr [rax + 0x74], dl ; cld ; jmp rbx
0x000000000041391f : add byte ptr [rax], al ; jmp 0x4138e9
0x000000000043b761 : add byte ptr [rax], al ; jmp 0x43b5f3
0x000000000041495e : add byte ptr [rax], al ; jmp rax
0x000000000041062b : add byte ptr [rax], al ; jne 0x41063e ; add rsp, 0x10 ; pop rbx ; ret
0x000000000041e592 : add byte ptr [rax], al ; jne 0x41e4a8 ; ret
0x000000000043acad : add byte ptr [rax], al ; jne 0x43acdd ; add rsp, 0x20 ; pop rbx ; ret
0x000000000043b925 : add byte ptr [rax], al ; jne 0x43b941 ; add rsp, 0x28 ; ret
0x000000000043bb55 : add byte ptr [rax], al ; jne 0x43bba3 ; add rsp, 0x58 ; ret
0x000000000043bda4 : add byte ptr [rax], al ; jne 0x43bdf3 ; add rsp, 0x18 ; ret
0x000000000043bf25 : add byte ptr [rax], al ; jne 0x43bf36 ; add rsp, 0x58 ; ret
0x000000000043c854 : add byte ptr [rax], al ; jne 0x43c86f ; add rsp, 0x28 ; ret
0x000000000044a65d : add byte ptr [rax], al ; jne 0x44a66e ; add rsp, 0x18 ; ret
0x0000000000461eaa : add byte ptr [rax], al ; jne 0x461efb ; add rsp, 0x58 ; ret
0x0000000000461ff1 : add byte ptr [rax], al ; jne 0x46201b ; add rsp, 0x38 ; ret
0x000000000046d2ff : add byte ptr [rax], al ; jne 0x46d33b ; add rsp, 0x38 ; ret
0x000000000046d394 : add byte ptr [rax], al ; jne 0x46d3ac ; add rsp, 0x38 ; ret
0x000000000046d4a4 : add byte ptr [rax], al ; jne 0x46d4cc ; add rsp, 0x48 ; ret
0x000000000046d558 : add byte ptr [rax], al ; jne 0x46d56b ; add rsp, 0x20 ; pop rbx ; ret
0x000000000046d654 : add byte ptr [rax], al ; jne 0x46d66c ; add rsp, 0x38 ; ret
0x000000000046d70e : add byte ptr [rax], al ; jne 0x46d72c ; add rsp, 0x38 ; ret
0x000000000046ef1f : add byte ptr [rax], al ; jne 0x46ef63 ; leave ; ret
0x000000000046f4bd : add byte ptr [rax], al ; jne 0x46f4dd ; add rsp, 0x38 ; ret
0x000000000046fafb : add byte ptr [rax], al ; jne 0x46fb0c ; add rsp, 0x38 ; ret
0x000000000046fbde : add byte ptr [rax], al ; jne 0x46fbfc ; add rsp, 0x38 ; ret
0x0000000000472d49 : add byte ptr [rax], al ; jne 0x472d64 ; add rsp, 0x38 ; ret
0x0000000000472efb : add byte ptr [rax], al ; jne 0x472f15 ; add rsp, 0x30 ; pop rbx ; ret
0x0000000000474c27 : add byte ptr [rax], al ; jne 0x474c3e ; add rsp, 0x28 ; ret
0x0000000000478382 : add byte ptr [rax], al ; jne 0x4783a5 ; ret
0x000000000049711e : add byte ptr [rax], al ; jo 0x497199 ; clc ; call rsp
0x00000000004993ce : add byte ptr [rax], al ; jo 0x4993d5 ; cli ; call rsp
0x0000000000499a0a : add byte ptr [rax], al ; jo 0x499a72 ; add byte ptr [rax], al ; and byte ptr [rbx + rdi*8], ah ; call rsp
0x00000000004372fe : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xa] ; ret
0x000000000043730e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xb] ; ret
0x000000000043731e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xc] ; ret
0x000000000043732e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xd] ; ret
0x000000000043733e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xe] ; ret
0x000000000043725d : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xf] ; ret
0x000000000043728e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 2] ; ret
0x000000000043729e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 3] ; ret
0x00000000004372ae : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 4] ; ret
0x00000000004372be : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 5] ; ret
0x00000000004372ce : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 6] ; ret
0x000000000043720a : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 7] ; ret
0x00000000004372de : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 8] ; ret
0x00000000004372ee : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 9] ; ret
0x0000000000400b51 : add byte ptr [rax], al ; leave ; ret
0x00000000004941a2 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; fcomi st(6) ; call rsp
0x0000000000497ade : add byte ptr [rax], al ; loopne 0x497b24 ; cli ; jmp qword ptr [rcx]
0x00000000004981ee : add byte ptr [rax], al ; loopne 0x498251 ; cli ; call qword ptr [rdx]
0x000000000049956e : add byte ptr [rax], al ; loopne 0x499586 ; sti ; call qword ptr [rdi]
0x000000000049a99e : add byte ptr [rax], al ; loopne 0x49a9ee ; cld ; jmp qword ptr [rbx]
0x000000000049c22e : add byte ptr [rax], al ; loopne 0x49c21f ; std ; jmp qword ptr [rdi]
0x0000000000495b4e : add byte ptr [rax], al ; mov ah, 0x1c ; add byte ptr [rax], al ; test dil, r14b ; jmp qword ptr [rsi]
0x0000000000499bce : add byte ptr [rax], al ; mov al, 0xa5 ; sti ; call qword ptr [rbx]
0x000000000049dbfe : add byte ptr [rax], al ; mov al, 0xc4 ; std ; jmp qword ptr [rax]
0x0000000000498222 : add byte ptr [rax], al ; mov byte ptr [rbx], al ; add byte ptr [rax], bl ; pop rbx ; cli ; call qword ptr [rcx]
0x0000000000499886 : add byte ptr [rax], al ; mov byte ptr [rbx], bl ; sti ; call qword ptr [rax]
0x000000000049ab56 : add byte ptr [rax], al ; mov byte ptr [rdi - 4], cl ; jmp rdx
0x000000000040a6ce : add byte ptr [rax], al ; mov byte ptr [rdi], 0 ; mov rax, rdi ; ret
0x0000000000436cce : add byte ptr [rax], al ; mov byte ptr [rdi], dh ; lea rax, qword ptr [rdi] ; ret
0x00000000004366ae : add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x000000000049d122 : add byte ptr [rax], al ; mov byte ptr [rdx + 0x7cf80000], dl ; std ; call qword ptr [rdx]
0x000000000040f79b : add byte ptr [rax], al ; mov dword ptr [rip + 0x291f89], eax ; ret
0x0000000000400b4c : add byte ptr [rax], al ; mov eax, 0 ; leave ; ret
0x0000000000415d9e : add byte ptr [rax], al ; mov eax, 0x16 ; ret
0x0000000000461c4e : add byte ptr [rax], al ; mov eax, 0x66 ; syscall ; ret
0x0000000000461c6e : add byte ptr [rax], al ; mov eax, 0x68 ; syscall ; ret
0x0000000000461c5e : add byte ptr [rax], al ; mov eax, 0x6b ; syscall ; ret
0x0000000000461c7e : add byte ptr [rax], al ; mov eax, 0x6c ; syscall ; ret
0x000000000049ab52 : add byte ptr [rax], al ; mov eax, 0x8800006c ; cld ; jmp rdx
0x0000000000415db6 : add byte ptr [rax], al ; mov eax, 0xc ; pop rbx ; ret
0x0000000000409ca9 : add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000046f15b : add byte ptr [rax], al ; mov eax, 1 ; ret
0x000000000046f36c : add byte ptr [rax], al ; mov eax, 2 ; ret
0x000000000040ebce : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x10] ; sub eax, dword ptr [rsi + 0x10] ; ret
0x00000000004797fe : add byte ptr [rax], al ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x479819 ; ret
0x0000000000479a2e : add byte ptr [rax], al ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x479a49 ; ret
0x000000000043bea5 : add byte ptr [rax], al ; mov eax, dword ptr [rsp] ; jmp 0x43be4c
0x000000000040801c : add byte ptr [rax], al ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000455f19 : add byte ptr [rax], al ; mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000046a17f : add byte ptr [rax], al ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x00000000004561c7 : add byte ptr [rax], al ; mov eax, edx ; pop rbx ; ret
0x00000000004542a1 : add byte ptr [rax], al ; mov eax, edx ; ret
0x0000000000408772 : add byte ptr [rax], al ; mov eax, esi ; pop rbx ; ret
0x00000000004366ee : add byte ptr [rax], al ; mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x00000000004771e4 : add byte ptr [rax], al ; mov edi, 1 ; call r14
0x000000000047720c : add byte ptr [rax], al ; mov edi, 1 ; call rax
0x0000000000427cae : add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x0000000000499256 : add byte ptr [rax], al ; mov esp, 0xf4000053 ; hlt ; cli ; jmp rax
0x000000000046fa78 : add byte ptr [rax], al ; mov qword ptr [rax], rdx ; pop rbx ; ret
0x0000000000471b25 : add byte ptr [rax], al ; mov qword ptr [rbp - 0x68], rax ; call 0x43dd68
0x000000000046d2a0 : add byte ptr [rax], al ; mov qword ptr [rbx + 0x18], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x0000000000472dc2 : add byte ptr [rax], al ; mov qword ptr [rbx + 0x18], rax ; pop rbx ; ret
0x0000000000472e76 : add byte ptr [rax], al ; mov qword ptr [rbx + 0x20], rax ; pop rbx ; ret
0x000000000043de2e : add byte ptr [rax], al ; mov qword ptr [rdi + 0x20], rsi ; ret
0x0000000000467254 : add byte ptr [rax], al ; mov qword ptr [rdi + 0x308], rax ; ret
0x000000000040fc56 : add byte ptr [rax], al ; mov qword ptr [rdi + 0x60], rcx ; ret
0x000000000047750e : add byte ptr [rax], al ; mov qword ptr [rdi + 0x98], rsi ; ret
0x000000000046f178 : add byte ptr [rax], al ; mov qword ptr [rdi], rsi ; ret
0x000000000040f7eb : add byte ptr [rax], al ; mov qword ptr [rip + 0x291f0c], rax ; ret
0x000000000040f7bb : add byte ptr [rax], al ; mov qword ptr [rip + 0x291f44], rax ; ret
0x000000000040e13e : add byte ptr [rax], al ; mov rax, -1 ; ret
0x000000000046114e : add byte ptr [rax], al ; mov rax, 2 ; ret
0x000000000046115e : add byte ptr [rax], al ; mov rax, 3 ; ret
0x000000000046116e : add byte ptr [rax], al ; mov rax, 4 ; ret
0x000000000046117e : add byte ptr [rax], al ; mov rax, 5 ; ret
0x000000000046118e : add byte ptr [rax], al ; mov rax, 6 ; ret
0x000000000046119e : add byte ptr [rax], al ; mov rax, 7 ; ret
0x00000000004687a3 : add byte ptr [rax], al ; mov rax, qword ptr [r15 + 0x10] ; add rax, qword ptr [r14] ; call rax
0x00000000004097fe : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x000000000046d15e : add byte ptr [rax], al ; mov rax, qword ptr [rax + 8] ; ret
0x000000000047748e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x90] ; ret
0x000000000047751e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0xa0] ; ret
0x000000000047757e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0xa8] ; ret
0x000000000047756e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0xb0] ; ret
0x000000000047752e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0xb8] ; ret
0x0000000000447f0e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x25be81] ; ret
0x00000000004405fe : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x264241] ; ret
0x000000000047525e : add byte ptr [rax], al ; mov rax, qword ptr [rsi + 0xa8] ; ret
0x000000000046b63f : add byte ptr [rax], al ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000046036e : add byte ptr [rax], al ; mov rax, r8 ; vzeroupper ; ret
0x000000000040bd14 : add byte ptr [rax], al ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000477688 : add byte ptr [rax], al ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x00000000004085d2 : add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040eeee : add byte ptr [rax], al ; mov rax, rdi ; ret
0x00000000004394af : add byte ptr [rax], al ; mov rcx, rdx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000406f61 : add byte ptr [rax], al ; mov rdi, qword ptr [rax + 0x20] ; call rdx
0x000000000045c3f7 : add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x0000000000427aee : add byte ptr [rax], al ; mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x0000000000477efe : add byte ptr [rax], al ; mov rsi, r14 ; mov rdi, r12 ; call r15
0x000000000049c4d2 : add byte ptr [rax], al ; mov word ptr [rcx], fs ; std ; call rdi
0x0000000000475315 : add byte ptr [rax], al ; movsxd rax, dword ptr [r15 + rax*4] ; add rax, r15 ; jmp rax
0x000000000045c62a : add byte ptr [rax], al ; movsxd rax, dword ptr [rcx + rax*4] ; add rax, rcx ; jmp rax
0x0000000000449abe : add byte ptr [rax], al ; movsxd rsi, dword ptr [r8 + r9*4] ; add rsi, r8 ; jmp rsi
0x000000000040aaee : add byte ptr [rax], al ; movzx eax, byte ptr [rdx] ; ret
0x000000000043a69e : add byte ptr [rax], al ; movzx eax, cl ; pop rbx ; ret
0x0000000000427dfe : add byte ptr [rax], al ; movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x0000000000427d8e : add byte ptr [rax], al ; movzx edx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x000000000049c22a : add byte ptr [rax], al ; nop ; add dword ptr [rax], 0 ; loopne 0x49c223 ; std ; jmp qword ptr [rdi]
0x000000000043727d : add byte ptr [rax], al ; nop ; lea rax, qword ptr [rdi + 1] ; ret
0x000000000043726d : add byte ptr [rax], al ; nop ; lea rax, qword ptr [rdi] ; ret
0x000000000040ee9c : add byte ptr [rax], al ; nop ; mov eax, 0xffffffff ; ret
0x000000000040eedc : add byte ptr [rax], al ; nop ; mov rax, qword ptr [rdi + 0x68] ; ret
0x000000000041dddd : add byte ptr [rax], al ; nop ; vzeroupper ; xor eax, eax ; ret
0x00000000004370ad : add byte ptr [rax], al ; nop ; xor rax, rax ; ret
0x000000000043dd59 : add byte ptr [rax], al ; nop dword ptr [rax + rax] ; ret
0x000000000040582a : add byte ptr [rax], al ; nop dword ptr [rax] ; ret
0x0000000000438f4b : add byte ptr [rax], al ; nop dword ptr [rax] ; xor eax, eax ; ret
0x00000000004972a2 : add byte ptr [rax], al ; or al, 0x3e ; stc ; jmp qword ptr [rsi]
0x000000000049bf32 : add byte ptr [rax], al ; or al, 6 ; std ; call rdx
0x0000000000498136 : add byte ptr [rax], al ; or byte ptr [rdx - 6], bl ; jmp qword ptr [rcx]
0x00000000004970a2 : add byte ptr [rax], al ; or byte ptr [rdx], dh ; add byte ptr [rax], al ; test al, 0x65 ; clc ; jmp qword ptr [rbx]
0x000000000049bfff : add byte ptr [rax], al ; or ebp, edi ; jmp qword ptr [rsi]
0x000000000043ca3e : add byte ptr [rax], al ; pop rbp ; pop r12 ; jmp rax
0x0000000000400a06 : add byte ptr [rax], al ; pop rbp ; ret
0x000000000045424b : add byte ptr [rax], al ; pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x000000000041492e : add byte ptr [rax], al ; pop rbx ; mov rax, rdx ; pop rbp ; pop r12 ; ret
0x000000000044806a : add byte ptr [rax], al ; pop rbx ; pop r12 ; ret
0x000000000047005a : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004014b5 : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000407f5a : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000400d26 : add byte ptr [rax], al ; pop rbx ; ret
0x0000000000498166 : add byte ptr [rax], al ; pop rdx ; cli ; jmp qword ptr [rdi]
0x0000000000499cfe : add byte ptr [rax], al ; pop rsi ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; ret 0xfffb
0x00000000004957b2 : add byte ptr [rax], al ; pop rsp ; jp 0x4957b3 ; call qword ptr [rdx]
0x0000000000497302 : add byte ptr [rax], al ; push -0x27ffffcc ; pushfq ; stc ; call qword ptr [rax]
0x0000000000498a02 : add byte ptr [rax], al ; push -0x77ffffb5 ; wait ; cli ; call qword ptr [rax]
0x000000000049a6da : add byte ptr [rax], al ; push 0x41400000 ; cld ; jmp qword ptr [rdx]
0x00000000004981ea : add byte ptr [rax], al ; push rax ; add byte ptr [r8], al ; loopne 0x498255 ; cli ; call qword ptr [rdx]
0x0000000000497dfe : add byte ptr [rax], al ; push rax ; cli ; jmp qword ptr [rcx]
0x000000000049b29e : add byte ptr [rax], al ; push rax ; je 0x49b2a4 ; jmp rbx
0x0000000000497f9e : add byte ptr [rax], al ; push rsp ; cli ; call qword ptr [rdx]
0x00000000004009ce : add byte ptr [rax], al ; ret
0x0000000000480a46 : add byte ptr [rax], al ; ret 0
0x00000000004879be : add byte ptr [rax], al ; ret 0x10
0x000000000048968e : add byte ptr [rax], al ; ret 0x1d4
0x0000000000489e26 : add byte ptr [rax], al ; ret 0x1d5
0x0000000000488696 : add byte ptr [rax], al ; ret 0x24
0x0000000000488b86 : add byte ptr [rax], al ; ret 0x33
0x00000000004871be : add byte ptr [rax], al ; ret 0xa
0x00000000004875be : add byte ptr [rax], al ; ret 0xd
0x000000000048aa62 : add byte ptr [rax], al ; ret 1
0x000000000048ac62 : add byte ptr [rax], al ; ret 2
0x000000000048ae62 : add byte ptr [rax], al ; ret 3
0x000000000048b062 : add byte ptr [rax], al ; ret 4
0x000000000048b262 : add byte ptr [rax], al ; ret 5
0x0000000000486d66 : add byte ptr [rax], al ; ret 6
0x000000000048b662 : add byte ptr [rax], al ; ret 7
0x000000000048b862 : add byte ptr [rax], al ; ret 8
0x000000000048ba62 : add byte ptr [rax], al ; ret 9
0x000000000048b05e : add byte ptr [rax], al ; rol byte ptr [rax + rax], 0 ; ret 4
0x0000000000487466 : add byte ptr [rax], al ; ror byte ptr [rax + rax], 0 ; ret
0x000000000049abb2 : add byte ptr [rax], al ; sbb byte ptr [rbp], ch ; add byte ptr [rax], ch ; pop rcx ; cld ; jmp qword ptr [rbx]
0x000000000049da1a : add byte ptr [rax], al ; sbb byte ptr [rbx - 0x42600000], 0xfd ; call qword ptr [rdx]
0x0000000000498226 : add byte ptr [rax], al ; sbb byte ptr [rbx - 6], bl ; call qword ptr [rcx]
0x000000000049986e : add byte ptr [rax], al ; sbb byte ptr [rbx], 0xfb ; call qword ptr [rbx]
0x000000000049a9b2 : add byte ptr [rax], al ; sbb byte ptr [rbx], ch ; add al, bh ; cld ; jmp qword ptr [rbx]
0x000000000049c776 : add byte ptr [rax], al ; sbb byte ptr [rdx], dh ; std ; jmp qword ptr [rdx]
0x00000000004976ae : add byte ptr [rax], al ; shr byte ptr [rbx], 0xfa ; call qword ptr [rdx]
0x00000000004136dc : add byte ptr [rax], al ; shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; pop rbx ; ret
0x0000000000499f02 : add byte ptr [rax], al ; sub al, 0xef ; sti ; call rax
0x00000000004972b6 : add byte ptr [rax], al ; sub byte ptr [rax - 7], ah ; call qword ptr [rax]
0x000000000049abb6 : add byte ptr [rax], al ; sub byte ptr [rcx - 4], bl ; jmp qword ptr [rbx]
0x000000000041f4dc : add byte ptr [rax], al ; sub eax, ecx ; ret
0x000000000040e286 : add byte ptr [rax], al ; sub r8, rcx ; lea eax, dword ptr [r8 - 1] ; ret
0x0000000000438ff1 : add byte ptr [rax], al ; sub rax, rdx ; ret
0x000000000043dbf5 : add byte ptr [rax], al ; syscall ; pop rdx ; pop rsi ; ret
0x00000000004616b3 : add byte ptr [rax], al ; syscall ; ret
0x00000000004970a6 : add byte ptr [rax], al ; test al, 0x65 ; clc ; jmp qword ptr [rbx]
0x000000000049ce42 : add byte ptr [rax], al ; test al, 0x8f ; add byte ptr [rax], al ; fsub dword ptr [rax - 3] ; jmp qword ptr [rcx]
0x000000000040e104 : add byte ptr [rax], al ; test byte ptr [rbx], 0x80 ; jne 0x40e138 ; pop rbx ; ret
0x000000000049989a : add byte ptr [rax], al ; test byte ptr [rbx], bl ; sti ; call qword ptr [rdx]
0x0000000000495b52 : add byte ptr [rax], al ; test dil, r14b ; jmp qword ptr [rsi]
0x000000000043da99 : add byte ptr [rax], al ; test eax, eax ; cmove eax, edx ; ret
0x0000000000400409 : add byte ptr [rax], al ; test rax, rax ; je 0x400419 ; call rax
0x000000000047aa96 : add byte ptr [rax], al ; test rdx, rdx ; jne 0x47aaa8 ; ret
0x000000000049bf2e : add byte ptr [rax], al ; xchg eax, esp ; add byte ptr [rax], 0 ; or al, 6 ; std ; call rdx
0x00000000004972da : add byte ptr [rax], al ; xor al, 0 ; add byte ptr [rax - 0x7f], dl ; stc ; call qword ptr [rax]
0x00000000004975ce : add byte ptr [rax], al ; xor al, 0x37 ; add byte ptr [rax], al ; in al, dx ; and edx, edi ; call rsp
0x000000000049c4ce : add byte ptr [rax], al ; xor al, 0x86 ; add byte ptr [rax], al ; mov word ptr [rcx], fs ; std ; call rdi
0x000000000049741e : add byte ptr [rax], al ; xor bh, ch ; stc ; jmp qword ptr [rbx]
0x00000000004993ca : add byte ptr [rax], al ; xor byte ptr [rbp], dl ; add byte ptr [rax - 2], dh ; cli ; call rsp
0x000000000049711a : add byte ptr [rax], al ; xor byte ptr [rdx], 0 ; add byte ptr [rax + 0x72], dh ; clc ; call rsp
0x000000000049c78e : add byte ptr [rax], al ; xor byte ptr [rdx], dh ; std ; jmp rdx
0x000000000049741a : add byte ptr [rax], al ; xor byte ptr [rip - 0x10d00000], 0xf9 ; jmp qword ptr [rbx]
0x0000000000497cca : add byte ptr [rax], al ; xor byte ptr [rsi], bh ; add byte ptr [rax], al ; and byte ptr [rbx - 6], al ; call qword ptr [rbx]
0x00000000004150d4 : add byte ptr [rax], al ; xor eax, eax ; add rsp, 0x18 ; ret
0x000000000044b3c7 : add byte ptr [rax], al ; xor eax, eax ; add rsp, 8 ; ret
0x0000000000407243 : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000477695 : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000040e0ae : add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000041dd2a : add byte ptr [rax], al ; xor eax, eax ; vzeroupper ; ret
0x0000000000447c46 : add byte ptr [rax], al ; xor r9d, r9d ; call r15
0x000000000046112e : add byte ptr [rax], al ; xor rax, rax ; ret
0x00000000004981d3 : add byte ptr [rax], bh ; add byte ptr [r8], al ; call 0x11497c3f
0x00000000004976d3 : add byte ptr [rax], bh ; cmp byte ptr [rax], al ; add al, ch ; sub edi, edx ; call qword ptr [rbx]
0x0000000000400b4d : add byte ptr [rax], bh ; leave ; ret
0x000000000049a9b3 : add byte ptr [rax], bl ; imul eax, dword ptr [rax], 0 ; clc ; cld ; jmp qword ptr [rbx]
0x000000000049abb3 : add byte ptr [rax], bl ; insd dword ptr [rdi], dx ; add byte ptr [rax], al ; sub byte ptr [rcx - 4], bl ; jmp qword ptr [rbx]
0x0000000000498227 : add byte ptr [rax], bl ; pop rbx ; cli ; call qword ptr [rcx]
0x0000000000494887 : add byte ptr [rax], bl ; sub dh, bh ; call qword ptr [rax]
0x000000000049c777 : add byte ptr [rax], bl ; xor bh, ch ; jmp qword ptr [rdx]
0x000000000049abb7 : add byte ptr [rax], ch ; pop rcx ; cld ; jmp qword ptr [rbx]
0x0000000000475c5e : add byte ptr [rax], cl ; mov byte ptr [rip + 0x22e469], 8 ; ret
0x0000000000498137 : add byte ptr [rax], cl ; pop rdx ; cli ; jmp qword ptr [rcx]
0x0000000000475c65 : add byte ptr [rax], cl ; ret
0x0000000000497ccb : add byte ptr [rax], dh ; add byte ptr ds:[rax], al ; and byte ptr [rbx - 6], al ; call qword ptr [rbx]
0x000000000049741f : add byte ptr [rax], dh ; out dx, eax ; stc ; jmp qword ptr [rbx]
0x0000000000499bcb : add byte ptr [rax], dh ; pop rbp ; add byte ptr [rax], al ; mov al, 0xa5 ; sti ; call qword ptr [rbx]
0x00000000004993cb : add byte ptr [rax], dh ; push rbp ; add byte ptr [rax], al ; jo 0x4993d8 ; cli ; call rsp
0x000000000049c78f : add byte ptr [rax], dh ; xor bh, ch ; jmp rdx
0x00000000004976ab : add byte ptr [rax], dl ; cmp byte ptr [rax], al ; add al, al ; sub edi, edx ; call qword ptr [rdx]
0x00000000004995ab : add byte ptr [rax], dl ; push rdi ; add byte ptr [rax], al ; add byte ptr [rax], dl ; sti ; call qword ptr [rcx]
0x000000000049728f : add byte ptr [rax], dl ; stc ; call qword ptr [rax]
0x00000000004995b0 : add byte ptr [rax], dl ; sti ; call qword ptr [rcx]
0x000000000047a575 : add byte ptr [rax], r8b ; add rsp, 8 ; ret
0x0000000000471765 : add byte ptr [rax], r8b ; call qword ptr [rbx]
0x0000000000474a65 : add byte ptr [rax], r8b ; call rax
0x000000000041495d : add byte ptr [rax], r8b ; jmp rax
0x0000000000415ded : add byte ptr [rax], r8b ; mov eax, 0x16 ; ret
0x0000000000415db5 : add byte ptr [rax], r8b ; mov eax, 0xc ; pop rbx ; ret
0x000000000040f01d : add byte ptr [rax], r8b ; mov eax, 0xffffffff ; ret
0x000000000040ebcd : add byte ptr [rax], r8b ; mov eax, dword ptr [rdi + 0x10] ; sub eax, dword ptr [rsi + 0x10] ; ret
0x00000000004366dd : add byte ptr [rax], r8b ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x000000000043671d : add byte ptr [rax], r8b ; mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x0000000000400a05 : add byte ptr [rax], r8b ; pop rbp ; ret
0x00000000004009cd : add byte ptr [rax], r8b ; ret
0x0000000000438aad : add byte ptr [rax], r8b ; xor eax, eax ; ret
0x000000000043b926 : add byte ptr [rbp + 0x10], dh ; add rsp, 0x28 ; ret
0x000000000046d70f : add byte ptr [rbp + 0x12], dh ; add rsp, 0x38 ; ret
0x000000000046f4be : add byte ptr [rbp + 0x14], dh ; add rsp, 0x38 ; ret
0x0000000000478383 : add byte ptr [rbp + 0x1a], dh ; ret
0x000000000046d4a5 : add byte ptr [rbp + 0x1c], dh ; add rsp, 0x48 ; ret
0x0000000000461ff2 : add byte ptr [rbp + 0x1e], dh ; add rsp, 0x38 ; ret
0x000000000043acae : add byte ptr [rbp + 0x23], dh ; add rsp, 0x20 ; pop rbx ; ret
0x000000000045f439 : add byte ptr [rbp + 0x29], cl ; ret 0x8948
0x000000000044fb11 : add byte ptr [rbp + 0x29], cl ; ret 0xf4c
0x000000000046d300 : add byte ptr [rbp + 0x30], dh ; add rsp, 0x38 ; ret
0x000000000040b26a : add byte ptr [rbp + 0x31], al ; dec dword ptr [rax + 0x39] ; ret 0x860f
0x0000000000447c47 : add byte ptr [rbp + 0x31], al ; leave ; call r15
0x000000000046ef20 : add byte ptr [rbp + 0x3b], dh ; leave ; ret
0x000000000043ca3f : add byte ptr [rbp + 0x41], bl ; pop rsp ; jmp rax
0x000000000043bb56 : add byte ptr [rbp + 0x42], dh ; add rsp, 0x58 ; ret
0x000000000043bda5 : add byte ptr [rbp + 0x43], dh ; add rsp, 0x18 ; ret
0x0000000000461eab : add byte ptr [rbp + 0x45], dh ; add rsp, 0x58 ; ret
0x000000000040d447 : add byte ptr [rbp + 0x4a], dh ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x000000000040230a : add byte ptr [rbp + 0xa], dh ; jmp 0x402338
0x0000000000474c28 : add byte ptr [rbp + 0xb], dh ; add rsp, 0x28 ; ret
0x000000000046d395 : add byte ptr [rbp + 0xc], dh ; add rsp, 0x38 ; ret
0x0000000000472efc : add byte ptr [rbp + 0xd], dh ; add rsp, 0x30 ; pop rbx ; ret
0x000000000046e02f : add byte ptr [rbp + 0xf], cl ; lodsd eax, dword ptr [rsi] ; ret
0x000000000046df1f : add byte ptr [rbp + 0xf], cl ; movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x000000000043c855 : add byte ptr [rbp + 0xf], dh ; add rsp, 0x28 ; ret
0x0000000000472d4a : add byte ptr [rbp + 0xf], dh ; add rsp, 0x38 ; ret
0x000000000044a65e : add byte ptr [rbp + 5], dh ; add rsp, 0x18 ; ret
0x000000000046fafc : add byte ptr [rbp + 5], dh ; add rsp, 0x38 ; ret
0x000000000043bf26 : add byte ptr [rbp + 5], dh ; add rsp, 0x58 ; ret
0x000000000041062c : add byte ptr [rbp + 6], dh ; add rsp, 0x10 ; pop rbx ; ret
0x000000000046d559 : add byte ptr [rbp + 6], dh ; add rsp, 0x20 ; pop rbx ; ret
0x00000000004774b8 : add byte ptr [rbp + rax + 0x48], dh ; mov dword ptr [rdi + rsi*8], edx ; ret
0x000000000049840f : add byte ptr [rbp + rax*2], dh ; add ah, bl ; insb byte ptr [rdi], dx ; cli ; jmp qword ptr [rdx]
0x00000000004773d0 : add byte ptr [rbp + rbx + 0x48], dh ; add esp, 0x18 ; ret
0x00000000004875b7 : add byte ptr [rbp + rcx + 0xdbf0000], bh ; add byte ptr [rax], al ; ret 0xd
0x000000000042542e : add byte ptr [rbp + rcx*4 + 0x1d], cl ; ret 0x57c
0x0000000000440e51 : add byte ptr [rbp + rcx*4 + 0x3c], cl ; ret
0x000000000045e9ee : add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x10 ; mov rdi, r12 ; call rbx
0x000000000045eae8 : add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x18 ; mov rdi, r12 ; call rbx
0x000000000045ebe2 : add byte ptr [rbp + rcx*4 + 0x4d], cl ; ror byte ptr [rcx + rcx*4 - 1], 0x41 ; call rsp
0x000000000049bc4f : add byte ptr [rbp + rdi*2 - 0xc740000], dh ; cld ; call qword ptr [rcx]
0x0000000000496bc7 : add byte ptr [rbp - 0x171c0000], ch ; idiv edi ; ret 2
0x000000000047a3f4 : add byte ptr [rbp - 0x1f], dh ; pop rbx ; ret
0x000000000043da9a : add byte ptr [rbp - 0x3dbbf040], al ; ret
0x0000000000487863 : add byte ptr [rbp - 0x3ffffff1], bh ; sldt word ptr [rax] ; ret
0x000000000043b1cf : add byte ptr [rbp - 0x57c03b0], cl ; add ecx, dword ptr [rdi] ; xchg eax, esi ; ret 0xd284
0x000000000047d80c : add byte ptr [rbp - 0x6aef0005], dl ; sti ; jmp qword ptr [rax]
0x0000000000464cf0 : add byte ptr [rbp - 0x77], cl ; ret
0x00000000004545b1 : add byte ptr [rbp - 0x7b], cl ; rol byte ptr [rcx + 0xf], cl ; xchg eax, esp ; ret 0xf45
0x00000000004044e1 : add byte ptr [rbp - 0x7c], al ; ror byte ptr [rax + 0xf], 0x44 ; shr cl, 1 ; ret
0x000000000043f095 : add byte ptr [rbp - 0xcf98b40], al ; ret
0x00000000004797a7 : add byte ptr [rbp - 0xcfb8b40], al ; ret
0x000000000047af23 : add byte ptr [rbp*2 + 0x6cf5fff8], dl ; clc ; call rsi
0x000000000049ab9c : add byte ptr [rbp], ch ; add byte ptr [rax], ah ; push rsi ; cld ; jmp qword ptr [rax]
0x000000000042f6a9 : add byte ptr [rbx + 0x148b8104], cl ; xchg eax, ecx ; sub eax, edx ; ret
0x000000000046fedd : add byte ptr [rbx + 0x23419c0d], cl ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x000000000046b7d5 : add byte ptr [rbx + 0x23692b0d], al ; add byte ptr [rcx], al ; pop rbx ; ret
0x0000000000415f6f : add byte ptr [rbx + 0x28dd9a15], cl ; add bh, dh ; ret 0
0x000000000040ef57 : add byte ptr [rbx + 0x294cd505], al ; add byte ptr [rcx], al ; ret
0x0000000000411217 : add byte ptr [rbx + 0x31], bl ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x00000000004492cf : add byte ptr [rbx + 0x41], bl ; pop rsi ; ret
0x000000000044806b : add byte ptr [rbx + 0x41], bl ; pop rsp ; ret
0x00000000004366ef : add byte ptr [rbx + 0x477880e], cl ; mov dword ptr [rdi], ecx ; ret
0x000000000043621f : add byte ptr [rbx + 0x48028901], cl ; lea eax, dword ptr [rdx + 3] ; ret
0x000000000041492f : add byte ptr [rbx + 0x48], bl ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x000000000042758f : add byte ptr [rbx + 0x5789fc56], cl ; cld ; ret
0x000000000040a28f : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000047005b : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000004014b6 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000407f5b : add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000449abf : add byte ptr [rbx + 0x63], cl ; xor al, 0x88 ; add rsi, r8 ; jmp rsi
0x00000000004797ff : add byte ptr [rbx + 0x75c08507], cl ; or dh, bl ; ret
0x000000000046054a : add byte ptr [rbx + rax - 0xd], dh ; ret
0x000000000049419f : add byte ptr [rbx + rax], al ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; fcomi st(6) ; call rsp
0x0000000000477477 : add byte ptr [rbx + rbx*8 - 0xd], dh ; ret
0x000000000046f0f7 : add byte ptr [rbx + rcx*4 + 0x57], cl ; or byte ptr [rcx + 0x29], cl ; ret 0x894c
0x0000000000472c57 : add byte ptr [rbx + rcx*4 + 0x57], cl ; or byte ptr [rcx + 1], cl ; ret 0x894c
0x0000000000499257 : add byte ptr [rbx + rdx*2 - 0xb0c0000], bh ; cli ; jmp rax
0x000000000043f09f : add byte ptr [rbx - 0x18], dl ; mov edx, 0x8900022b ; ret
0x000000000045e3ff : add byte ptr [rbx - 0x3b7cb7fe], cl ; or byte ptr [rbx + 0x5d], bl ; ret
0x000000000043a718 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x10 ; pop rbx ; ret
0x000000000043a726 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x20 ; pop rbx ; ret
0x000000000043a71f : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x30 ; pop rbx ; ret
0x000000000043a734 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x40 ; pop rbx ; ret
0x000000000043a72d : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x60 ; pop rbx ; ret
0x000000000043a711 : add byte ptr [rbx - 0x3d], bl ; mov eax, 8 ; pop rbx ; ret
0x00000000004797a4 : add byte ptr [rbx - 0x3f7affde], ch ; je 0x4797b9 ; ret
0x000000000045a93f : add byte ptr [rbx - 0x4f743], al ; jmp qword ptr [rax]
0x000000000043a974 : add byte ptr [rbx - 0x50f0fe3e], al ; ror dword ptr [rdi], -0x51 ; ret 0xffe9
0x000000000045a534 : add byte ptr [rbx - 0x51f43], al ; call qword ptr [rax]
0x0000000000465efc : add byte ptr [rbx - 0x76b7ffbb], cl ; ret 0x314c
0x000000000045424c : add byte ptr [rbx - 0x77], bl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x00000000004386d6 : add byte ptr [rbx - 0x7bf0ed07], al ; ret 2
0x000000000047921f : add byte ptr [rbx - 0x7fbf8f19], al ; jmp qword ptr [rax]
0x000000000044c59d : add byte ptr [rbx - 0x8f743], al ; call qword ptr [rax]
0x0000000000467287 : add byte ptr [rbx], al ; add byte ptr [rax], al ; ret
0x000000000049a99c : add byte ptr [rbx], ch ; add al, ah ; cld ; jmp qword ptr [rbx]
0x0000000000456184 : add byte ptr [rcx + 0x24c8c105], cl ; add byte ptr [rax + 0x63], cl ; ret 0x8948
0x00000000004095cf : add byte ptr [rcx + 0x2b], cl ; adc byte ptr [r8 + 1], r9b ; ret
0x0000000000409536 : add byte ptr [rcx + 0x2b], cl ; and byte ptr [r8 + 1], r9b ; ret
0x000000000046010f : add byte ptr [rcx + 0x39], cl ; ret
0x000000000040f962 : add byte ptr [rcx + 0x39], cl ; ret 0x870f
0x0000000000474106 : add byte ptr [rcx + 0x3c8b48d8], cl ; ret 0x87f6
0x0000000000455f1a : add byte ptr [rcx + 0x415d5bd0], cl ; pop rsp ; ret
0x000000000040801d : add byte ptr [rcx + 0x415d5be8], cl ; pop rsp ; ret
0x000000000040fc10 : add byte ptr [rcx + 0x4789246f], cl ; adc byte ptr [rbx + 0x5d], bl ; ret
0x000000000040aae0 : add byte ptr [rcx + 0x5c], al ; pop r13 ; pop r14 ; ret
0x000000000041ff2e : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000475316 : add byte ptr [rcx + 0x63], cl ; add al, 0x87 ; add rax, r15 ; jmp rax
0x000000000041e78c : add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; add rcx, r11 ; jmp rcx
0x0000000000436568 : add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x000000000043d31f : add byte ptr [rcx + 0x63], cl ; ret 0x8b49
0x0000000000470596 : add byte ptr [rcx + 0xc8b48d8], cl ; ret 0xb60f
0x000000000045702a : add byte ptr [rcx + 0xf], al ; mov dh, 0x56 ; or al, 0x83 ; ret
0x0000000000456fb7 : add byte ptr [rcx + 0xf], al ; mov dh, 0x56 ; or al, 0xf6 ; ret 0xf08
0x000000000045b06b : add byte ptr [rcx + 0xf], al ; ret 0x3941
0x0000000000465a1e : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8545
0x0000000000454cae : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0xc931
0x0000000000438ddf : add byte ptr [rcx + 1], cl ; ret
0x0000000000476565 : add byte ptr [rcx + 1], cl ; ret 0xef89
0x000000000040fbed : add byte ptr [rcx + rax + 0x57], al ; sbb byte ptr [rax + 0x39], cl ; ret
0x00000000004957af : add byte ptr [rcx + rbx], dl ; add byte ptr [rax], al ; pop rsp ; jp 0x4957b6 ; call qword ptr [rdx]
0x000000000040d964 : add byte ptr [rcx + rcx - 0xd], dh ; ret
0x000000000047400f : add byte ptr [rcx + rcx*4 - 0x16], cl ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [rbx]
0x000000000041411f : add byte ptr [rcx + rcx*4 - 0x1a], cl ; mov rdi, r14 ; call 0x4103b9
0x000000000046b640 : add byte ptr [rcx + rcx*4 - 0x20], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000046036f : add byte ptr [rcx + rcx*4 - 0x40], cl ; vzeroupper ; ret
0x0000000000477eff : add byte ptr [rcx + rcx*4 - 0xa], cl ; mov rdi, r12 ; call r15
0x00000000004164bf : add byte ptr [rcx + rcx*8 - 0x7cb7de8c], al ; ret 0x4801
0x0000000000414328 : add byte ptr [rcx + rdi - 0x3e], cl ; jne 0x4142f7 ; ret
0x000000000046ab6b : add byte ptr [rcx - 0x75], al ; adc edi, dword ptr [rcx] ; ret 0x840f
0x000000000046ac08 : add byte ptr [rcx - 0x75], al ; adc edi, dword ptr [rcx] ; ret 0xc74
0x000000000043dc07 : add byte ptr [rcx - 0x77], al ; ret
0x0000000000443b43 : add byte ptr [rcx - 0x77], al ; ret 0x8949
0x000000000044d1df : add byte ptr [rcx - 0x77], cl ; ret
0x000000000043a82f : add byte ptr [rcx - 0x77], cl ; ret 0x3949
0x0000000000474c9a : add byte ptr [rcx - 0x77], cl ; ror byte ptr [rax - 0x77], 1 ; ret 0x3575
0x0000000000474da9 : add byte ptr [rcx - 0x7b], cl ; ret 0x840f
0x00000000004140c5 : add byte ptr [rcx - 0x7d], cl ; jmp qword ptr [rax]
0x0000000000412973 : add byte ptr [rcx - 0x7d], cl ; ret
0x000000000041003f : add byte ptr [rcx - 0x7d], cl ; ret 0x4908
0x000000000045bf97 : add byte ptr [rcx - 0x7d], cl ; ret 0x4c01
0x00000000004185ef : add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x0000000000416eff : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000040f93e : add byte ptr [rcx - 0x80], al ; clc ; add dword ptr [rdi + rcx + 0x44], eax ; ret 0xf641
0x000000000041dfb2 : add byte ptr [rcx - 9], cl ; ret 1
0x000000000041dfd8 : add byte ptr [rcx - 9], cl ; ret 2
0x0000000000497f9c : add byte ptr [rcx], al ; add byte ptr [rax + 0x54], al ; cli ; call qword ptr [rdx]
0x000000000040f787 : add byte ptr [rcx], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x000000000047576a : add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fucompi st(1) ; ret
0x0000000000438fef : add byte ptr [rcx], al ; add byte ptr [rax], al ; sub rax, rdx ; ret
0x000000000040712f : add byte ptr [rcx], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000400a7b : add byte ptr [rcx], al ; pop rbp ; ret
0x000000000046b7db : add byte ptr [rcx], al ; pop rbx ; ret
0x000000000040ef5d : add byte ptr [rcx], al ; ret
0x00000000004014fa : add byte ptr [rcx], bh ; ret
0x000000000041176f : add byte ptr [rcx], ch ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000455d8a : add byte ptr [rcx], ch ; ret 0xd089
0x000000000049c000 : add byte ptr [rcx], cl ; std ; jmp qword ptr [rsi]
0x0000000000407244 : add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000041d8bc : add byte ptr [rcx], dh ; rol bl, 0x83 ; ret 0x6620
0x000000000046203a : add byte ptr [rcx], dh ; ror byte ptr [rax + 0x39], 0xd7 ; ja 0x462071 ; ret
0x0000000000474053 : add byte ptr [rcx], dh ; ror byte ptr [rcx + rcx*4 - 0x3a], 0xe8 ; ret 0xff5e
0x000000000043f0cb : add byte ptr [rcx], dh ; sar byte ptr [rcx], cl ; ret
0x00000000004253da : add byte ptr [rdi + 0x63], cl ; or al, 0x8b ; add r9, r11 ; jmp r9
0x00000000004771e5 : add byte ptr [rdi + 1], bh ; call r14
0x000000000047720d : add byte ptr [rdi + 1], bh ; call rax
0x0000000000477f5c : add byte ptr [rdi + 2], dh ; sbb eax, eax ; ret
0x0000000000499f03 : add byte ptr [rdi + rbp*8], ch ; sti ; call rax
0x0000000000454e06 : add byte ptr [rdi + rcx + 0x45], cl ; ret 0xf4c
0x000000000045a8e7 : add byte ptr [rdi + rcx + 0x48], cl ; fimul dword ptr [rbp + 0x63] ; ret
0x0000000000459bf4 : add byte ptr [rdi + rcx + 0x48], cl ; fmul dword ptr [rbp + 0x63] ; ret
0x000000000040c57f : add byte ptr [rdi + rcx - 0x42], cl ; ret 0x4a8d
0x0000000000497647 : add byte ptr [rdi + rsi + 0x2ac40000], ch ; cli ; call qword ptr [rdx]
0x00000000004975cf : add byte ptr [rdi + rsi], dh ; add byte ptr [rax], al ; in al, dx ; and edx, edi ; call rsp
0x00000000004492cb : add byte ptr [rdi], ch ; mov byte ptr [rdi], 0 ; pop rbx ; pop r14 ; ret
0x000000000044930e : add byte ptr [rdi], ch ; mov byte ptr [rdi], 0 ; ret
0x0000000000426d56 : add byte ptr [rdi], cl ; cmp dword ptr [rbx - 1], -1 ; dec dword ptr [rax - 0x7f] ; ret 0x80
0x000000000043a5e7 : add byte ptr [rdi], cl ; lahf ; ret 0xea81
0x0000000000427d8f : add byte ptr [rdi], cl ; mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x0000000000427dff : add byte ptr [rdi], cl ; mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x000000000043a69f : add byte ptr [rdi], cl ; mov dh, 0xc1 ; pop rbx ; ret
0x000000000041819f : add byte ptr [rdi], cl ; mov dh, 0xe ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x000000000040aaef : add byte ptr [rdi], cl ; mov dh, 2 ; ret
0x000000000041e51f : add byte ptr [rdi], cl ; mov dh, 7 ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x000000000041e05f : add byte ptr [rdi], cl ; mov dh, 7 ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x000000000041d8ef : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp al, dh ; ret
0x000000000041d91f : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x000000000041d90f : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x000000000041d8ff : add byte ptr [rdi], cl ; mov esp, 0xf80148c0 ; ret
0x00000000004675e3 : add byte ptr [rdi], cl ; ret 0x8d48
0x000000000044885b : add byte ptr [rdi], cl ; ret 0xc083
0x0000000000441514 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd5e9
0x0000000000457495 : add byte ptr [rdi], cl ; xchg esi, esp ; sbb byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000434a2f : add byte ptr [rdx + 0x48028801], cl ; mov eax, edi ; ret
0x00000000004773e7 : add byte ptr [rdx + 0x48], dh ; add esp, 0x18 ; ret
0x0000000000467c4c : add byte ptr [rdx + 0x63], cl ; add al, 0xa6 ; add rax, rsi ; jmp rax
0x0000000000465792 : add byte ptr [rdx + 0x870], bh ; call 0x401a28
0x00000000004657cf : add byte ptr [rdx + 0x871], bh ; call 0x401a28
0x000000000040a627 : add byte ptr [rdx + rax - 0xd], dh ; ret
0x00000000004871b7 : add byte ptr [rdx + rcx + 0xabf0000], bh ; add byte ptr [rax], al ; ret 0xa
0x00000000004957b3 : add byte ptr [rdx + rdi*2 - 9], bl ; call qword ptr [rdx]
0x0000000000466b91 : add byte ptr [rdx], 0 ; add byte ptr [rax + 0x39], cl ; ret 0xed75
0x0000000000446db1 : add byte ptr [rsi + 0x41], ah ; cmp ecx, 0x860f07ff ; ret
0x000000000041ea94 : add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000451996 : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0x290f
0x00000000004519bf : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0x57e8
0x00000000004543bd : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0x59e8
0x000000000045195d : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; sbb ah, byte ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; ret
0x000000000041d824 : add byte ptr [rsi + 0xf], ah ; xlatb ; ret 0xc085
0x000000000049c4cf : add byte ptr [rsi + rax*4], dh ; add byte ptr [rax], al ; mov word ptr [rcx], fs ; std ; call rdi
0x00000000004169a1 : add byte ptr [rsi + rax*8 - 0xd], dh ; ret
0x000000000049bf33 : add byte ptr [rsi + rax], cl ; std ; call rdx
0x00000000004972a3 : add byte ptr [rsi + rdi], cl ; stc ; jmp qword ptr [rsi]
0x00000000004366bd : add byte ptr [rsi - 0x70], ah ; mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x000000000040ee9d : add byte ptr [rsi - 0x70], ah ; mov eax, 0xffffffff ; ret
0x000000000040eedd : add byte ptr [rsi - 0x70], ah ; mov rax, qword ptr [rdi + 0x68] ; ret
0x00000000004004cd : add byte ptr [rsi - 0x70], ah ; ret
0x000000000047d764 : add byte ptr [rsi - 5], 0xff ; rol byte ptr [rdi - 5], 1 ; jmp qword ptr [rax]
0x0000000000416967 : add byte ptr [rsi - 9], dh ; ret 0
0x0000000000495b53 : add byte ptr [rsp + rax*4 - 9], cl ; jmp qword ptr [rsi]
0x000000000049729f : add byte ptr [rsp + rsi], al ; add byte ptr [rax], al ; or al, 0x3e ; stc ; jmp qword ptr [rsi]
0x000000000041176e : add byte ptr cs:[rcx], ch ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000497ccd : add byte ptr ds:[rax], al ; and byte ptr [rbx - 6], al ; call qword ptr [rbx]
0x000000000043b2f5 : add byte ptr es:[rax + 0x39], cl ; ret
0x000000000043f094 : add byte ptr es:[rbp - 0xcf98b40], al ; ret
0x000000000049db90 : add byte ptr fs:[rax], al ; add al, bh ; pushfq ; add byte ptr [rax], al ; cwde ; ret 0xfffd
0x000000000043da97 : add byte ptr fs:[rax], al ; add byte ptr [rbp - 0x3dbbf040], al ; ret
0x000000000045414c : add ch, al ; ret
0x000000000049207c : add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x000000000049207d : add ch, byte ptr [rbp + rbp*2 + 0x5b] ; ret 0x6f9
0x000000000049bec5 : add ch, byte ptr [rbp + rcx + 7] ; ret
0x0000000000455365 : add ch, byte ptr [rbx] ; add byte ptr [rax], al ; add cl, ch ; ret
0x000000000045e75a : add ch, byte ptr [rcx] ; rol bl, 1 ; mov eax, 0xffffffff ; ret
0x0000000000457066 : add ch, byte ptr [rip - 0x7d000000] ; ret
0x0000000000495143 : add ch, byte ptr [rsi + rcx + 8] ; ret
0x000000000043a6c8 : add cl, al ; call 0xffffffff84062fe0
0x0000000000434a57 : add cl, byte ptr [r8 - 0x76b7fdbe] ; clc ; ret
0x0000000000457831 : add cl, byte ptr [rax + 0x29] ; ret
0x0000000000456d96 : add cl, byte ptr [rax + 0x39] ; ret 0x850f
0x000000000043a3b4 : add cl, byte ptr [rax + 0x77f8c50f] ; ret
0x0000000000412cfb : add cl, byte ptr [rax + 0xf] ; ret 0x8948
0x0000000000412810 : add cl, byte ptr [rax + 0xf] ; ret 0x8d44
0x0000000000416c3c : add cl, byte ptr [rax + 0xf] ; ret 0xc3f3
0x00000000004096d4 : add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret
0x00000000004095f3 : add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x2948
0x0000000000434a58 : add cl, byte ptr [rax - 0x76b7fdbe] ; clc ; ret
0x00000000004349c5 : add cl, byte ptr [rax - 0x77] ; clc ; ret
0x0000000000470105 : add cl, byte ptr [rax - 0x77] ; je 0x470136 ; or byte ptr [rax + 1], cl ; ret
0x000000000046a1a4 : add cl, byte ptr [rax - 0x77] ; ret 0xc148
0x000000000040ebb2 : add cl, byte ptr [rax - 0x7b] ; sal byte ptr [rbp - 0x10], 0xf3 ; ret
0x0000000000433220 : add cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x0000000000433283 : add cl, byte ptr [rax - 0x7d] ; ret 0xe908
0x0000000000427bd2 : add cl, byte ptr [rbx + 0x257890e] ; mov dword ptr [rdi], ecx ; ret
0x0000000000459bec : add cl, byte ptr [rcx + 0x29] ; ret
0x00000000004390db : add cl, byte ptr [rdi] ; xchg eax, edx ; ror byte ptr [rdi], 0x94 ; ret 0xc085
0x000000000045f19a : add cl, byte ptr [rsi] ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x0000000000472218 : add cl, ch ; loop 0x472202 ; mov eax, 0x5b9066ff ; ret
0x0000000000444b1f : add cl, ch ; ret
0x0000000000472738 : add cl, ch ; ret 0xb8d8
0x0000000000444769 : add cl, ch ; ret 0xfffc
0x000000000047d468 : add cl, cl ; cli ; push qword ptr [rax - 0x38] ; cli ; jmp rax
0x0000000000400b52 : add cl, cl ; ret
0x000000000045773f : add dh, al ; test eax, esi ; idiv bh ; jmp qword ptr [rax]
0x000000000044d011 : add dh, al ; test esp, eax ; idiv bh ; jmp qword ptr [rax]
0x000000000048a6b7 : add dh, bh ; xlatb ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x0000000000427d83 : add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x000000000040a629 : add dh, bl ; ret
0x00000000004169de : add dh, byte ptr [rax + rcx - 9] ; ret 0
0x000000000049568d : add dh, byte ptr [rcx + 0xa] ; ret
0x000000000047ce00 : add dh, byte ptr [rcx - 0x4f6d0006] ; cli ; jmp qword ptr [rdx]
0x00000000004429af : add dh, dh ; ret 0x4801
0x0000000000415197 : add dh, dh ; ret 0x4804
0x00000000004680c8 : add dh, dh ; ret 0x7403
0x000000000043c8ef : add dh, dh ; ret 0x7404
0x0000000000437107 : add dh, dh ; ret 0x7501
0x0000000000437114 : add dh, dh ; ret 0x7502
0x0000000000437121 : add dh, dh ; ret 0x7504
0x00000000004370d9 : add dh, dh ; ret 0x7510
0x00000000004370e6 : add dh, dh ; ret 0x7520
0x0000000000416c0c : add dh, dh ; ret 0x7540
0x000000000041544a : add dh, dh ; ret 0xf02
0x00000000004555df : add dh, dh ; ret 0xf08
0x00000000004584ff : add dh, dh ; ret 0xf10
0x0000000000454b27 : add dh, dh ; ret 0xf40
0x0000000000454b0f : add dh, dh ; ret 0xf50
0x000000000040757e : add dil, sil ; ret 0xffef
0x0000000000465f2b : add dl, byte ptr [rax - 0x77] ; ret 0xc389
0x000000000045d267 : add dword ptr [r8 - 0x75], r9d ; adc dword ptr [rax + 0x39], ecx ; ret 0x3873
0x0000000000441903 : add dword ptr [r8 - 0x7d], r9d ; ret
0x00000000004361e1 : add dword ptr [rax + 0x28d4802], ecx ; ret
0x000000000040db63 : add dword ptr [rax + 0x39], ecx ; ret
0x000000000046b61a : add dword ptr [rax + 0x39], ecx ; ret 0x1172
0x000000000046b62b : add dword ptr [rax + 0x39], ecx ; ret 0x674
0x0000000000452f6b : add dword ptr [rax + 0x39], ecx ; ret 0x8c0f
0x000000000044b893 : add dword ptr [rax + 0x39], ecx ; ret 0xd774
0x0000000000471c57 : add dword ptr [rax + 0x39], ecx ; ret 0xd775
0x000000000044b81d : add dword ptr [rax + 0x39], ecx ; ret 0xed75
0x000000000045f888 : add dword ptr [rax + 0x39], r9d ; ret
0x0000000000478273 : add dword ptr [rax + 0x7900ff7a], eax ; sbb dword ptr [rax - 0x7d], ecx ; ret 0x8001
0x000000000046445b : add dword ptr [rax + 1], ecx ; ret
0x000000000046d43f : add dword ptr [rax + 1], ecx ; ror byte ptr [rax - 0x77], 1 ; ret 0xc148
0x000000000040628a : add dword ptr [rax + 1], ecx ; ror byte ptr [rax - 0x77], 1 ; ret 0xe281
0x000000000043d281 : add dword ptr [rax + 9], ecx ; ret 0x8948
0x0000000000413837 : add dword ptr [rax + 9], ecx ; ret 0x8949
0x000000000044ed0b : add dword ptr [rax - 0x50743], eax ; jmp qword ptr [rax]
0x00000000004025b2 : add dword ptr [rax - 0x6bf0d006], eax ; ret 0xb60f
0x00000000004157b4 : add dword ptr [rax - 0x73], ecx ; clc ; cmovne rax, rcx ; ret
0x000000000045d268 : add dword ptr [rax - 0x75], ecx ; adc dword ptr [rax + 0x39], ecx ; ret 0x3873
0x0000000000434a31 : add dword ptr [rax - 0x776b7fe], ecx ; ret
0x000000000040f850 : add dword ptr [rax - 0x77], ecx ; adc eax, 0x291ef8 ; ret
0x00000000004349c2 : add dword ptr [rax - 0x77], ecx ; add cl, byte ptr [rax - 0x77] ; clc ; ret
0x000000000046ada3 : add dword ptr [rax - 0x77], ecx ; add eax, 0x239525 ; ret
0x000000000044c8fd : add dword ptr [rax - 0x77], ecx ; push rsi ; sub dh, al ; add byte ptr [rcx - 0x7d], cl ; ret
0x00000000004056cc : add dword ptr [rax - 0x77], ecx ; ret
0x000000000040bff6 : add dword ptr [rax - 0x77], ecx ; ret 0x2475
0x0000000000441eaf : add dword ptr [rax - 0x77], ecx ; ret 0x2b48
0x00000000004623b3 : add dword ptr [rax - 0x77], ecx ; ret 0x894c
0x000000000040fce4 : add dword ptr [rax - 0x77], ecx ; xchg dword ptr [rax - 0xcfffff8], eax ; ret
0x000000000046ada2 : add dword ptr [rax - 0x77], r9d ; add eax, 0x239525 ; ret
0x00000000004164c7 : add dword ptr [rax - 0x7d], ecx ; ret
0x000000000043e34b : add dword ptr [rax - 0x7d], ecx ; ret 0x4001
0x000000000044aca9 : add dword ptr [rax - 0x7d], ecx ; ret 0x4801
0x00000000004427fd : add dword ptr [rax - 0x7d], ecx ; ret 0x4901
0x00000000004025fd : add dword ptr [rax - 0x7d], ecx ; ret 0x8801
0x0000000000442415 : add dword ptr [rax - 0x7d], ecx ; ret 0x8b01
0x000000000045c8c7 : add dword ptr [rax - 0x7d], ecx ; ret 0x8b04
0x000000000044d054 : add dword ptr [rax - 0x93b43], eax ; jmp qword ptr [rax]
0x000000000043bfb5 : add dword ptr [rax - 1], edi ; jmp 0x43bf86
0x0000000000405198 : add dword ptr [rax - 9], ecx ; ror byte ptr [rax + 1], 1 ; ret
0x000000000049c22d : add dword ptr [rax], 0 ; loopne 0x49c220 ; std ; jmp qword ptr [rdi]
0x000000000049bffd : add dword ptr [rax], 0xfd090000 ; jmp qword ptr [rsi]
0x00000000004014f3 : add dword ptr [rax], eax ; add al, ch ; add eax, 0x390003a6 ; ret
0x000000000044994b : add dword ptr [rax], eax ; add al, ch ; int 0x80
0x00000000004083a1 : add dword ptr [rax], eax ; add bl, dh ; ret
0x0000000000413989 : add dword ptr [rax], eax ; add byte ptr [rax - 0x39], cl ; ret 0xffdf
0x000000000046218d : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000043b7c9 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x16e9
0x0000000000478b3a : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x3948
0x00000000004647c5 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x0000000000477085 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x00000000004394ae : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000041481d : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x00000000004139a9 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x0000000000455de8 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000043d74c : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000041d497 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043240f : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000041d4c5 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000004404d1 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000048a6ba : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x000000000048986a : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rsp
0x0000000000489692 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000048968a : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d4
0x0000000000489e22 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d5
0x00000000004771e7 : add dword ptr [rax], eax ; add byte ptr [rax], al ; call r14
0x000000000047713d : add dword ptr [rax], eax ; add byte ptr [rax], al ; call rax
0x0000000000477f59 : add dword ptr [rax], eax ; add byte ptr [rax], al ; ja 0x477f6a ; sbb eax, eax ; ret
0x0000000000477ead : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp rax
0x000000000046a17d : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x00000000004777f0 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov edi, 1 ; call rax
0x000000000046f176 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov qword ptr [rdi], rsi ; ret
0x000000000045c3f5 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x000000000040de93 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043afe9 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000045e0d0 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000040f788 : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000040b268 : add dword ptr [rax], eax ; add byte ptr [rbp + 0x31], al ; dec dword ptr [rax + 0x39] ; ret 0x860f
0x0000000000476fd6 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000043fd42 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000437105 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7501
0x0000000000437112 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7502
0x000000000043711f : add dword ptr [rax], eax ; add dh, dh ; ret 0x7504
0x00000000004370d7 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x00000000004370e4 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x00000000004370f1 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7540
0x0000000000416c38 : add dword ptr [rax], eax ; and ch, 2 ; cmovne rax, rdx ; ret
0x0000000000415f5c : add dword ptr [rax], eax ; cmove rax, rdx ; ret
0x0000000000415ec3 : add dword ptr [rax], eax ; cmovne rax, rdx ; ret
0x00000000004750c2 : add dword ptr [rax], eax ; movss dword ptr [rsp - 0x28], xmm0 ; ret
0x0000000000405540 : add dword ptr [rax], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043e3e1 : add dword ptr [rax], esp ; jmp rdx
0x000000000040d922 : add dword ptr [rbp + 0x738948c9], eax ; cmp byte ptr [rdi], cl ; ret 0x389
0x000000000043cb32 : add dword ptr [rbp + 0xb], esi ; ret
0x0000000000474002 : add dword ptr [rbp + rcx*4 + 0x74], ecx ; ret
0x0000000000400a7c : add dword ptr [rbp - 0x3d], ebx ; nop ; ret
0x000000000043b16e : add dword ptr [rbp - 0x57c03b0], ecx ; add ecx, dword ptr [rdi] ; xchg eax, esi ; ret 0xc085
0x000000000044ce82 : add dword ptr [rbp - 0x7b], eax ; in al, 0xf ; lahf ; ret
0x000000000043d5f9 : add dword ptr [rbp - 0xc], esi ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000427c42 : add dword ptr [rbx + 0x157890e], ecx ; mov dword ptr [rdi], ecx ; ret
0x0000000000459c64 : add dword ptr [rbx - 0x4f743], eax ; jmp qword ptr [rax]
0x000000000043a966 : add dword ptr [rbx - 0x50f0fe40], eax ; ret 0xda89
0x000000000044c2a3 : add dword ptr [rbx - 0x7bf00006], eax ; ret
0x0000000000405c86 : add dword ptr [rbx - 0x7cb70030], eax ; ret
0x0000000000415fed : add dword ptr [rcx + 0x29], ecx ; ret
0x0000000000416045 : add dword ptr [rcx + 0x39], ecx ; ret 0x672
0x000000000043cb8c : add dword ptr [rcx + 9], ecx ; ret 0x894d
0x0000000000434a61 : add dword ptr [rcx - 0x776b7fe], ecx ; ret
0x0000000000443d2f : add dword ptr [rcx - 0x77], ecx ; ret 0x8348
0x0000000000465724 : add dword ptr [rcx - 0x7d], ecx ; jmp qword ptr [rax]
0x0000000000464b7b : add dword ptr [rcx - 0x7d], ecx ; ret 0xf01
0x00000000004455e8 : add dword ptr [rcx], ecx ; ret 0x3948
0x000000000043a242 : add dword ptr [rdi + 0x15], esi ; jb 0x43a250 ; mov byte ptr [rdi], cl ; ret
0x000000000040f942 : add dword ptr [rdi + rcx + 0x44], eax ; ret 0xf641
0x000000000049be8d : add dword ptr [rdi], 0x48 ; or eax, 0x1370303 ; ret
0x000000000049be25 : add dword ptr [rdi], 0x48 ; or eax, 0x34b0303 ; ret
0x000000000049be59 : add dword ptr [rdi], 0x48 ; or eax, 0x35b0303 ; ret
0x000000000049be36 : add dword ptr [rdi], 0xd ; add eax, dword ptr [rbx] ; or al, byte ptr [rcx] ; ret
0x000000000049be6a : add dword ptr [rdi], 0xd ; add eax, dword ptr [rdx] ; cld ; ret
0x000000000049be9e : add dword ptr [rdi], 0xd ; add eax, dword ptr [rdx] ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000049833d : add dword ptr [rdi], 3 ; ret 0xa01
0x000000000043a969 : add dword ptr [rdi], ecx ; scasd eax, dword ptr [rdi] ; ret 0xda89
0x000000000043a977 : add dword ptr [rdi], ecx ; scasd eax, dword ptr [rdi] ; ror dword ptr [rdi], -0x51 ; ret 0xffe9
0x0000000000445cf3 : add dword ptr [rdi], ecx ; test dword ptr [rsi], edx ; add al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret
0x000000000043923c : add dword ptr [rdx + 2], esi ; mov byte ptr [rdi], cl ; ret
0x000000000042aacd : add dword ptr [rdx + 4], esi ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000046ff1b : add dword ptr [rdx + rax*2], 1 ; ret
0x000000000049ae8c : add dword ptr [rdx], 0x4a ; ret
0x000000000049da54 : add dword ptr [rdx], 0x55 ; ret
0x000000000049a4f4 : add dword ptr [rdx], 0x58 ; or cl, byte ptr [rsi] ; or byte ptr [rdi + 0xb], al ; push rsp ; ret
0x0000000000496d60 : add dword ptr [rdx], 0x5a ; ret
0x000000000049da10 : add dword ptr [rdx], 0x76 ; ret
0x000000000040ef58 : add dword ptr [rip + 0x294cd5], 1 ; ret
0x00000000004966a5 : add dword ptr [rsi + rcx + 0x10], ecx ; ret
0x000000000049513f : add dword ptr [rsi + rcx + 0x30], ecx ; add ch, byte ptr [rsi + rcx + 8] ; ret
0x0000000000434a42 : add dword ptr [rsi - 0x77], esp ; add cl, byte ptr [rax - 0x77] ; clc ; ret
0x00000000004963fe : add dword ptr [rsp + rax*2], 0xe ; xor byte ptr [rdx], al ; ret
0x00000000004744fd : add eax, 0x1489066 ; ret 0xb70f
0x000000000044a660 : add eax, 0x18c48348 ; ret
0x0000000000416d59 : add eax, 0x1bb12 ; cmove rax, rdx ; ret
0x0000000000415f59 : add eax, 0x1cf42 ; cmove rax, rdx ; ret
0x000000000043b9aa : add eax, 0x1f0fc3f3 ; add byte ptr [rax - 0x39], cl ; ret 0xffc0
0x000000000041dd8a : add eax, 0x20 ; add rax, rdi ; vzeroupper ; ret
0x0000000000416910 : add eax, 0x221ab ; cmove rax, rdx ; ret
0x0000000000416c99 : add eax, 0x22732 ; cmovne rax, rdx ; ret
0x0000000000416b59 : add eax, 0x22862 ; cmovne rax, rdx ; ret
0x00000000004169f9 : add eax, 0x229d2 ; cmovne rax, rdx ; ret
0x0000000000416d00 : add eax, 0x22a7b ; cmovne rax, rdx ; ret
0x00000000004798c1 : add eax, 0x22a9de ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000004797b1 : add eax, 0x22aaee ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000416bc0 : add eax, 0x22bab ; cmovne rax, rdx ; ret
0x0000000000416a60 : add eax, 0x22d1b ; cmovne rax, rdx ; ret
0x0000000000416cdf : add eax, 0x22ecc ; cmovne rax, rdx ; ret
0x0000000000416b9f : add eax, 0x22ffc ; cmovne rax, rdx ; ret
0x0000000000415ee0 : add eax, 0x2307b ; cmovne rax, rdx ; ret
0x0000000000416a3f : add eax, 0x2316c ; cmovne rax, rdx ; ret
0x00000000004700b1 : add eax, 0x23472a ; ret
0x000000000046f529 : add eax, 0x234a5a ; ret
0x000000000046f50e : add eax, 0x234a75 ; add rsp, 8 ; ret
0x0000000000416acb : add eax, 0x23660 ; cmovne rax, rdx ; ret
0x0000000000416aae : add eax, 0x237dd ; cmovne rax, rdx ; ret
0x0000000000416aff : add eax, 0x2390c ; cmovne rax, rdx ; ret
0x000000000046af0c : add eax, 0x2393b7 ; mov qword ptr [rsi], rax ; ret
0x000000000046ae9b : add eax, 0x239430 ; ret
0x000000000046ae62 : add eax, 0x239469 ; add rsp, 8 ; ret
0x000000000046ada6 : add eax, 0x239525 ; ret
0x000000000045a494 : add eax, 0x244cc7 ; mov rax, qword ptr [rax + rsi*8] ; jmp rax
0x0000000000459e8a : add eax, 0x2452d1 ; mov rax, qword ptr [rax + rsi*8] ; jmp rax
0x000000000044f962 : add eax, 0x24f0f9 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x000000000044f40b : add eax, 0x24f650 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x000000000044e794 : add eax, 0x24fdc7 ; jmp rax
0x0000000000447f12 : add eax, 0x25be81 ; ret
0x000000000043f082 : add eax, 0x263199 ; ret
0x0000000000440602 : add eax, 0x264241 ; ret
0x0000000000416c79 : add eax, 0x28d092 ; add dh, byte ptr [rax + rcx - 9] ; ret 0
0x0000000000416b39 : add eax, 0x28d1d2 ; add dh, byte ptr [rax + rcx - 9] ; ret 0
0x00000000004144a7 : add eax, 0x28d2d4 ; ret
0x00000000004169d9 : add eax, 0x28d332 ; add dh, byte ptr [rax + rcx - 9] ; ret 0
0x00000000004144b1 : add eax, 0x28f7d6 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000410c5d : add eax, 0x290b1e ; ret
0x000000000040f875 : add eax, 0x291eee ; ret
0x000000000040f865 : add eax, 0x291ef6 ; ret
0x000000000040f815 : add eax, 0x291efe ; ret
0x000000000040f7ef : add eax, 0x291f0c ; ret
0x000000000040f805 : add eax, 0x291f16 ; ret
0x000000000040f7bf : add eax, 0x291f44 ; ret
0x000000000040f79e : add eax, 0x291f89 ; ret
0x000000000040eec2 : add eax, 0x292179 ; ret
0x0000000000410c11 : add eax, 0x293076 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040f7d4 : add eax, 0x2944db ; ret
0x000000000040efbd : add eax, 0x294c72 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040133b : add eax, 0x2a29de ; or byte ptr [rdi], cl ; ret 0x589
0x000000000046fafe : add eax, 0x38c48348 ; ret
0x00000000004014f7 : add eax, 0x390003a6 ; ret
0x000000000041ddaa : add eax, 0x40 ; add rax, rdi ; vzeroupper ; ret
0x000000000048c5cd : add eax, 0x448fffd ; std ; call qword ptr [rax]
0x000000000048c585 : add eax, 0x458fffd ; std ; call qword ptr [rax]
0x0000000000436278 : add eax, 0x48054289 ; lea eax, dword ptr [rdx + 8] ; ret
0x0000000000434aa8 : add eax, 0x48054289 ; mov eax, edi ; ret
0x0000000000436776 : add eax, 0x480f8948 ; mov dword ptr [rdi + 5], edx ; ret
0x000000000048c50d : add eax, 0x4a0fffd ; std ; call qword ptr [rax]
0x000000000048c54d : add eax, 0x4c8fffd ; std ; call qword ptr [rax]
0x000000000048c561 : add eax, 0x4d8fffd ; std ; call qword ptr [rax]
0x000000000048c525 : add eax, 0x510fffd ; std ; call qword ptr [rax]
0x00000000004362f9 : add eax, 0x5428948 ; lea rax, qword ptr [rdx + 0xc] ; ret
0x0000000000434ae9 : add eax, 0x5428948 ; mov rax, rdi ; ret
0x000000000043bf28 : add eax, 0x58c48348 ; ret
0x000000000046fca0 : add eax, 0x5b ; cmovne rax, rdx ; ret
0x000000000048b25d : add eax, 0x5c00000 ; add byte ptr [rax], al ; ret 5
0x000000000041ddca : add eax, 0x60 ; add rax, rdi ; vzeroupper ; ret
0x0000000000416d29 : add eax, 0x6c52 ; cmove rax, rdx ; ret
0x0000000000416939 : add eax, 0x6d12 ; cmove rax, rdx ; ret
0x000000000041699d : add eax, 0x79ee ; je 0x416972 ; ret
0x0000000000466134 : add eax, 0x83480000 ; ret
0x000000000041d0d7 : add eax, 0x83480000 ; ret 0x4910
0x0000000000430a01 : add eax, 0x83480000 ; ret 0xe910
0x000000000041d105 : add eax, 0x83480000 ; ret 0xeb10
0x000000000043627b : add eax, 0x8428d48 ; ret
0x000000000045f1c9 : add eax, 0x912 ; cmove rax, rdx ; ret
0x00000000004604f9 : add eax, 0xa12 ; cmove rax, rdx ; ret
0x000000000041f7ca : add eax, 0xc0310000 ; ret
0x0000000000403236 : add eax, 0xc2e8002a ; int 0xbf
0x00000000004362fd : add eax, 0xc428d48 ; ret
0x0000000000436ddd : add eax, 0xc478d48 ; ret
0x000000000041e78b : add eax, 0xc634900 ; xchg eax, ebx ; add rcx, r11 ; jmp rcx
0x000000000045f199 : add eax, 0xe02 ; cmove rax, rdx ; ret
0x0000000000444766 : add eax, 0xe9000000 ; ret 0xfffc
0x00000000004774ba : add eax, 0xf7148948 ; ret
0x0000000000427c33 : add eax, 0xf7f0ff3 ; ret
0x00000000004797ca : add eax, 0xffff50e9 ; push rbx ; ret
0x00000000004404b5 : add eax, 1 ; push rax ; call rbx
0x0000000000461111 : add eax, 1 ; ret
0x0000000000461108 : add eax, 2 ; ret
0x0000000000461121 : add eax, 3 ; ret
0x000000000044a579 : add eax, dword ptr [0] ; ret
0x0000000000444493 : add eax, dword ptr [rax] ; add bh, dh ; ret 0
0x0000000000467288 : add eax, dword ptr [rax] ; add bl, dh ; ret
0x000000000047436c : add eax, dword ptr [rax] ; add byte ptr [rax + 1], cl ; ret
0x0000000000412000 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x73], cl ; push rax ; adc dh, dh ; ret 0xf0f
0x0000000000400e6b : add eax, dword ptr [rax] ; add byte ptr [rax - 0x75], cl ; push rax ; and byte ptr [rax + 1], cl ; ret 0xb70f
0x000000000041d2b7 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000430ba1 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000041d2e5 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000043ca3c : add eax, dword ptr [rax] ; add byte ptr [rax], al ; pop rbp ; pop r12 ; jmp rax
0x0000000000461163 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; ret
0x0000000000474104 : add eax, dword ptr [rax] ; add byte ptr [rcx + 0x3c8b48d8], cl ; ret 0x87f6
0x000000000043dc05 : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x77], al ; ret
0x00000000004680c6 : add eax, dword ptr [rax] ; add dh, dh ; ret 0x7403
0x0000000000466dbf : add eax, dword ptr [rax] ; add dh, dh ; ret 0xf08
0x0000000000454b25 : add eax, dword ptr [rax] ; add dh, dh ; ret 0xf40
0x000000000044e2ee : add eax, dword ptr [rax] ; call 0x40a5f4
0x0000000000401a00 : add eax, dword ptr [rax] ; jmp 0x4019ef
0x000000000045c0e4 : add eax, dword ptr [rax] ; movsxd rax, dword ptr [rcx + rax*4] ; add rax, rcx ; jmp rax
0x000000000043a670 : add eax, dword ptr [rax] ; pop rbx ; ret
0x0000000000468d5c : add eax, dword ptr [rbp - 0xb8] ; call rax
0x000000000049be39 : add eax, dword ptr [rbx] ; or al, byte ptr [rcx] ; ret
0x000000000046214a : add eax, dword ptr [rcx + rdx] ; ret
0x0000000000471787 : add eax, dword ptr [rdx + 8] ; call rax
0x000000000049be6d : add eax, dword ptr [rdx] ; cld ; ret
0x000000000049bea1 : add eax, dword ptr [rdx] ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000499ca2 : add eax, dword ptr [rsi + 0xe] ; and byte ptr [rsi + rcx + 0x18], bh ; ret
0x0000000000467e46 : add eax, dword ptr [rsi] ; call rax
0x00000000004750f6 : add eax, eax ; jmp rax
0x000000000043f204 : add eax, ebp ; jmp rax
0x0000000000468127 : add eax, ebx ; call rax
0x000000000043f18c : add eax, ebx ; jmp rax
0x0000000000432d28 : add eax, ecx ; add rax, rdi ; vzeroupper ; ret
0x000000000040fec6 : add eax, ecx ; cmp rax, rdx ; jne 0x40fed7 ; ret
0x000000000045c03b : add eax, ecx ; jmp rax
0x000000000041d6d9 : add eax, ecx ; ret
0x000000000043308d : add eax, ecx ; sub rax, rdx ; vzeroupper ; ret
0x000000000041dc06 : add eax, ecx ; vzeroupper ; ret
0x000000000041d6d6 : add eax, edi ; add rax, rcx ; ret
0x000000000041dc03 : add eax, edi ; add rax, rcx ; vzeroupper ; ret
0x000000000047531c : add eax, edi ; jmp rax
0x000000000041d904 : add eax, edi ; ret
0x000000000046fe50 : add eax, edi ; sub rax, r8 ; ret
0x0000000000433145 : add eax, edi ; sub rax, rdx ; vzeroupper ; ret
0x00000000004390ea : add eax, edi ; sub rax, rsi ; ret
0x000000000041dd7a : add eax, edi ; vzeroupper ; ret
0x0000000000401b96 : add eax, edx ; jmp rax
0x0000000000433036 : add eax, edx ; sub rax, rdi ; ret
0x0000000000460e0b : add eax, edx ; sub rax, rdi ; shr rax, 2 ; ret
0x000000000043a61c : add eax, esi ; jmp rax
0x000000000040ec5d : add eax, esi ; mov qword ptr [rdx + 8], rax ; xor eax, eax ; ret
0x000000000047636d : add eax, esp ; jmp rax
0x0000000000451578 : add ebp, 0x30 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x00000000004067fc : add ebp, 8 ; mov qword ptr [r15], rax ; jmp 0x4067cd
0x000000000040697b : add ebp, 8 ; mov qword ptr [r15], rax ; jmp 0x40694d
0x0000000000467e42 : add ebx, 0x18 ; add rax, qword ptr [r14] ; call rax
0x000000000047491a : add ebx, dword ptr [rax + 0x5a] ; pop rbx ; ret
0x0000000000472fa9 : add ebx, dword ptr [rbp + 0x41] ; pop rsp ; ret
0x000000000040d9a1 : add ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000049be5e : add ebx, dword ptr [rbx + 3] ; ret
0x000000000043fd5f : add ebx, dword ptr [rbx - 0x2d] ; loopne 0x43fdc8 ; pop r12 ; ret
0x000000000046da61 : add ebx, eax ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x000000000041e4eb : add ebx, eax ; nop dword ptr [rax] ; ret
0x0000000000427df3 : add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x000000000043a227 : add ecx, 0x40 ; cmp rdx, rcx ; jne 0x43a21c ; ret
0x0000000000434a95 : add ecx, dword ptr [r9 - 0x76b7fcbe] ; clc ; ret
0x0000000000434a99 : add ecx, dword ptr [rax - 0x77] ; clc ; ret
0x000000000046a259 : add ecx, dword ptr [rax - 0x77] ; mov rax, r8 ; pop rbx ; ret
0x0000000000443db5 : add ecx, dword ptr [rax - 0x77] ; ret 0x3389
0x000000000044652c : add ecx, dword ptr [rax - 0x77] ; ret 0x3b89
0x00000000004432b9 : add ecx, dword ptr [rax - 0x7b] ; ror byte ptr [rdi + rcx + 0x49], cl ; ret 0xc149
0x0000000000475e2f : add ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000407021 : add ecx, dword ptr [rbp + rcx*4 + 0x64] ; ret
0x000000000046c7da : add ecx, dword ptr [rbp - 0x77] ; dec byte ptr [rax - 0x7d] ; ret
0x0000000000427b62 : add ecx, dword ptr [rbx + 0x357890e] ; mov dword ptr [rdi], ecx ; ret
0x000000000049be2a : add ecx, dword ptr [rbx + 3] ; ret
0x0000000000436714 : add ecx, dword ptr [rcx + 0x357890f] ; ret
0x0000000000473fcf : add ecx, dword ptr [rcx + rcx*4 - 0x16] ; mov rsi, r12 ; mov edi, ebp ; call rax
0x0000000000434a96 : add ecx, dword ptr [rcx - 0x76b7fcbe] ; clc ; ret
0x0000000000462ae0 : add ecx, dword ptr [rdi] ; xchg eax, ebp ; ret 0xc084
0x000000000043b174 : add ecx, dword ptr [rdi] ; xchg eax, esi ; ret 0xc085
0x000000000043b1d5 : add ecx, dword ptr [rdi] ; xchg eax, esi ; ret 0xd284
0x0000000000451899 : add ecx, eax ; mov eax, r9d ; ret
0x000000000041fdfb : add ecx, ebx ; jmp r9
0x000000000041e792 : add ecx, ebx ; jmp rcx
0x000000000043a644 : add ecx, esi ; jmp rcx
0x000000000047837e : add edi, dword ptr [rax + 4] ; jne 0x4783a9 ; ret
0x000000000048c505 : add edi, ebp ; lcall ptr [rax + 4] ; std ; call qword ptr [rax]
0x000000000041fdf8 : add edi, edx ; add r9, r11 ; jmp r9
0x0000000000405d0c : add edi, edx ; jmp rdi
0x0000000000471c27 : add edx, eax ; jmp 0x471c35
0x000000000046e542 : add edx, eax ; mov rax, rdx ; pop rbx ; ret
0x0000000000405a23 : add edx, edi ; jmp rdx
0x00000000004486d6 : add esi, dword ptr [rdi + rax - 0xd] ; ret
0x000000000047c860 : add esi, dword ptr [rdx] ; cli ; call qword ptr [rbx + 0x23fffa32]
0x000000000044930c : add esi, eax ; add byte ptr [rdi], ch ; mov byte ptr [rdi], 0 ; ret
0x0000000000449ac5 : add esi, eax ; jmp rsi
0x0000000000403d85 : add esi, eax ; mov eax, dword ptr [r15 + 4] ; jmp 0x403d57
0x0000000000427d13 : add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x0000000000439445 : add esi, ebx ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000043b95c : add esi, ebx ; ret
0x00000000004136e0 : add esi, ebx ; stosq qword ptr [rdi], rax ; pop rbx ; ret
0x000000000043a74e : add esi, edi ; int1 ; pop rbx ; mov eax, eax ; ret
0x0000000000468391 : add esi, edi ; test edi, edi ; jne 0x46839f ; call rax
0x000000000041fdf5 : add esi, edx ; add rdi, rdx ; add r9, r11 ; jmp r9
0x000000000040d661 : add esp, 0x10 ; pop rbx ; jmp rax
0x0000000000408851 : add esp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040eb5f : add esp, 0x10 ; pop rbx ; ret
0x0000000000409f45 : add esp, 0x10 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000438fed : add esp, 0x100 ; sub rax, rdx ; ret
0x00000000004063e2 : add esp, 0x110 ; pop rbx ; ret
0x000000000044a8aa : add esp, 0x148 ; ret
0x0000000000414613 : add esp, 0x18 ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x0000000000414656 : add esp, 0x18 ; pop rbx ; pop rbp ; jmp rax
0x000000000043ef2a : add esp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004098d5 : add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000004150d9 : add esp, 0x18 ; ret
0x000000000040de0d : add esp, 0x20 ; mov ecx, edx ; pop rbx ; xor edx, edx ; jmp rax
0x000000000040dbbd : add esp, 0x20 ; pop rbx ; jmp rax
0x000000000040de46 : add esp, 0x20 ; pop rbx ; mov ecx, edx ; xor edx, edx ; jmp rax
0x000000000044818b : add esp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040d92f : add esp, 0x20 ; pop rbx ; ret
0x000000000043b92a : add esp, 0x28 ; ret
0x0000000000441268 : add esp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000472e4b : add esp, 0x30 ; pop rbx ; ret
0x0000000000474ee6 : add esp, 0x38 ; pop rbx ; pop r14 ; ret
0x0000000000406254 : add esp, 0x38 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000040d14e : add esp, 0x38 ; pop rbx ; pop rbp ; ret
0x0000000000461ff6 : add esp, 0x38 ; ret
0x000000000046d25c : add esp, 0x48 ; jmp qword ptr [rax]
0x000000000043b602 : add esp, 0x48 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000046d4a9 : add esp, 0x48 ; ret
0x000000000046d1ea : add esp, 0x58 ; jmp qword ptr [rax]
0x000000000043bb5a : add esp, 0x58 ; ret
0x0000000000460614 : add esp, 0x60 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043ba4c : add esp, 0x68 ; ret
0x000000000046081b : add esp, 0x70 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000461da1 : add esp, 0x78 ; ret
0x00000000004561c3 : add esp, 0x80 ; mov eax, edx ; pop rbx ; ret
0x000000000040876e : add esp, 0x80 ; mov eax, esi ; pop rbx ; ret
0x0000000000461abb : add esp, 0x80 ; pop rbx ; ret
0x000000000040cef8 : add esp, 0x80 ; ret
0x0000000000400d22 : add esp, 0x88 ; pop rbx ; ret
0x000000000040b024 : add esp, 0xa8 ; pop rbx ; pop rbp ; ret
0x0000000000448066 : add esp, 0xb8 ; pop rbx ; pop r12 ; ret
0x0000000000407dc7 : add esp, 0xd0 ; pop rbx ; ret
0x0000000000407f56 : add esp, 0xd8 ; pop rbx ; pop rbp ; ret
0x0000000000407a24 : add esp, 0xd8 ; ret
0x0000000000409c4f : add esp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x000000000046b6eb : add esp, 8 ; mov eax, ebx ; pop rbx ; pop rbp ; ret
0x00000000004082ee : add esp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000040fe30 : add esp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x000000000040b196 : add esp, 8 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x0000000000472d99 : add esp, 8 ; movzx eax, al ; neg eax ; ret
0x000000000040b8a4 : add esp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000401cb3 : add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000400413 : add esp, 8 ; ret
0x0000000000413a9f : add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000047e681 : add esp, edi ; call qword ptr [rax]
0x000000000047e685 : add esp, edi ; push rax ; add ah, bh ; call rax
0x0000000000442414 : add qword ptr [rax - 0x7d], r9 ; ret 0x8b01
0x0000000000427df2 : add r11d, r14d ; movq qword ptr [rdi], mm1 ; ret
0x0000000000468390 : add r14, r15 ; test edi, edi ; jne 0x4683a0 ; call rax
0x0000000000403d84 : add r14, rax ; mov eax, dword ptr [r15 + 4] ; jmp 0x403d58
0x0000000000427d82 : add r14b, r11b ; movq qword ptr [rdi], mm1 ; ret
0x0000000000427d12 : add r14d, r11d ; movq qword ptr [rdi], mm1 ; ret
0x000000000041d2e4 : add r8, qword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000041fdfa : add r9, r11 ; jmp r9
0x0000000000451898 : add r9d, eax ; mov eax, r9d ; ret
0x0000000000461110 : add rax, 1 ; ret
0x0000000000461107 : add rax, 2 ; ret
0x0000000000461120 : add rax, 3 ; ret
0x000000000044a578 : add rax, qword ptr [0] ; ret
0x0000000000467e45 : add rax, qword ptr [r14] ; call rax
0x0000000000468d5b : add rax, qword ptr [rbp - 0xb8] ; call rax
0x0000000000471786 : add rax, qword ptr [rdx + 8] ; call rax
0x000000000044a577 : add rax, qword ptr fs:[0] ; ret
0x0000000000468126 : add rax, r11 ; call rax
0x000000000047636c : add rax, r12 ; jmp rax
0x0000000000476c6d : add rax, r14 ; jmp rax
0x000000000047531b : add rax, r15 ; jmp rax
0x00000000004750f5 : add rax, r8 ; jmp rax
0x00000000004768a5 : add rax, r9 ; jmp rax
0x000000000043f203 : add rax, rbp ; jmp rax
0x000000000043f18b : add rax, rbx ; jmp rax
0x0000000000432d27 : add rax, rcx ; add rax, rdi ; vzeroupper ; ret
0x000000000040fec5 : add rax, rcx ; cmp rax, rdx ; jne 0x40fed8 ; ret
0x000000000045c03a : add rax, rcx ; jmp rax
0x000000000041d6d8 : add rax, rcx ; ret
0x000000000043308c : add rax, rcx ; sub rax, rdx ; vzeroupper ; ret
0x000000000041dc05 : add rax, rcx ; vzeroupper ; ret
0x000000000041d6d5 : add rax, rdi ; add rax, rcx ; ret
0x000000000041dc02 : add rax, rdi ; add rax, rcx ; vzeroupper ; ret
0x000000000041d903 : add rax, rdi ; ret
0x000000000046fe4f : add rax, rdi ; sub rax, r8 ; ret
0x0000000000433144 : add rax, rdi ; sub rax, rdx ; vzeroupper ; ret
0x00000000004390e9 : add rax, rdi ; sub rax, rsi ; ret
0x000000000041dd79 : add rax, rdi ; vzeroupper ; ret
0x0000000000401b95 : add rax, rdx ; jmp rax
0x0000000000433035 : add rax, rdx ; sub rax, rdi ; ret
0x000000000043a61b : add rax, rsi ; jmp rax
0x00000000004067fb : add rbp, 8 ; mov qword ptr [r15], rax ; jmp 0x4067ce
0x000000000040697a : add rbp, 8 ; mov qword ptr [r15], rax ; jmp 0x40694e
0x0000000000467e41 : add rbx, 0x18 ; add rax, qword ptr [r14] ; call rax
0x000000000041e791 : add rcx, r11 ; jmp rcx
0x000000000043a643 : add rcx, rsi ; jmp rcx
0x0000000000405d0b : add rdi, r10 ; jmp rdi
0x000000000041fdf7 : add rdi, rdx ; add r9, r11 ; jmp r9
0x000000000046e541 : add rdx, r8 ; mov rax, rdx ; pop rbx ; ret
0x0000000000471c26 : add rdx, rax ; jmp 0x471c36
0x0000000000405a22 : add rdx, rdi ; jmp rdx
0x0000000000449ac4 : add rsi, r8 ; jmp rsi
0x000000000040d660 : add rsp, 0x10 ; pop rbx ; jmp rax
0x0000000000408850 : add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040eb5e : add rsp, 0x10 ; pop rbx ; ret
0x00000000004063e1 : add rsp, 0x110 ; pop rbx ; ret
0x000000000044a8a9 : add rsp, 0x148 ; ret
0x0000000000414612 : add rsp, 0x18 ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x0000000000414655 : add rsp, 0x18 ; pop rbx ; pop rbp ; jmp rax
0x00000000004098d4 : add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000004150d8 : add rsp, 0x18 ; ret
0x000000000040de0c : add rsp, 0x20 ; mov ecx, edx ; pop rbx ; xor edx, edx ; jmp rax
0x000000000040dbbc : add rsp, 0x20 ; pop rbx ; jmp rax
0x000000000040de45 : add rsp, 0x20 ; pop rbx ; mov ecx, edx ; xor edx, edx ; jmp rax
0x000000000044818a : add rsp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040d92e : add rsp, 0x20 ; pop rbx ; ret
0x000000000043b929 : add rsp, 0x28 ; ret
0x0000000000441267 : add rsp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000472e4a : add rsp, 0x30 ; pop rbx ; ret
0x0000000000474ee5 : add rsp, 0x38 ; pop rbx ; pop r14 ; ret
0x000000000040d14d : add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x0000000000461ff5 : add rsp, 0x38 ; ret
0x000000000046d25b : add rsp, 0x48 ; jmp qword ptr [rax]
0x000000000046d4a8 : add rsp, 0x48 ; ret
0x000000000046d1e9 : add rsp, 0x58 ; jmp qword ptr [rax]
0x000000000043bb59 : add rsp, 0x58 ; ret
0x0000000000460613 : add rsp, 0x60 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043ba4b : add rsp, 0x68 ; ret
0x000000000046081a : add rsp, 0x70 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000461da0 : add rsp, 0x78 ; ret
0x0000000000461aba : add rsp, 0x80 ; pop rbx ; ret
0x000000000040cef7 : add rsp, 0x80 ; ret
0x0000000000400d21 : add rsp, 0x88 ; pop rbx ; ret
0x000000000040b023 : add rsp, 0xa8 ; pop rbx ; pop rbp ; ret
0x0000000000407dc6 : add rsp, 0xd0 ; pop rbx ; ret
0x0000000000407f55 : add rsp, 0xd8 ; pop rbx ; pop rbp ; ret
0x0000000000407a23 : add rsp, 0xd8 ; ret
0x0000000000409c4e : add rsp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x000000000046b6ea : add rsp, 8 ; mov eax, ebx ; pop rbx ; pop rbp ; ret
0x00000000004082ed : add rsp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000040fe2f : add rsp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x000000000040b195 : add rsp, 8 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x0000000000472d98 : add rsp, 8 ; movzx eax, al ; neg eax ; ret
0x0000000000401cb2 : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000400412 : add rsp, 8 ; ret
0x0000000000413a9e : add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000415196 : add sil, sil ; ret 0x4804
0x0000000000416c37 : add word ptr [rax], ax ; and ch, 2 ; cmovne rax, rdx ; ret
0x000000000046ff1a : add word ptr [rdx + rax*2], 1 ; ret
0x000000000044e797 : and al, 0 ; jmp rax
0x000000000044e790 : and al, 0 ; lea r8, qword ptr [rip + 0x24fdc7] ; jmp rax
0x000000000044f40e : and al, 0 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x0000000000459e8d : and al, 0 ; mov rax, qword ptr [rax + rsi*8] ; jmp rax
0x0000000000477558 : and al, 0x10 ; add rsp, 0x28 ; ret
0x0000000000479111 : and al, 0x10 ; call r14
0x000000000046d90b : and al, 0x10 ; call rdx
0x00000000004481b0 : and al, 0x10 ; mov dword ptr [r12], edx ; jmp 0x448181
0x00000000004125d1 : and al, 0x10 ; mov qword ptr [rsp + 8], rax ; call rcx
0x000000000041254e : and al, 0x10 ; mov qword ptr [rsp + 8], rax ; call rsi
0x000000000043ccbb : and al, 0x10 ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x000000000045e9f2 : and al, 0x10 ; mov rdi, r12 ; call rbx
0x000000000044ad60 : and al, 0x10 ; mov rdi, rbp ; call r12
0x0000000000478ef8 : and al, 0x10 ; or byte ptr [rax - 0x7d], cl ; ret
0x0000000000414be3 : and al, 0x18 ; add rsp, 0x10 ; pop rbx ; jmp rax
0x00000000004010d5 : and al, 0x18 ; call rax
0x0000000000416457 : and al, 0x18 ; jmp 0x416421
0x0000000000440438 : and al, 0x18 ; mov r9, r13 ; call rbx
0x000000000045e90d : and al, 0x18 ; mov rdi, r12 ; call rbx
0x0000000000460b1f : and al, 0x18 ; mov rdi, rbp ; mov r9, r14 ; call rbx
0x000000000046d906 : and al, 0x18 ; mov rdx, qword ptr [rsp + 0x10] ; call rdx
0x0000000000442762 : and al, 0x20 ; call r15
0x0000000000406775 : and al, 0x20 ; call rax
0x00000000004607e0 : and al, 0x20 ; call rbx
0x00000000004901c4 : and al, 0x26 ; outsd dx, dword ptr [rsi] ; ret 0x5ae4
0x0000000000414653 : and al, 0x28 ; add rsp, 0x18 ; pop rbx ; pop rbp ; jmp rax
0x00000000004606b8 : and al, 0x28 ; lea rcx, qword ptr [rax + 1] ; call rbx
0x000000000044275d : and al, 0x28 ; mov rdi, qword ptr [rsp + 0x20] ; call r15
0x0000000000415313 : and al, 0x28 ; mov rdi, rbp ; call rax
0x000000000044399c : and al, 0x30 ; call r14
0x0000000000443831 : and al, 0x30 ; call r15
0x0000000000443101 : and al, 0x30 ; call rbx
0x00000000004609ce : and al, 0x30 ; mov rdi, rbp ; call rbx
0x0000000000442b0d : and al, 0x38 ; call r14
0x00000000004447e8 : and al, 0x38 ; call r15
0x00000000004443c0 : and al, 0x38 ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000443997 : and al, 0x38 ; mov rdi, qword ptr [rsp + 0x30] ; call r14
0x000000000044382c : and al, 0x38 ; mov rdi, qword ptr [rsp + 0x30] ; call r15
0x00000000004430fc : and al, 0x38 ; mov rdi, qword ptr [rsp + 0x30] ; call rbx
0x000000000046d259 : and al, 0x40 ; add rsp, 0x48 ; jmp qword ptr [rax]
0x000000000046d1e7 : and al, 0x40 ; add rsp, 0x58 ; jmp qword ptr [rax]
0x000000000044545d : and al, 0x40 ; call r15
0x0000000000444fa0 : and al, 0x40 ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x0000000000442b08 : and al, 0x40 ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x00000000004447e3 : and al, 0x40 ; mov rdi, qword ptr [rsp + 0x38] ; call r15
0x000000000040d688 : and al, 0x48 ; add esp, 0x10 ; pop rbx ; jmp rax
0x0000000000474fc8 : and al, 0x48 ; add esp, 0x38 ; pop rbx ; pop r14 ; ret
0x0000000000474ccc : and al, 0x48 ; add esp, 0x38 ; ret
0x0000000000446346 : and al, 0x48 ; call r14
0x0000000000443bf6 : and al, 0x48 ; call r15
0x000000000040b4e4 : and al, 0x48 ; mov edi, ebx ; call rax
0x0000000000477ffe : and al, 0x48 ; mov edx, dword ptr [rbp] ; call r12
0x0000000000445458 : and al, 0x48 ; mov rdi, qword ptr [rsp + 0x40] ; call r15
0x0000000000477faf : and al, 0x4c ; lea esi, dword ptr [rbx + rcx*8] ; mov rsi, qword ptr [r14] ; call r12
0x0000000000446341 : and al, 0x50 ; mov rdi, qword ptr [rsp + 0x48] ; call r14
0x0000000000443bf1 : and al, 0x50 ; mov rdi, qword ptr [rsp + 0x48] ; call r15
0x00000000004027a7 : and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x0000000000465545 : and al, 0x80 ; add byte ptr [rax], al ; add cl, ch ; ret
0x0000000000408153 : and al, 0x88 ; add byte ptr [rax], al ; add al, ch ; ret
0x0000000000447b6d : and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000040fc13 : and al, 0x89 ; adc byte ptr [r11 + 0x5d], r11b ; ret
0x000000000044864d : and al, 0x89 ; ret
0x0000000000404ff4 : and al, 0x90 ; add byte ptr [rax], al ; add al, ch ; ret 0xffb4
0x0000000000442e91 : and al, 0x98 ; add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret
0x00000000004429ab : and al, 0xa0 ; add byte ptr [rax], al ; add dh, dh ; ret 0x4801
0x0000000000447c43 : and al, 0xb0 ; add byte ptr [rax], al ; add byte ptr [rbp + 0x31], al ; leave ; call r15
0x000000000047713b : and al, 0xbf ; add dword ptr [rax], eax ; add byte ptr [rax], al ; call rax
0x000000000043bf8c : and al, 0xc ; add rsp, 0x10 ; pop rbx ; ret
0x00000000004010d0 : and al, 0xc ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x000000000040dabc : and al, 0xd8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0x2b40
0x00000000004750c8 : and al, 0xd8 ; ret
0x000000000040eb13 : and al, 0xe9 ; ret 0xfffd
0x00000000004481b5 : and al, 0xeb ; ret 0x1f0f
0x0000000000499a11 : and al, 0xfb ; call rsp
0x0000000000443b41 : and al, 8 ; add byte ptr [rcx - 0x77], al ; ret 0x8949
0x000000000040dbed : and al, 8 ; add rsp, 0x20 ; pop rbx ; jmp rax
0x000000000044aa4e : and al, 8 ; call r12
0x00000000004067eb : and al, 8 ; call rax
0x00000000004125d6 : and al, 8 ; call rcx
0x0000000000412553 : and al, 8 ; call rsi
0x0000000000478bfc : and al, 8 ; jmp 0x478c16
0x0000000000406770 : and al, 8 ; mov qword ptr [rsp + 0x20], r10 ; call rax
0x0000000000409270 : and al, 8 ; mov rdi, r15 ; call rax
0x000000000043b7e0 : and al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0xffe9
0x00000000004797b4 : and al, byte ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000047a3f3 : and al, byte ptr [rax] ; jne 0x47a3dd ; pop rbx ; ret
0x00000000004797a6 : and al, byte ptr [rax] ; test eax, eax ; je 0x4797b7 ; ret
0x00000000004798b6 : and al, byte ptr [rax] ; test eax, eax ; je 0x4798c7 ; ret
0x000000000043329a : and al, byte ptr [rsp - 0xb7f68c] ; ret 0xc148
0x000000000047d66f : and al, dl ; fdiv st(2), st(0) ; jmp rax
0x0000000000455363 : and bh, al ; add ch, byte ptr [rbx] ; add byte ptr [rax], al ; add cl, ch ; ret
0x0000000000457064 : and bh, al ; add ch, byte ptr [rip - 0x7d000000] ; ret
0x00000000004939cd : and bh, dh ; dec esp ; sbb bh, dh ; call rsp
0x0000000000409539 : and byte ptr [r8 + 1], r9b ; ret
0x000000000040949e : and byte ptr [r9 - 0x77], r9b ; xor byte ptr [r8 + 1], r9b ; ret 0x8b49
0x0000000000471c2e : and byte ptr [rax + 0x39], cl ; ret 0x2974
0x000000000044ace8 : and byte ptr [rax + 0x39], cl ; ret 0x8d48
0x0000000000432c3a : and byte ptr [rax + 0x3a], al ; xor byte ptr [rax + 0xf], cl ; ret 0xf8c5
0x000000000041dd8c : and byte ptr [rax + 1], cl ; clc ; vzeroupper ; ret
0x000000000040953a : and byte ptr [rax + 1], cl ; ret
0x0000000000400e71 : and byte ptr [rax + 1], cl ; ret 0xb70f
0x0000000000463a9c : and byte ptr [rax - 0x75], cl ; sub byte ptr [rax + 0x39], r9b ; ret 0x870f
0x0000000000449f54 : and byte ptr [rax - 0x77], cl ; sti ; test rax, rax ; je 0x449f68 ; call rax
0x0000000000441726 : and byte ptr [rax - 0x7d], cl ; ret
0x0000000000477636 : and byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000040af72 : and byte ptr [rax - 1], bh ; pop rbx ; ret
0x000000000047d66d : and byte ptr [rax], ah ; and al, dl ; fdiv st(2), st(0) ; jmp rax
0x000000000047d66b : and byte ptr [rax], ah ; and byte ptr [rax], ah ; and al, dl ; fdiv st(2), st(0) ; jmp rax
0x000000000047d66a : and byte ptr [rax], ah ; and byte ptr [rax], ah ; and byte ptr [rax], ah ; rcr ah, 1 ; cli ; jmp rax
0x000000000047d66c : and byte ptr [rax], ah ; and byte ptr [rax], ah ; rcr ah, 1 ; cli ; jmp rax
0x000000000047d66e : and byte ptr [rax], ah ; rcr ah, 1 ; cli ; jmp rax
0x0000000000477609 : and byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000043a72a : and byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000044818d : and byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000499a10 : and byte ptr [rbx + rdi*8], ah ; call rsp
0x000000000047cd38 : and byte ptr [rbx - 0x4e6f0006], ch ; cli ; jmp qword ptr [rax]
0x000000000047b000 : and byte ptr [rbx - 0x54df0008], ch ; clc ; call qword ptr [rax]
0x000000000047aff8 : and byte ptr [rbx - 0x54df0008], ch ; clc ; jmp qword ptr [rax]
0x0000000000497cd0 : and byte ptr [rbx - 6], al ; call qword ptr [rbx]
0x000000000044c4c0 : and byte ptr [rcx + 0x2b], cl ; push rdi ; sbb byte ptr [rax + 0x39], cl ; ret 0x850f
0x000000000040de0f : and byte ptr [rcx - 0x2dcea42f], cl ; jmp rax
0x000000000040949f : and byte ptr [rcx - 0x77], cl ; xor byte ptr [r8 + 1], r9b ; ret 0x8b49
0x0000000000439691 : and byte ptr [rdi], cl ; adc dword ptr [rdi + 0x30], edi ; movups xmmword ptr [r11], xmm8 ; ret
0x000000000043d748 : and byte ptr [rdi], cl ; test byte ptr [rcx], dl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000407f7b : and byte ptr [rdi], cl ; test dword ptr [rsi - 0x77000000], esp ; ret 0xe281
0x00000000004370e0 : and byte ptr [rdi], cl ; test ecx, ebx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x000000000041e82a : and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000499ca5 : and byte ptr [rsi + rcx + 0x18], bh ; ret
0x000000000043c5fc : and byte ptr [rsi - 0x76b70003], al ; ret
0x000000000049aba0 : and byte ptr [rsi - 4], dl ; jmp qword ptr [rax]
0x0000000000461102 : and ch, 0xf ; je 0x461129 ; add rax, 2 ; ret
0x000000000043a6e8 : and ch, 0xf0 ; cmovne rax, rdx ; pop rbx ; ret
0x0000000000416c3a : and ch, 2 ; cmovne rax, rdx ; ret
0x00000000004610ed : and cl, 0xf ; je 0x461115 ; ret
0x0000000000411d07 : and cl, bpl ; ret 0xfffc
0x000000000043e4d1 : and cl, byte ptr [rax + 0x63] ; add al, 0x82 ; add rax, rdx ; jmp rax
0x000000000046ae44 : and cl, byte ptr [rax - 0x77] ; ret 0x1f0f
0x000000000041e06d : and cl, byte ptr [rcx - 0x77] ; ret
0x0000000000411d08 : and cl, ch ; ret 0xfffc
0x000000000043de11 : and dh, al ; sub byte ptr [r9], r8b ; ret
0x0000000000457063 : and dil, al ; add ch, byte ptr [rip - 0x7d000000] ; ret
0x000000000047d2f8 : and dl, cl ; cli ; call qword ptr [rdx + 0x22fffad7]
0x00000000004164c3 : and dword ptr [rax - 0x7d], ecx ; ret 0x4801
0x000000000043b875 : and dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x6ae9
0x0000000000491ce2 : and dword ptr [rax], edx ; jmp qword ptr [rdi]
0x000000000040e197 : and dword ptr [rbx], 0xffffffef ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000040e1ef : and dword ptr [rbx], 0xffffffef ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000400a78 : and dword ptr [rdi], 0x2a ; add byte ptr [rcx], al ; pop rbp ; ret
0x000000000040effe : and dword ptr [rdi], ecx ; mov dh, 0 ; ret
0x0000000000416912 : and dword ptr [rdx], eax ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x000000000048ed99 : and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x0000000000491ce1 : and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x000000000044a57b : and eax, 0 ; ret
0x000000000046ef1c : and eax, 0x28 ; jne 0x46ef66 ; leave ; ret
0x00000000004004c9 : and eax, 0x2a0a32 ; nop ; ret
0x0000000000406f38 : and eax, 0x30 ; call rax
0x0000000000406e72 : and eax, 0x30 ; call rdx
0x0000000000406f5e : and eax, 0x30 ; mov rdi, qword ptr [rax + 0x20] ; call rdx
0x000000000043a66d : and eax, 0x3fc00 ; pop rbx ; ret
0x000000000043a6b8 : and eax, 0x3fffc00 ; pop rbx ; ret
0x0000000000442410 : and eax, 0x4e8d4800 ; add dword ptr [rax - 0x7d], ecx ; ret 0x8b01
0x00000000004103d4 : and eax, 0x518d4800 ; dec dword ptr [rax - 0x7b] ; ret 0x850f
0x000000000043a763 : and eax, 0x7ff80000 ; div ecx ; mov eax, eax ; ret
0x000000000043a707 : and eax, 0x7ff80000 ; ret
0x000000000043dc87 : and eax, 0xc ; cmp eax, 4 ; je 0x43dc98 ; ret
0x000000000044a51c : and eax, 0xf3087400 ; ret
0x0000000000415e92 : and eax, 0xf480000 ; ret 0xc3f3
0x000000000046da5c : and eax, 2 ; sub eax, 1 ; ret
0x000000000046ff17 : and eax, dword ptr [r8] ; add word ptr [rdx + rax*2], 1 ; ret
0x000000000046ae65 : and eax, dword ptr [rax] ; add rsp, 8 ; ret
0x000000000046ff18 : and eax, dword ptr [rax] ; add word ptr [rdx + rax*2], 1 ; ret
0x000000000046f96a : and eax, dword ptr [rax] ; mov qword ptr [rax], rdx ; add rsp, 8 ; ret
0x000000000046d6a8 : and eax, dword ptr [rax] ; mov qword ptr [rax], rdx ; pop rbx ; ret
0x000000000046f525 : and eax, dword ptr [rax] ; mov qword ptr [rip + 0x234a5a], rax ; ret
0x000000000046af0f : and eax, dword ptr [rax] ; mov qword ptr [rsi], rax ; ret
0x000000000046ada9 : and eax, dword ptr [rax] ; ret
0x0000000000467712 : and eax, dword ptr [rax] ; xor eax, eax ; add rsp, 8 ; ret
0x000000000040e198 : and ebp, edi ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000040e1f0 : and ebp, edi ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000049c4d5 : and ebp, edi ; call rdi
0x000000000043dc22 : and ebx, 0xffffffbb ; cmp r11d, 0xa ; je 0x43dc35 ; ret
0x000000000047d6f5 : and ebx, edi ; call qword ptr [rax]
0x000000000041fda5 : and ecx, 0xff ; sub eax, ecx ; ret
0x000000000041f4d8 : and ecx, 0xffff ; sub eax, ecx ; ret
0x000000000043d52a : and ecx, dword ptr [rax - 0x77] ; ret 0xabe
0x0000000000458819 : and ecx, dword ptr [rdi] ; add byte ptr [rax + 0x39], cl ; ret
0x00000000004975d5 : and edx, edi ; call rsp
0x00000000004700b3 : and r8d, dword ptr [r8] ; ret
0x000000000046f510 : and rax, qword ptr [rax] ; add rsp, 8 ; ret
0x000000000046f52b : and rax, qword ptr [rax] ; ret
0x0000000000460c47 : bnd je 0x460c56 ; test edx, edx ; jne 0x460c48 ; ret
0x000000000041d9da : bsf eax, eax ; add rax, rdi ; add rax, rcx ; ret
0x000000000041d900 : bsf eax, eax ; add rax, rdi ; ret
0x000000000041ddf1 : bsf eax, eax ; add rax, rdi ; vzeroupper ; ret
0x000000000041d910 : bsf eax, eax ; lea rax, qword ptr [rax + rdi + 0x10] ; ret
0x000000000041d920 : bsf eax, eax ; lea rax, qword ptr [rax + rdi + 0x20] ; ret
0x000000000041d8f0 : bsf eax, eax ; lea rax, qword ptr [rax + rdi - 0x10] ; ret
0x000000000041d84f : bsf eax, eax ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x00000000004328b3 : bsf eax, eax ; lea rax, qword ptr [rdi + rax] ; ret
0x0000000000432ed6 : bsf eax, edx ; ret
0x0000000000460cf7 : bsf eax, edx ; shr rax, 2 ; ret
0x0000000000433032 : bsf edx, edx ; add rax, rdx ; sub rax, rdi ; ret
0x00000000004329d0 : bsf rax, rax ; lea rax, qword ptr [rdi + rax] ; ret
0x0000000000432f22 : bsf rax, rdx ; ret
0x0000000000460cf6 : bsf rax, rdx ; shr rax, 2 ; ret
0x000000000045fb37 : bsr eax, eax ; add rax, rdi ; ret
0x000000000045fdbb : bsr eax, esi ; add rax, rdi ; ret
0x000000000045fcc9 : bsr esi, esi ; lea rax, qword ptr [rcx + rsi] ; ret
0x000000000045fbc5 : bsr esi, esi ; lea rax, qword ptr [rdi + rsi] ; ret
0x000000000045fb36 : bsr rax, rax ; add rax, rdi ; ret
0x000000000045fdba : bsr rax, rsi ; add rax, rdi ; ret
0x000000000045fcc8 : bsr rsi, rsi ; lea rax, qword ptr [rcx + rsi] ; ret
0x000000000045fbc4 : bsr rsi, rsi ; lea rax, qword ptr [rdi + rsi] ; ret
0x0000000000469748 : call 0x11091a98
0x0000000000497688 : call 0x114970ba
0x00000000004981d8 : call 0x11497c3a
0x0000000000499588 : call 0x1249909f
0x00000000004976d8 : call 0x1449710b
0x0000000000496bcd : call 0x30c6bcc
0x0000000000464203 : call 0x40042a
0x0000000000473d3a : call 0x40043f
0x0000000000465798 : call 0x401a22
0x000000000044e2f0 : call 0x40a5f2
0x000000000045e320 : call 0x40a622
0x0000000000411b89 : call 0x40fc78
0x0000000000413bc9 : call 0x40fe62
0x0000000000414126 : call 0x4103b2
0x0000000000414f91 : call 0x411232
0x00000000004488dd : call 0x414b42
0x0000000000468e3e : call 0x4150e2
0x0000000000400758 : call 0x43a5d6
0x0000000000400621 : call 0x43aa16
0x000000000045ecc3 : call 0x43af02
0x0000000000461973 : call 0x43dbb2
0x0000000000471b2b : call 0x43dd62
0x0000000000471b1b : call 0x43dd72
0x0000000000471e1c : call 0x469f26
0x0000000000451de4 : call 0x46e092
0x000000000042737a : call 0x4fc18378
0x0000000000427379 : call 0x4fc18379
0x0000000000429e9a : call 0x4fc1ae98
0x0000000000429e99 : call 0x4fc1ae99
0x000000000043a6ca : call 0xffffffff84062fde
0x000000000046c9d7 : call 0xffffffff84568c17
0x000000000048f803 : call 0xffffffffaf0b9679
0x0000000000452f6a : call 0xffffffffc27e7774
0x00000000004137e9 : call 0xffffffffc2ca8002
0x0000000000469d42 : call 0xffffffffc2cfe94c
0x00000000004585dc : call 0xffffffffc3c985e4
0x0000000000433387 : call 0xffffffffc413bcd8
0x00000000004332a7 : call 0xffffffffc43bbbf8
0x0000000000401810 : call qword ptr [r15 + rbx*8]
0x000000000047d43b : call qword ptr [rax + 0x10ffface]
0x000000000047cd3b : call qword ptr [rax + 0x20fffab1]
0x000000000047d757 : call qword ptr [rax - 0x1f0004be]
0x000000000047fb03 : call qword ptr [rax - 0x2f000360]
0x000000000045a9ee : call qword ptr [rax - 0x413d76b4]
0x000000000041396b : call qword ptr [rax]
0x0000000000400fbe : call qword ptr [rbx + 0x10]
0x000000000047c863 : call qword ptr [rbx + 0x23fffa32]
0x0000000000493927 : call qword ptr [rbx + rbx + 0x1bbcfffe]
0x0000000000407030 : call qword ptr [rbx]
0x000000000047652d : call qword ptr [rcx]
0x0000000000401811 : call qword ptr [rdi + rbx*8]
0x000000000047d923 : call qword ptr [rdi]
0x000000000047ce03 : call qword ptr [rdx + 0x22fffab0]
0x000000000047d2fb : call qword ptr [rdx + 0x22fffad7]
0x000000000047ce23 : call qword ptr [rdx]
0x000000000047cd9f : call qword ptr [rsi + 0x26fffaad]
0x000000000047d297 : call qword ptr [rsi + 0x26fffad4]
0x000000000047df47 : call qword ptr [rsi]
0x00000000004681e7 : call r10
0x000000000040089c : call r11
0x0000000000447ecc : call r12
0x000000000043ce7f : call r14
0x00000000004407eb : call r15
0x0000000000468397 : call rax
0x000000000040089d : call rbx
0x00000000004125d8 : call rcx
0x00000000004407ec : call rdi
0x0000000000406e77 : call rdx
0x0000000000412555 : call rsi
0x0000000000447ecd : call rsp
0x00000000004768a4 : cdq ; add rax, r9 ; jmp rax
0x0000000000491540 : cdq ; in eax, 0xff ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x0000000000457857 : clc ; add al, byte ptr [rcx + 0x29] ; ret
0x0000000000457830 : clc ; add cl, byte ptr [rax + 0x29] ; ret
0x0000000000412cfa : clc ; add cl, byte ptr [rax + 0xf] ; ret 0x8948
0x000000000041280f : clc ; add cl, byte ptr [rax + 0xf] ; ret 0x8d44
0x000000000046a1a3 : clc ; add cl, byte ptr [rax - 0x77] ; ret 0xc148
0x0000000000459beb : clc ; add cl, byte ptr [rcx + 0x29] ; ret
0x0000000000465f2a : clc ; add dl, byte ptr [rax - 0x77] ; ret 0xc389
0x0000000000405c85 : clc ; add dword ptr [rbx - 0x7cb70030], eax ; ret
0x000000000040f941 : clc ; add dword ptr [rdi + rcx + 0x44], eax ; ret 0xf641
0x0000000000472fa8 : clc ; add ebx, dword ptr [rbp + 0x41] ; pop rsp ; ret
0x000000000041d6d7 : clc ; add rax, rcx ; ret
0x000000000041dc04 : clc ; add rax, rcx ; vzeroupper ; ret
0x000000000047b006 : clc ; call qword ptr [rax]
0x000000000047af2a : clc ; call rsi
0x0000000000497122 : clc ; call rsp
0x000000000049a9b8 : clc ; cld ; jmp qword ptr [rbx]
0x00000000004157b8 : clc ; cmovne rax, rcx ; ret
0x000000000041fd49 : clc ; cmp rcx, rax ; jne 0x41fd7b ; xor eax, eax ; ret
0x000000000041fd48 : clc ; cmp rcx, rax ; jne 0x41fd7c ; xor eax, eax ; ret
0x000000000046b3f0 : clc ; dec dword ptr [rax + 0xf] ; ret 0x66c3
0x0000000000415e20 : clc ; dec dword ptr [rax + 0xf] ; ret 0x8348
0x0000000000476d8e : clc ; dec dword ptr [rax - 0x75] ; push rbp ; add byte ptr [rax + 0x63], cl ; ret 0xbc80
0x00000000004019ac : clc ; dec dword ptr [rax - 0x77] ; ret
0x000000000045d019 : clc ; dec dword ptr [rax - 0x77] ; ret 0xf41
0x0000000000473d3d : clc ; dec dword ptr [rax - 0x7d] ; ret
0x00000000004582e5 : clc ; dec dword ptr [rdi] ; test byte ptr [rcx - 0x7c000015], al ; ret
0x0000000000499368 : clc ; idiv edx ; call rbx
0x000000000044958a : clc ; inc dword ptr [rcx - 0x77] ; ret 0x840f
0x000000000043a70a : clc ; jg 0x43a6d9 ; mov eax, 0x80 ; pop rbx ; ret
0x000000000043a766 : clc ; jg 0x43a766 ; int1 ; mov eax, eax ; ret
0x000000000049d128 : clc ; jl 0x49d12b ; call qword ptr [rdx]
0x000000000047aff6 : clc ; jmp qword ptr [rax]
0x00000000004970aa : clc ; jmp qword ptr [rbx]
0x000000000044f413 : clc ; jmp rax
0x0000000000477833 : clc ; leave ; ret
0x00000000004901a2 : clc ; mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x000000000040a6a4 : clc ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000421847 : clc ; mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000004221b7 : clc ; mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000427107 : clc ; mov qword ptr [rdi - 0xd], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000004223b7 : clc ; mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000427077 : clc ; mov qword ptr [rdi - 0xe], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000004225b7 : clc ; mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000426fe7 : clc ; mov qword ptr [rdi - 0xf], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000421863 : clc ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000043a24e : clc ; mov qword ptr [rdi], rcx ; ret
0x000000000043a3cd : clc ; mov qword ptr [rdi], rcx ; vzeroupper ; ret
0x000000000042aa9c : clc ; mov qword ptr [rdi], rsi ; mov qword ptr [r9 - 8], rcx ; ret
0x00000000004394da : clc ; mov qword ptr [rdi], rsi ; ret
0x00000000004779b1 : clc ; mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x000000000040a6bc : clc ; or ebp, edx ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000410465 : clc ; pop rbp ; pop r12 ; ret
0x000000000045e074 : clc ; push qword ptr [rax + rcx + 0x5b] ; ret
0x0000000000461bb3 : clc ; push qword ptr [rdi + rax*2 - 0x77] ; ret 0xe283
0x000000000047af26 : clc ; push rbp ; insb byte ptr [rdi], dx ; clc ; call rsi
0x000000000049db94 : clc ; pushfq ; add byte ptr [rax], al ; cwde ; ret 0xfffd
0x000000000040a6d5 : clc ; ret
0x000000000046df6a : clc ; shl r9, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x0000000000460e0f : clc ; shr rax, 2 ; ret
0x000000000046d12d : clc ; std ; jbe 0x46d13d ; ret
0x0000000000414449 : clc ; sub byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000046fe51 : clc ; sub rax, r8 ; ret
0x0000000000433146 : clc ; sub rax, rdx ; vzeroupper ; ret
0x00000000004390eb : clc ; sub rax, rsi ; ret
0x0000000000448eee : clc ; test rsi, rsi ; je 0x448efc ; call rsi
0x000000000041dd7b : clc ; vzeroupper ; ret
0x000000000043a66f : cld ; add eax, dword ptr [rax] ; pop rbx ; ret
0x000000000047fb02 : cld ; call qword ptr [rax - 0x2f000360]
0x000000000047e682 : cld ; call qword ptr [rax]
0x000000000049bc56 : cld ; call qword ptr [rcx]
0x000000000047e68a : cld ; call rax
0x000000000047ec26 : cld ; call rdx
0x000000000043b41f : cld ; dec dword ptr [rax - 0x77] ; ret
0x000000000048c176 : cld ; dec dword ptr [rcx - 2] ; cld ; call qword ptr [rax]
0x000000000048c172 : cld ; dec dword ptr [rcx - 2] ; cld ; dec dword ptr [rcx - 2] ; cld ; call qword ptr [rax]
0x000000000048c162 : cld ; dec dword ptr [rcx - 2] ; cld ; dec dword ptr [rcx - 2] ; cld ; jmp qword ptr [rax]
0x000000000048c196 : cld ; dec dword ptr [rcx - 2] ; cld ; dec dword ptr [rcx - 2] ; cld ; jmp rax
0x000000000048c166 : cld ; dec dword ptr [rcx - 2] ; cld ; jmp qword ptr [rax]
0x000000000048c19a : cld ; dec dword ptr [rcx - 2] ; cld ; jmp rax
0x000000000043a74c : cld ; inc dword ptr [rbx] ; div ecx ; pop rbx ; mov eax, eax ; ret
0x000000000043a6ba : cld ; inc dword ptr [rbx] ; pop rbx ; ret
0x000000000048c16a : cld ; jmp qword ptr [rax]
0x000000000049a9a2 : cld ; jmp qword ptr [rbx]
0x000000000049af9a : cld ; jmp qword ptr [rcx]
0x000000000049a6e2 : cld ; jmp qword ptr [rdx]
0x000000000047a5d0 : cld ; jmp qword ptr [rsi + 0xf]
0x000000000048c19e : cld ; jmp rax
0x000000000049b2a2 : cld ; jmp rbx
0x000000000049ab5a : cld ; jmp rdx
0x0000000000421fd2 : cld ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004221d5 : cld ; mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004223d5 : cld ; mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004225d5 : cld ; mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000043a256 : cld ; mov dword ptr [rdi], ecx ; ret
0x000000000043a3d8 : cld ; mov dword ptr [rdi], ecx ; vzeroupper ; ret
0x000000000042aaae : cld ; mov dword ptr [rdi], esi ; mov dword ptr [r9 - 4], ecx ; ret
0x00000000004394e8 : cld ; mov dword ptr [rdi], esi ; ret
0x00000000004394e2 : cld ; mov esi, dword ptr [rsi] ; mov dword ptr [rdi + rdx - 4], ecx ; mov dword ptr [rdi], esi ; ret
0x0000000000421c06 : cld ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000427296 : cld ; mov qword ptr [rdi - 0xa], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000421de6 : cld ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000427216 : cld ; mov qword ptr [rdi - 0xb], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000421fc6 : cld ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000427196 : cld ; mov qword ptr [rdi - 0xc], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000421a26 : cld ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000427316 : cld ; mov qword ptr [rdi - 9], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000499898 : cld ; pop rcx ; add byte ptr [rax], al ; test byte ptr [rbx], bl ; sti ; call qword ptr [rdx]
0x000000000047e686 : cld ; push rax ; add ah, bh ; call rax
0x00000000004218b1 : cld ; ret
0x000000000048f656 : cld ; test al, 0x97 ; xchg eax, esp ; ret
0x0000000000439d72 : cld ; vzeroupper ; ret
0x000000000045414b : cli ; add ch, al ; ret
0x0000000000456d95 : cli ; add cl, byte ptr [rax + 0x39] ; ret 0x850f
0x00000000004095f2 : cli ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x2948
0x000000000043a241 : cli ; add dword ptr [rdi + 0x15], esi ; jb 0x43a251 ; mov byte ptr [rdi], cl ; ret
0x000000000043923b : cli ; add dword ptr [rdx + 2], esi ; mov byte ptr [rdi], cl ; ret
0x000000000042aacc : cli ; add dword ptr [rdx + 4], esi ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000043b173 : cli ; add ecx, dword ptr [rdi] ; xchg eax, esi ; ret 0xc085
0x000000000043b1d4 : cli ; add ecx, dword ptr [rdi] ; xchg eax, esi ; ret 0xd284
0x000000000047d43a : cli ; call qword ptr [rax + 0x10ffface]
0x000000000047cd3a : cli ; call qword ptr [rax + 0x20fffab1]
0x000000000047cd5a : cli ; call qword ptr [rax]
0x000000000047c862 : cli ; call qword ptr [rbx + 0x23fffa32]
0x00000000004976da : cli ; call qword ptr [rbx]
0x00000000004980da : cli ; call qword ptr [rcx]
0x000000000047ce02 : cli ; call qword ptr [rdx + 0x22fffab0]
0x000000000047d2fa : cli ; call qword ptr [rdx + 0x22fffad7]
0x000000000047ce22 : cli ; call qword ptr [rdx]
0x000000000047cd9e : cli ; call qword ptr [rsi + 0x26fffaad]
0x000000000047d296 : cli ; call qword ptr [rsi + 0x26fffad4]
0x000000000047cd76 : cli ; call qword ptr [rsi]
0x000000000047d6ee : cli ; call rax
0x000000000049936a : cli ; call rbx
0x000000000047ce12 : cli ; call rdx
0x000000000047cdae : cli ; call rsi
0x000000000047cce6 : cli ; call rsp
0x000000000043e105 : cli ; cmp eax, 0x83491774 ; ret
0x0000000000451706 : cli ; dec dword ptr [rax + 0x29] ; ret
0x000000000045f200 : cli ; dec dword ptr [rax + 1] ; ret
0x000000000045e5c7 : cli ; dec dword ptr [rbx - 0x14f3db8c] ; ret 0x5590
0x000000000047c832 : cli ; dec dword ptr [rsi] ; xor eax, 0x358ffffa ; cli ; jmp qword ptr [rbx]
0x000000000047d23e : cli ; inc dword ptr [rax - 0x29] ; cli ; call rax
0x000000000047cd46 : cli ; inc dword ptr [rax - 0x50] ; cli ; call rax
0x000000000047d67a : cli ; inc dword ptr [rax] ; jrcxz 0x47d67e ; call qword ptr [rax]
0x000000000047d466 : cli ; inc dword ptr [rax] ; leave ; cli ; push qword ptr [rax - 0x38] ; cli ; jmp rax
0x000000000047cce2 : cli ; inc dword ptr [rbp + rbp*4 - 6] ; call rsp
0x000000000047c85e : cli ; inc dword ptr [rbx] ; xor bh, dl ; call qword ptr [rbx + 0x23fffa32]
0x000000000047cef2 : cli ; inc dword ptr [rcx - 6] ; call rsp
0x000000000047d306 : cli ; inc dword ptr [rdx - 0x2a] ; cli ; call rdx
0x000000000047ce0e : cli ; inc dword ptr [rdx - 0x51] ; cli ; call rdx
0x000000000047cdfe : cli ; inc dword ptr [rdx] ; mov cl, 0xfa ; call qword ptr [rdx + 0x22fffab0]
0x000000000047d2a2 : cli ; inc dword ptr [rsi - 0x2d] ; cli ; call rsi
0x000000000047d4b2 : cli ; inc dword ptr [rsi - 0x39] ; cli ; call rsi
0x000000000047cdaa : cli ; inc dword ptr [rsi - 0x54] ; cli ; call rsi
0x000000000047cd9a : cli ; inc dword ptr [rsi] ; scasb al, byte ptr [rdi] ; cli ; call qword ptr [rsi + 0x26fffaad]
0x000000000047d1da : cli ; inc dword ptr [rsp + rdx*8 - 6] ; call rsp
0x000000000042aa87 : cli ; jg 0x42aa9a ; vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x0000000000439206 : cli ; jg 0x439218 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x0000000000439839 : cli ; jg 0x43984c ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x0000000000439ca1 : cli ; jg 0x439cb4 ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x000000000043a3c2 : cli ; jg 0x43a3d2 ; vzeroupper ; ret
0x000000000043a598 : cli ; jg 0x43a5a8 ; vzeroupper ; ret
0x000000000047cd36 : cli ; jmp qword ptr [rax]
0x000000000047c83a : cli ; jmp qword ptr [rbx]
0x0000000000497ae2 : cli ; jmp qword ptr [rcx]
0x000000000049816a : cli ; jmp qword ptr [rdi]
0x000000000047d02e : cli ; jmp qword ptr [rdx + 0x12fffaa1]
0x000000000047ce06 : cli ; jmp qword ptr [rdx]
0x000000000047cda2 : cli ; jmp qword ptr [rsi]
0x000000000047cd6e : cli ; jmp rax
0x000000000049769e : cli ; jmp rbx
0x0000000000405a24 : cli ; jmp rdx
0x000000000047cd92 : cli ; jmp rsi
0x000000000047ccca : cli ; jmp rsp
0x000000000047cff6 : cli ; ljmp ptr [rax - 0x57ad0006] ; cli ; call rdx
0x00000000004223d8 : cli ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000405d06 : cli ; movsxd rdi, dword ptr [r10 + rdi*4] ; add rdi, r10 ; jmp rdi
0x000000000041e088 : cli ; movzx edx, dl ; sub eax, edx ; ret
0x000000000041cb36 : cli ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000491ac1 : cli ; push 0x6e ; ja 0x491a4e ; ret 0x48f
0x000000000047cd42 : cli ; push qword ptr [rax + 0x40fffab0] ; mov al, 0xfa ; call rax
0x000000000047d23a : cli ; push qword ptr [rax + 0x40fffad7] ; xlatb ; cli ; call rax
0x000000000047d46a : cli ; push qword ptr [rax - 0x38] ; cli ; jmp rax
0x000000000047cd72 : cli ; push qword ptr [rax - 0x55] ; cli ; call qword ptr [rsi]
0x000000000047ccde : cli ; push qword ptr [rbp + rbp*4 - 0x52bb0006] ; cli ; call rsp
0x000000000047ce0a : cli ; push qword ptr [rdx + 0x42fffaaf] ; scasd eax, dword ptr [rdi] ; cli ; call rdx
0x000000000047d302 : cli ; push qword ptr [rdx + 0x42fffad6] ; salc ; cli ; call rdx
0x000000000047cda6 : cli ; push qword ptr [rsi + 0x46fffaac] ; lodsb al, byte ptr [rsi] ; cli ; call rsi
0x000000000047d29e : cli ; push qword ptr [rsi + 0x46fffad3] ; sar edx, cl ; call rsi
0x000000000047d1d6 : cli ; push qword ptr [rsp + rdx*8 - 0x2bbb0006] ; cli ; call rsp
0x000000000047d676 : cli ; push rax ; loopne 0x47d67e ; inc dword ptr [rax] ; jrcxz 0x47d682 ; call qword ptr [rax]
0x000000000043a179 : cli ; rep stosb byte ptr [rdi], al ; mov rax, rdx ; ret
0x0000000000490565 : cli ; ret 0xac65
0x000000000043dbab : cli ; setae al ; ret
0x0000000000432f79 : cli ; test rdx, rdx ; je 0x432f99 ; bsf rax, rdx ; ret
0x00000000004600a8 : cli ; test rdx, rdx ; je 0x4600d9 ; bsf rax, rdx ; ret
0x000000000048f1aa : cli ; xchg dword ptr [rsp + rax + 0x6fa9ce9d], esp ; ret
0x0000000000473ce7 : cmc ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ror byte ptr [rax], 0x83 ; ret 0x3901
0x000000000047af28 : cmc ; insb byte ptr [rdi], dx ; clc ; call rsi
0x0000000000491ee9 : cmc ; mov ch, 0xab ; ret
0x000000000042721a : cmc ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000421c5e : cmc ; mov dword ptr [rdi - 4], edx ; ret
0x000000000045d0d7 : cmc ; mov rbp, rax ; jmp 0x45d0a4
0x00000000004385c3 : cmc ; movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x000000000048ed97 : cmc ; pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x00000000004385c7 : cmc ; sub eax, edx ; ret
0x0000000000491525 : cmc ; xlatb ; ret 0x4e27
0x000000000040f759 : cmovae eax, dword ptr [rdi + 0x10] ; sub rax, qword ptr [rdi + 0x18] ; ret
0x000000000040f758 : cmovae rax, qword ptr [rdi + 0x10] ; sub rax, qword ptr [rdi + 0x18] ; ret
0x000000000046a311 : cmove eax, eax ; mov rax, r8 ; pop rbx ; ret
0x000000000043a694 : cmove eax, ecx ; pop rbx ; ret
0x000000000045e861 : cmove eax, ecx ; ret
0x0000000000415e23 : cmove eax, edx ; add rsp, 8 ; ret
0x000000000043a65c : cmove eax, edx ; pop rbx ; ret
0x0000000000415f5f : cmove eax, edx ; ret
0x000000000040c38f : cmove ebp, esp ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000046a310 : cmove r8, rax ; mov rax, r8 ; pop rbx ; ret
0x000000000045e860 : cmove r8, rcx ; ret
0x000000000043a693 : cmove rax, rcx ; pop rbx ; ret
0x0000000000415e22 : cmove rax, rdx ; add rsp, 8 ; ret
0x000000000043a65b : cmove rax, rdx ; pop rbx ; ret
0x0000000000415f5e : cmove rax, rdx ; ret
0x000000000040d4bb : cmovg eax, ecx ; test rdx, rdx ; jne 0x40d4b9 ; ret
0x000000000045db2b : cmovg eax, ecx ; test rdx, rdx ; jne 0x45db29 ; ret
0x00000000004157ba : cmovne eax, ecx ; ret
0x000000000043a6ec : cmovne eax, edx ; pop rbx ; ret
0x0000000000415e5f : cmovne eax, edx ; ret
0x0000000000432b04 : cmovne eax, edx ; vzeroupper ; ret
0x00000000004157b9 : cmovne rax, rcx ; ret
0x000000000043a6eb : cmovne rax, rdx ; pop rbx ; ret
0x0000000000415e5e : cmovne rax, rdx ; ret
0x0000000000432b03 : cmovne rax, rdx ; vzeroupper ; ret
0x00000000004048d8 : cmovs eax, dword ptr [rbx - 0x76b70f1d] ; fucompi st(0) ; ret
0x000000000044259c : cmovs eax, edx ; ret
0x0000000000477ea8 : cmovs ecx, dword ptr [rcx + 0x1bffe] ; add byte ptr [rax], al ; jmp rax
0x000000000045e688 : cmovs edi, dword ptr [rcx] ; int1 ; jne 0x45e689 ; lea eax, dword ptr [rdx + rdi] ; ret
0x000000000043a63e : cmovs esp, dword ptr [rbx + 0xc] ; xchg byte ptr [rax + 1], cl ; int1 ; jmp rcx
0x000000000043a6d0 : cmovs esp, dword ptr [rbx + 4] ; xchg eax, esi ; add rax, rsi ; jmp rax
0x00000000004390d8 : cmp ah, byte ptr [rbx - 0x27] ; add cl, byte ptr [rdi] ; xchg eax, edx ; ror byte ptr [rdi], 0x94 ; ret 0xc085
0x000000000046c407 : cmp al, 0 ; add byte ptr [rcx - 0x77], cl ; ret
0x0000000000441512 : cmp al, 0x24 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd5e9
0x000000000040d687 : cmp al, 0x24 ; add rsp, 0x10 ; pop rbx ; jmp rax
0x0000000000477ffd : cmp al, 0x24 ; mov rdx, qword ptr [rbp] ; call r12
0x000000000040f905 : cmp al, 0x30 ; ret
0x00000000004774cc : cmp al, 0x31 ; or byte ptr [rbp + 4], dh ; mov qword ptr [rax], rdx ; ret
0x000000000047745d : cmp al, 0x32 ; or byte ptr [rbp + 0x1a], dh ; mov rax, qword ptr [rax] ; ret
0x00000000004901a0 : cmp al, 0x46 ; clc ; mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x0000000000405d09 : cmp al, 0xba ; add rdi, r10 ; jmp rdi
0x000000000046c848 : cmp al, 0xf9 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000438a86 : cmp al, byte ptr [rsi - 1] ; jne 0x438aac ; xor eax, eax ; ret
0x000000000041d8f6 : cmp al, dh ; ret
0x000000000041d8f5 : cmp al, r14b ; ret
0x0000000000475246 : cmp bh, 0x10 ; jne 0x47526f ; xor eax, eax ; ret
0x00000000004783e6 : cmp bh, 0x10 ; jne 0x478405 ; xor eax, eax ; ret
0x0000000000479246 : cmp bh, 0x10 ; jne 0x479265 ; xor eax, eax ; ret
0x0000000000479cb6 : cmp bh, 0x10 ; jne 0x479cdf ; xor eax, eax ; ret
0x00000000004783cc : cmp bh, 0x30 ; jne 0x478401 ; mov rax, qword ptr [rsi + 0x10] ; ret
0x000000000047922c : cmp bh, 0x30 ; jne 0x479261 ; mov rax, qword ptr [rsi + 0x10] ; ret
0x000000000043cba6 : cmp bl, byte ptr [rbx + 0x5d] ; ret
0x00000000004089e2 : cmp byte ptr [r8 - 0x75], cl ; push rbx ; adc byte ptr [rax + 1], cl ; ret 0x2b48
0x000000000040a246 : cmp byte ptr [rax + 0x29], cl ; ret
0x000000000044ce17 : cmp byte ptr [rax + 0x39], cl ; ret
0x000000000040af49 : cmp byte ptr [rax + 0x39], cl ; ret 0x2175
0x000000000040ae37 : cmp byte ptr [rax + 0x39], cl ; ret 0x4b74
0x00000000004015cb : cmp byte ptr [rax + 0x39], cl ; ret 0x4f76
0x000000000041d937 : cmp byte ptr [rax + 1], cl ; clc ; ret
0x000000000045d68d : cmp byte ptr [rax + 1], cl ; ret
0x000000000045d270 : cmp byte ptr [rax + 1], cl ; ror byte ptr [rax + 0x39], cl ; ret 0xf48
0x00000000004443c1 : cmp byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x00000000004089e3 : cmp byte ptr [rax - 0x75], cl ; push rbx ; adc byte ptr [rax + 1], cl ; ret 0x2b48
0x000000000045d016 : cmp byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret 0xf41
0x000000000041d926 : cmp byte ptr [rax], ah ; ret
0x00000000004976ad : cmp byte ptr [rax], al ; add al, al ; sub edi, edx ; call qword ptr [rdx]
0x00000000004976d5 : cmp byte ptr [rax], al ; add al, ch ; sub edi, edx ; call qword ptr [rbx]
0x000000000040d963 : cmp byte ptr [rax], al ; je 0x40d975 ; ret
0x00000000004773cf : cmp byte ptr [rax], al ; je 0x4773f8 ; add rsp, 0x18 ; ret
0x00000000004976d4 : cmp byte ptr [rax], bh ; add byte ptr [rax], al ; call 0x1449710f
0x00000000004326a0 : cmp byte ptr [rax], dh ; cmovne rax, rdx ; ret
0x000000000041d916 : cmp byte ptr [rax], dl ; ret
0x000000000041d915 : cmp byte ptr [rax], r10b ; ret
0x000000000041d925 : cmp byte ptr [rax], r12b ; ret
0x000000000043269f : cmp byte ptr [rax], sil ; cmovne rax, rdx ; ret
0x000000000049be69 : cmp byte ptr [rbx + 0x2030d07], al ; cld ; ret
0x000000000049be9d : cmp byte ptr [rbx + 0x2030d07], al ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000049be35 : cmp byte ptr [rbx + 0x3030d07], al ; or al, byte ptr [rcx] ; ret
0x0000000000474ee8 : cmp byte ptr [rbx + 0x41], bl ; pop rsi ; ret
0x0000000000406256 : cmp byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000040d150 : cmp byte ptr [rbx + 0x5d], bl ; ret
0x00000000004981d4 : cmp byte ptr [rbx], al ; add al, ch ; pop rdx ; cli ; call qword ptr [rax]
0x00000000004991d4 : cmp byte ptr [rbx], dl ; add al, cl ; hlt ; cli ; call qword ptr [rdx]
0x00000000004774cb : cmp byte ptr [rcx + rsi], 8 ; jne 0x4774de ; mov qword ptr [rax], rdx ; ret
0x000000000046bb66 : cmp byte ptr [rcx - 0x7d], cl ; ret 0x4908
0x000000000048c5c4 : cmp byte ptr [rdi*8 - 0x2faef01], al ; call qword ptr [rax]
0x000000000040d928 : cmp byte ptr [rdi], cl ; ret 0x389
0x000000000041f21d : cmp byte ptr [rdi], dl ; ret
0x000000000041fd30 : cmp byte ptr [rdi], dl ; ret 0x2373
0x000000000041fd19 : cmp byte ptr [rdi], dl ; ret 0x3a73
0x000000000041fd02 : cmp byte ptr [rdi], dl ; ret 0x5173
0x000000000041e7be : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000047745c : cmp byte ptr [rdx + rsi], 8 ; jne 0x477485 ; mov rax, qword ptr [rax] ; ret
0x000000000040fe92 : cmp cl, byte ptr [rax - 0x75] ; push rax ; or dh, dh ; ret 0x7502
0x0000000000432b01 : cmp dh, byte ptr [rax] ; cmovne rax, rdx ; vzeroupper ; ret
0x000000000043a57a : cmp dh, byte ptr [rdx + 2] ; mov byte ptr [rdi], cl ; vzeroupper ; ret
0x0000000000475245 : cmp dil, 0x10 ; jne 0x475270 ; xor eax, eax ; ret
0x00000000004783e5 : cmp dil, 0x10 ; jne 0x478406 ; xor eax, eax ; ret
0x0000000000479245 : cmp dil, 0x10 ; jne 0x479266 ; xor eax, eax ; ret
0x0000000000479cb5 : cmp dil, 0x10 ; jne 0x479ce0 ; xor eax, eax ; ret
0x000000000043a240 : cmp dl, 1 ; ja 0x43a263 ; jb 0x43a252 ; mov byte ptr [rdi], cl ; ret
0x000000000042aacb : cmp dl, 1 ; jb 0x42aadd ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000043923a : cmp dl, 1 ; jb 0x439248 ; mov byte ptr [rdi], cl ; ret
0x0000000000415825 : cmp dl, al ; jne 0x415818 ; sub rax, 0x10 ; ret
0x0000000000415824 : cmp dl, r8b ; jne 0x415819 ; sub rax, 0x10 ; ret
0x0000000000407001 : cmp dword ptr [rax - 0x39], ecx ; ret
0x0000000000426d58 : cmp dword ptr [rbx - 1], -1 ; dec dword ptr [rax - 0x7f] ; ret 0x80
0x0000000000444b3d : cmp dword ptr [rcx - 0xa], eax ; ret 0xf08
0x000000000040d961 : cmp dword ptr [rdi + 0x38], 0 ; je 0x40d977 ; ret
0x0000000000416b01 : cmp dword ptr [rdx], eax ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x000000000045e058 : cmp dword ptr [rsi + 0x30], 0 ; je 0x45e067 ; ret
0x0000000000493db4 : cmp dword ptr [rsi + rdi*8], ebp ; inc dword ptr [rsp + rbp - 2] ; jmp rcx
0x000000000046b3ef : cmp eax, -1 ; cmove rax, rdx ; ret
0x000000000045e073 : cmp eax, -1 ; je 0x45e086 ; pop rbx ; ret
0x000000000046d12c : cmp eax, -3 ; jbe 0x46d13e ; ret
0x0000000000448189 : cmp eax, 0x20c48348 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040a622 : cmp eax, 0x296980 ; add byte ptr [rdx + rax - 0xd], dh ; ret
0x0000000000403153 : cmp eax, 0x29de0f ; add byte ptr [rax - 0x77], cl ; ret
0x000000000044e2eb : cmp eax, 0x3dbc8 ; call 0x40a5f7
0x0000000000413bc4 : cmp eax, 0x67acf ; call 0x40fe67
0x000000000043e106 : cmp eax, 0x83491774 ; ret
0x000000000045fe24 : cmp eax, 0x89000001 ; ret 0x8948
0x000000000046c340 : cmp eax, 0x89490000 ; ret
0x000000000043b956 : cmp eax, 0xfffff000 ; ja 0x43b968 ; ret
0x000000000043b9a4 : cmp eax, 0xfffff000 ; ja 0x43b9b8 ; ret
0x000000000043bbaf : cmp eax, 0xfffff000 ; ja 0x43bc18 ; ret
0x000000000043bc45 : cmp eax, 0xfffff000 ; ja 0x43bc58 ; ret
0x000000000043bc82 : cmp eax, 0xfffff000 ; ja 0x43bce8 ; ret
0x000000000043bd18 : cmp eax, 0xfffff000 ; ja 0x43bd30 ; ret
0x000000000043bd48 : cmp eax, 0xfffff000 ; ja 0x43bd60 ; ret
0x000000000043bf52 : cmp eax, 0xfffff000 ; ja 0x43bfa0 ; ret
0x000000000043bfc8 : cmp eax, 0xfffff000 ; ja 0x43bfe0 ; ret
0x000000000043c721 : cmp eax, 0xfffff000 ; ja 0x43c738 ; ret
0x000000000044a93e : cmp eax, 0xfffff000 ; ja 0x44a958 ; ret
0x0000000000461ca6 : cmp eax, 0xfffff000 ; ja 0x461cb8 ; ret
0x0000000000461cfa : cmp eax, 0xfffff000 ; ja 0x461d10 ; ret
0x000000000043b8c8 : cmp eax, 0xfffff001 ; jae 0x43b8d7 ; ret
0x000000000043c958 : cmp eax, 0xfffff001 ; jae 0x43c967 ; ret
0x000000000043c988 : cmp eax, 0xfffff001 ; jae 0x43c997 ; ret
0x000000000043c9b8 : cmp eax, 0xfffff001 ; jae 0x43c9c7 ; ret
0x000000000043db1b : cmp eax, 0xfffff001 ; jae 0x43db2a ; ret
0x000000000043db48 : cmp eax, 0xfffff001 ; jae 0x43db57 ; ret
0x0000000000461c28 : cmp eax, 0xfffff001 ; jae 0x461c37 ; ret
0x0000000000472f28 : cmp eax, 0xfffff001 ; jae 0x472f37 ; ret
0x000000000043ab7b : cmp eax, 2 ; je 0x43ab8f ; xor eax, eax ; ret
0x000000000043dc8a : cmp eax, 4 ; je 0x43dc95 ; ret
0x000000000046c4c7 : cmp eax, dword ptr [rax] ; add byte ptr [rcx - 0x77], cl ; ret
0x000000000040bda5 : cmp eax, dword ptr [rdi + 0x10] ; jae 0x40bdb8 ; movzx eax, byte ptr [rax] ; ret
0x000000000043908f : cmp eax, ecx ; jle 0x4390cf ; movsxd rax, ecx ; ret
0x0000000000438aa3 : cmp eax, ecx ; sbb eax, eax ; sbb eax, -1 ; ret
0x000000000040effb : cmp eax, edx ; jae 0x40f027 ; movzx eax, byte ptr [rax] ; ret
0x000000000040fec9 : cmp eax, edx ; jne 0x40fed4 ; ret
0x00000000004726e4 : cmp eax, esi ; je 0x4726f5 ; ret
0x000000000043dc26 : cmp ebx, 0xa ; je 0x43dc31 ; ret
0x000000000043f0ce : cmp ebx, eax ; setne dl ; jmp 0x43f0ba
0x0000000000446db4 : cmp ecx, 0x860f07ff ; ret
0x0000000000460545 : cmp ecx, 0xc00 ; je 0x460559 ; ret
0x000000000045631d : cmp ecx, 9 ; jbe 0x4562fb ; mov qword ptr [rdi], rsi ; ret
0x000000000045c56d : cmp ecx, 9 ; jbe 0x45c54b ; mov qword ptr [rdi], rsi ; ret
0x0000000000471c21 : cmp ecx, dword ptr [rax - 0x3f] ; loop 0x471c32 ; add rdx, rax ; jmp 0x471c3b
0x0000000000440592 : cmp ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000411610 : cmp ecx, dword ptr [rax - 0x7f] ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret
0x000000000046b438 : cmp ecx, dword ptr [rdi + rsi] ; jae 0x46b3e8 ; xor eax, eax ; ret
0x000000000045e85e : cmp ecx, dword ptr [rdx + 0x4c] ; cmove eax, ecx ; ret
0x000000000041fd4b : cmp ecx, eax ; jne 0x41fd79 ; xor eax, eax ; ret
0x000000000046ef22 : cmp ecx, ecx ; ret
0x000000000045e68a : cmp ecx, esi ; jne 0x45e687 ; lea eax, dword ptr [rdx + rdi] ; ret
0x000000000046a1e6 : cmp ecx, esi ; jne 0x46a1c6 ; mov eax, dword ptr [rcx] ; ret
0x0000000000451880 : cmp edi, eax ; ja 0x451867 ; mov eax, r9d ; ret
0x000000000046203e : cmp edi, edx ; ja 0x46206d ; ret
0x0000000000439442 : cmp edi, edx ; jb 0x43944f ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000045187f : cmp edi, r8d ; ja 0x451868 ; mov eax, r9d ; ret
0x000000000043de21 : cmp edx, dword ptr [rdi + 0x10] ; jae 0x43de0e ; ret
0x000000000041432a : cmp edx, eax ; jne 0x4142f5 ; ret
0x000000000043a22b : cmp edx, ecx ; jne 0x43a218 ; ret
0x000000000043a392 : cmp edx, ecx ; jne 0x43a37e ; vzeroupper ; ret
0x000000000043a555 : cmp edx, ecx ; jne 0x43a539 ; vzeroupper ; ret
0x000000000043dbaa : cmp edx, edi ; setae al ; ret
0x0000000000460c46 : cmp edx, esi ; je 0x460c57 ; test edx, edx ; jne 0x460c49 ; ret
0x000000000040f039 : cmp esi, -1 ; setne al ; neg eax ; ret
0x00000000004486d4 : cmp esi, 3 ; je 0x4486e6 ; ret
0x0000000000439825 : cmp esi, dword ptr [rdx + 5] ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000491524 : cmp esi, ebp ; xlatb ; ret 0x4e27
0x000000000040f8ff : cmp esi, ecx ; jb 0x40f8e9 ; mov byte ptr [rax + rsi], dil ; ret
0x000000000040e27a : cmp esi, ecx ; jne 0x40e277 ; lea eax, dword ptr [rdx + rdi] ; ret
0x000000000040d960 : cmp qword ptr [rdi + 0x38], 0 ; je 0x40d978 ; ret
0x000000000045e057 : cmp qword ptr [rsi + 0x30], 0 ; je 0x45e068 ; ret
0x000000000043dc25 : cmp r11d, 0xa ; je 0x43dc32 ; ret
0x0000000000446db3 : cmp r9d, 0x860f07ff ; ret
0x000000000043b955 : cmp rax, -0x1000 ; ja 0x43b969 ; ret
0x000000000043b9a3 : cmp rax, -0x1000 ; ja 0x43b9b9 ; ret
0x000000000043bbae : cmp rax, -0x1000 ; ja 0x43bc19 ; ret
0x000000000043bc44 : cmp rax, -0x1000 ; ja 0x43bc59 ; ret
0x000000000043bc81 : cmp rax, -0x1000 ; ja 0x43bce9 ; ret
0x000000000043bd17 : cmp rax, -0x1000 ; ja 0x43bd31 ; ret
0x000000000043bd47 : cmp rax, -0x1000 ; ja 0x43bd61 ; ret
0x000000000043bf51 : cmp rax, -0x1000 ; ja 0x43bfa1 ; ret
0x000000000043bfc7 : cmp rax, -0x1000 ; ja 0x43bfe1 ; ret
0x000000000043c720 : cmp rax, -0x1000 ; ja 0x43c739 ; ret
0x000000000044a93d : cmp rax, -0x1000 ; ja 0x44a959 ; ret
0x0000000000461ca5 : cmp rax, -0x1000 ; ja 0x461cb9 ; ret
0x0000000000461cf9 : cmp rax, -0x1000 ; ja 0x461d11 ; ret
0x000000000043b8c7 : cmp rax, -0xfff ; jae 0x43b8d8 ; ret
0x000000000043c957 : cmp rax, -0xfff ; jae 0x43c968 ; ret
0x000000000043c987 : cmp rax, -0xfff ; jae 0x43c998 ; ret
0x000000000043c9b7 : cmp rax, -0xfff ; jae 0x43c9c8 ; ret
0x000000000043db1a : cmp rax, -0xfff ; jae 0x43db2b ; ret
0x000000000043db47 : cmp rax, -0xfff ; jae 0x43db58 ; ret
0x0000000000461c27 : cmp rax, -0xfff ; jae 0x461c38 ; ret
0x0000000000472f27 : cmp rax, -0xfff ; jae 0x472f38 ; ret
0x000000000046b3ee : cmp rax, -1 ; cmove rax, rdx ; ret
0x000000000046d12b : cmp rax, -3 ; jbe 0x46d13f ; ret
0x000000000040bda4 : cmp rax, qword ptr [rdi + 0x10] ; jae 0x40bdb9 ; movzx eax, byte ptr [rax] ; ret
0x000000000040effa : cmp rax, rdx ; jae 0x40f028 ; movzx eax, byte ptr [rax] ; ret
0x000000000040fec8 : cmp rax, rdx ; jne 0x40fed5 ; ret
0x00000000004726e3 : cmp rax, rsi ; je 0x4726f6 ; ret
0x000000000046b437 : cmp rcx, qword ptr [rdi + rsi] ; jae 0x46b3e9 ; xor eax, eax ; ret
0x000000000045e85d : cmp rcx, qword ptr [rdx + 0x4c] ; cmove eax, ecx ; ret
0x000000000041fd4a : cmp rcx, rax ; jne 0x41fd7a ; xor eax, eax ; ret
0x000000000045e689 : cmp rcx, rsi ; jne 0x45e688 ; lea eax, dword ptr [rdx + rdi] ; ret
0x000000000046a1e5 : cmp rcx, rsi ; jne 0x46a1c7 ; mov eax, dword ptr [rcx] ; ret
0x000000000046203d : cmp rdi, rdx ; ja 0x46206e ; ret
0x0000000000439441 : cmp rdi, rdx ; jb 0x439450 ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000043de20 : cmp rdx, qword ptr [rdi + 0x10] ; jae 0x43de0f ; ret
0x0000000000414329 : cmp rdx, r8 ; jne 0x4142f6 ; ret
0x000000000043a22a : cmp rdx, rcx ; jne 0x43a219 ; ret
0x000000000043a229 : cmp rdx, rcx ; jne 0x43a21a ; ret
0x000000000043a391 : cmp rdx, rcx ; jne 0x43a37f ; vzeroupper ; ret
0x000000000043a554 : cmp rdx, rcx ; jne 0x43a53a ; vzeroupper ; ret
0x000000000043dba9 : cmp rdx, rdi ; setae al ; ret
0x000000000040e279 : cmp rsi, rcx ; jne 0x40e278 ; lea eax, dword ptr [rdx + rdi] ; ret
0x0000000000448d35 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx], 0x83 ; ret 0x4801
0x0000000000466133 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, 0x83480000 ; ret
0x000000000041f7c9 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, 0xc0310000 ; ret
0x0000000000467c50 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add rax, rsi ; jmp rax
0x000000000047cf8d : cmpsb byte ptr [rsi], byte ptr [rdi] ; cli ; call rsi
0x000000000047cf4d : cmpsb byte ptr [rsi], byte ptr [rdi] ; cli ; jmp rax
0x00000000004304b6 : cmpsb byte ptr [rsi], byte ptr [rdi] ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000047cf85 : cmpsd dword ptr [rsi], dword ptr [rdi] ; cli ; call rsi
0x000000000047cf45 : cmpsd dword ptr [rsi], dword ptr [rdi] ; cli ; jmp rax
0x00000000004147b5 : cmpsd dword ptr [rsi], dword ptr [rdi] ; fdivp st(7) ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x0000000000451de5 : cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 1
0x00000000004752c0 : cwde ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x830f
0x0000000000475355 : cwde ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x9272
0x0000000000442e92 : cwde ; add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret
0x0000000000498134 : cwde ; add byte ptr [rax], al ; or byte ptr [rdx - 6], bl ; jmp qword ptr [rcx]
0x000000000047a3f2 : cwde ; and al, byte ptr [rax] ; jne 0x47a3de ; pop rbx ; ret
0x0000000000471b2a : cwde ; call 0x43dd63
0x0000000000471b29 : cwde ; call 0x43dd64
0x0000000000454e03 : cwde ; jno 0x454e10 ; add byte ptr [rdi + rcx + 0x45], cl ; ret 0xf4c
0x000000000044f06e : cwde ; movzx eax, byte ptr [rdi + rax] ; mov rax, qword ptr [rsi + rax*8] ; jmp rax
0x000000000047c688 : cwde ; ret
0x000000000049db98 : cwde ; ret 0xfffd
0x00000000004347a1 : dec byte ptr [r8 + 0x29] ; ret 0x280f
0x00000000004347a2 : dec byte ptr [rax + 0x29] ; ret 0x280f
0x0000000000439d6d : dec byte ptr [rax + 0x7f] ; jl 0x439d92 ; cld ; vzeroupper ; ret
0x000000000043cbbe : dec byte ptr [rax + 9] ; ret
0x000000000044aa32 : dec byte ptr [rax - 0x73] ; sub al, 7 ; mov rdi, rbp ; call r12
0x000000000044c419 : dec byte ptr [rax - 0x75] ; mov ebp, 0xfffff758 ; call rax
0x000000000046c83f : dec byte ptr [rax - 0x77] ; fisttp word ptr [rax - 0x77] ; ret 0x5de8
0x000000000045f0b0 : dec byte ptr [rax - 0x77] ; ret
0x000000000046c7dd : dec byte ptr [rax - 0x7d] ; ret
0x0000000000471557 : dec byte ptr [rax - 0x7d] ; ret 0x4808
0x000000000046d129 : dec dword ptr [r8 - 0x7d] ; clc ; std ; jbe 0x46d141 ; ret
0x000000000040929d : dec dword ptr [rax + 0x29] ; ret
0x00000000004348e2 : dec dword ptr [rax + 0x29] ; ret 0x280f
0x000000000046dd59 : dec dword ptr [rax + 0x29] ; ret 0x894c
0x000000000040c248 : dec dword ptr [rax + 0x39] ; ret
0x000000000040b26d : dec dword ptr [rax + 0x39] ; ret 0x860f
0x000000000046e94a : dec dword ptr [rax + 0x39] ; ret 0xe075
0x000000000046f3ce : dec dword ptr [rax + 0x48e57506] ; mov eax, esi ; ret
0x000000000045fdb9 : dec dword ptr [rax + 0xf] ; mov ebp, 0xf80148c6 ; ret
0x000000000046b3f1 : dec dword ptr [rax + 0xf] ; ret 0x66c3
0x0000000000415e21 : dec dword ptr [rax + 0xf] ; ret 0x8348
0x0000000000460569 : dec dword ptr [rax + 0xf] ; ret 0x90c3
0x000000000044a9bb : dec dword ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x148
0x000000000045f201 : dec dword ptr [rax + 1] ; ret
0x000000000048c5cf : dec dword ptr [rax + 4] ; std ; call qword ptr [rax]
0x00000000004029a7 : dec dword ptr [rax - 0x39] ; ret
0x000000000043b84f : dec dword ptr [rax - 0x39] ; ret 0
0x000000000044c480 : dec dword ptr [rax - 0x39] ; ret 0x2b40
0x000000000043b7f4 : dec dword ptr [rax - 0x39] ; ret 0x8000
0x000000000047a72a : dec dword ptr [rax - 0x39] ; ret 0xe160
0x000000000047a7cb : dec dword ptr [rax - 0x39] ; ret 0xf320
0x000000000047a750 : dec dword ptr [rax - 0x39] ; ret 0xf3a0
0x000000000047a779 : dec dword ptr [rax - 0x39] ; ret 0xf560
0x000000000047a7a2 : dec dword ptr [rax - 0x39] ; ret 0xf5e0
0x000000000047a7f4 : dec dword ptr [rax - 0x39] ; ret 0xfb20
0x000000000047a81d : dec dword ptr [rax - 0x39] ; ret 0xfb80
0x000000000047a846 : dec dword ptr [rax - 0x39] ; ret 0xfc00
0x000000000047a86f : dec dword ptr [rax - 0x39] ; ret 0xfcc0
0x000000000047a898 : dec dword ptr [rax - 0x39] ; ret 0xfd40
0x000000000047a8c1 : dec dword ptr [rax - 0x39] ; ret 0xfda0
0x000000000047a701 : dec dword ptr [rax - 0x39] ; ret 0xfe60
0x000000000043b767 : dec dword ptr [rax - 0x39] ; ret 0xff80
0x000000000043bae5 : dec dword ptr [rax - 0x39] ; ret 0xffc0
0x0000000000452383 : dec dword ptr [rax - 0x39] ; ret 0xffe0
0x000000000043b6bc : dec dword ptr [rax - 0x39] ; ret 0xffff
0x0000000000476562 : dec dword ptr [rax - 0x75] ; add byte ptr [rcx + 1], cl ; ret 0xef89
0x0000000000456cdb : dec dword ptr [rax - 0x75] ; mov ebp, 0xfffff730 ; call rax
0x0000000000476d8f : dec dword ptr [rax - 0x75] ; push rbp ; add byte ptr [rax + 0x63], cl ; ret 0xbc80
0x0000000000416453 : dec dword ptr [rax - 0x75] ; push rsp ; and al, 0x18 ; jmp 0x416425
0x000000000046d59c : dec dword ptr [rax - 0x77] ; adc byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x00000000004144a4 : dec dword ptr [rax - 0x77] ; add eax, 0x28d2d4 ; ret
0x0000000000474917 : dec dword ptr [rax - 0x77] ; add ebx, dword ptr [rax + 0x5a] ; pop rbx ; ret
0x00000000004799b8 : dec dword ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000004488d9 : dec dword ptr [rax - 0x77] ; fucompi st(0) ; pop rsi ; ret 0xfffc
0x00000000004019ad : dec dword ptr [rax - 0x77] ; ret
0x000000000046202e : dec dword ptr [rax - 0x77] ; ret 0x1477
0x00000000004135b1 : dec dword ptr [rax - 0x77] ; ret 0x3d83
0x000000000041374c : dec dword ptr [rax - 0x77] ; ret 0x8548
0x0000000000414aab : dec dword ptr [rax - 0x77] ; ret 0x854d
0x000000000044a7e2 : dec dword ptr [rax - 0x77] ; ret 0x870f
0x000000000043af9b : dec dword ptr [rax - 0x77] ; ret 0x8948
0x000000000045b1f0 : dec dword ptr [rax - 0x77] ; ret 0x8b44
0x000000000043b5e6 : dec dword ptr [rax - 0x77] ; ret 0x8b48
0x000000000046499c : dec dword ptr [rax - 0x77] ; ret 0x8d4c
0x000000000043c915 : dec dword ptr [rax - 0x77] ; ret 0xa076
0x000000000043b741 : dec dword ptr [rax - 0x77] ; ret 0xa0e9
0x000000000043b72d : dec dword ptr [rax - 0x77] ; ret 0xb4e9
0x0000000000416768 : dec dword ptr [rax - 0x77] ; ret 0xb60f
0x00000000004594de : dec dword ptr [rax - 0x77] ; ret 0xb848
0x0000000000462569 : dec dword ptr [rax - 0x77] ; ret 0xe2eb
0x000000000045d01a : dec dword ptr [rax - 0x77] ; ret 0xf41
0x000000000040504f : dec dword ptr [rax - 0x77] ; ret 0xf748
0x0000000000468837 : dec dword ptr [rax - 0x77] ; ret 0xf8e8
0x000000000045922d : dec dword ptr [rax - 0x77] ; test dword ptr [rax - 0x16000005], esp ; ret 0xfffd
0x00000000004103d9 : dec dword ptr [rax - 0x7b] ; ret 0x850f
0x0000000000469d3f : dec dword ptr [rax - 0x7d] ; call 0xffffffffc2cfe94f
0x00000000004574e0 : dec dword ptr [rax - 0x7d] ; clc ; dec dword ptr [rax - 0x77] ; ret
0x000000000046d12a : dec dword ptr [rax - 0x7d] ; clc ; std ; jbe 0x46d140 ; ret
0x00000000004051d2 : dec dword ptr [rax - 0x7d] ; ret
0x0000000000444599 : dec dword ptr [rax - 0x7d] ; ret 0x4801
0x000000000040550b : dec dword ptr [rax - 0x7d] ; ret 0x4901
0x0000000000478357 : dec dword ptr [rax - 0x7d] ; ret 0xe902
0x0000000000426d5c : dec dword ptr [rax - 0x7f] ; ret 0x80
0x0000000000478d54 : dec dword ptr [rax - 9] ; ret
0x000000000044ffbe : dec dword ptr [rbp + 0x29] ; ret 0xf4c
0x000000000045ac4c : dec dword ptr [rbp + 0x63] ; ret
0x000000000044ae36 : dec dword ptr [rbp - 0x7b] ; dec dword ptr [rax - 0x77] ; ret
0x0000000000400d84 : dec dword ptr [rbx + 0x2a2f9115] ; add bh, dh ; ret 0
0x000000000048d5b3 : dec dword ptr [rbx + rdi*4 - 0x4d770003] ; std ; jmp qword ptr [rax]
0x000000000045e5c8 : dec dword ptr [rbx - 0x14f3db8c] ; ret 0x5590
0x000000000044fe64 : dec dword ptr [rcx + 0x39] ; ret
0x000000000045034a : dec dword ptr [rcx + 0x39] ; ret 0x850f
0x0000000000467eb1 : dec dword ptr [rcx + 0x39] ; ret 0x860f
0x000000000045aa14 : dec dword ptr [rcx + 0x39] ; ror byte ptr [rdi], 0x85 ; ret 0xffe8
0x0000000000458cca : dec dword ptr [rcx + 0x63] ; ret
0x0000000000468125 : dec dword ptr [rcx + rax - 0x28] ; call rax
0x0000000000469331 : dec dword ptr [rcx + rcx*4 + 0x65] ; mov byte ptr [rax - 0x77], cl ; ret
0x0000000000453374 : dec dword ptr [rcx + rcx*4 - 0x12] ; mov rdi, rbx ; call rax
0x000000000044ab45 : dec dword ptr [rcx + rcx*4 - 0x16] ; call r12
0x0000000000440dd9 : dec dword ptr [rcx + rcx*4 - 9] ; mov rsi, qword ptr [rbp - 0x70] ; call rsi
0x000000000044c276 : dec dword ptr [rcx - 0x2f42763f] ; idiv bh ; call rax
0x0000000000467c18 : dec dword ptr [rcx - 0x77] ; ret
0x00000000004681f0 : dec dword ptr [rcx - 0x77] ; ret 0x43e9
0x0000000000468bf0 : dec dword ptr [rcx - 0x77] ; ret 0xbbe9
0x0000000000411e6a : dec dword ptr [rcx - 0x7b] ; ret
0x000000000048c177 : dec dword ptr [rcx - 2] ; cld ; call qword ptr [rax]
0x000000000048c173 : dec dword ptr [rcx - 2] ; cld ; dec dword ptr [rcx - 2] ; cld ; call qword ptr [rax]
0x000000000048c163 : dec dword ptr [rcx - 2] ; cld ; dec dword ptr [rcx - 2] ; cld ; jmp qword ptr [rax]
0x000000000048c197 : dec dword ptr [rcx - 2] ; cld ; dec dword ptr [rcx - 2] ; cld ; jmp rax
0x000000000048c167 : dec dword ptr [rcx - 2] ; cld ; jmp qword ptr [rax]
0x000000000048c19b : dec dword ptr [rcx - 2] ; cld ; jmp rax
0x000000000040faf6 : dec dword ptr [rcx - 9] ; ret
0x000000000044259b : dec dword ptr [rdi] ; ret 0x41c3
0x00000000004582e6 : dec dword ptr [rdi] ; test byte ptr [rcx - 0x7c000015], al ; ret
0x000000000044e028 : dec dword ptr [rdi] ; test dword ptr [rbp - 0x1600001b], ebp ; ret 0xffe6
0x0000000000438930 : dec dword ptr [rdi] ; test dword ptr [rsi + 1], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004647c1 : dec dword ptr [rdi] ; test eax, ebx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x00000000004692ca : dec dword ptr [rdi] ; xchg bh, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000414c4c : dec dword ptr [rdi] ; xchg eax, ebp ; ret 0xd020
0x000000000040f03b : dec dword ptr [rdi] ; xchg eax, ebp ; sal bh, 0xd8 ; ret
0x000000000046cae9 : dec dword ptr [rdi] ; xchg eax, esi ; rol byte ptr [rbp - 0x75], 0x5f ; adc al, 9 ; ret 0x8b48
0x000000000047c833 : dec dword ptr [rsi] ; xor eax, 0x358ffffa ; cli ; jmp qword ptr [rbx]
0x000000000048c54f : dec eax ; add al, 0xfd ; call qword ptr [rax]
0x00000000004939cf : dec esp ; sbb bh, dh ; call rsp
0x00000000004348e1 : dec qword ptr [r8 + 0x29] ; ret 0x280f
0x0000000000444598 : dec qword ptr [rax - 0x7d] ; ret 0x4801
0x000000000045ffa2 : div byte ptr [rbp + 4] ; xor rax, rax ; ret
0x00000000004486d1 : div byte ptr [rsp + rcx - 0x7d] ; inc byte ptr [rbx] ; je 0x4486e9 ; ret
0x0000000000451896 : div eax ; add r9d, eax ; mov eax, r9d ; ret
0x000000000045d0d6 : div ebp ; mov rbp, rax ; jmp 0x45d0a5
0x000000000043a768 : div ecx ; mov eax, eax ; ret
0x0000000000468e39 : div ecx ; mov rsi, rax ; call 0x4150e7
0x000000000043a74f : div ecx ; pop rbx ; mov eax, eax ; ret
0x000000000045d0d5 : div r13 ; mov rbp, rax ; jmp 0x45d0a6
0x0000000000451895 : div r8d ; add r9d, eax ; mov eax, r9d ; ret
0x0000000000468e38 : div rcx ; mov rsi, rax ; call 0x4150e8
0x000000000041de27 : enter -0x23b, -0x29 ; ret 0xc085
0x000000000046a1a0 : enter -0x3eb8, -8 ; add cl, byte ptr [rax - 0x77] ; ret 0xc148
0x0000000000459be8 : enter -0x3eb8, -8 ; add cl, byte ptr [rcx + 0x29] ; ret
0x0000000000438aa4 : enter -0x3fe7, -0x7d ; fdivr st(7) ; ret
0x000000000043479e : enter -0x72b8, 0x49 ; dec byte ptr [rax + 0x29] ; ret 0x280f
0x00000000004348de : enter -0x72b8, 0x49 ; dec dword ptr [rax + 0x29] ; ret 0x280f
0x000000000041dc07 : enter -0x73b, 0x77 ; ret
0x000000000046248e : enter -0x7bf1, -0x35 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000041e5d4 : enter -2, -1 ; ret
0x0000000000432d29 : enter 0x148, -8 ; vzeroupper ; ret
0x000000000046f211 : enter 0x289, -0x48 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000043308e : enter 0x2948, -0x30 ; vzeroupper ; ret
0x000000000041818d : enter 0x31c3, -0x40 ; ret
0x0000000000439090 : enter 0x357e, 0x48 ; movsxd rax, ecx ; ret
0x000000000040fec7 : enter 0x3948, -0x30 ; jne 0x40fed6 ; ret
0x000000000044e2ec : enter 0x3db, 0 ; call 0x40a5f6
0x0000000000456448 : enter 0x415d, 0x5c ; pop r13 ; ret
0x0000000000498164 : enter 0x42, 0 ; pop rdx ; cli ; jmp qword ptr [rdi]
0x0000000000499364 : enter 0x54, 0 ; clc ; idiv edx ; call rbx
0x000000000045638d : enter 0x5d5b, 0x41 ; pop rsp ; pop r13 ; ret
0x0000000000491cdc : enter 0x8ac, 0x47 ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x000000000045528e : enter 0xf4c, 0x4e ; ret 0x3145
0x000000000041f876 : enter 0xf66, -0x11 ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004326f1 : enter 0xf66, -0x15 ; ret
0x0000000000477473 : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rbx + rbx*8 - 0xd], dh ; ret
0x0000000000407f58 : fadd dword ptr [rax] ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000407a26 : fadd dword ptr [rax] ; add byte ptr [rax], al ; ret
0x000000000045ac6a : fadd dword ptr [rcx - 0x77] ; ret
0x000000000048c564 : fadd dword ptr [rdi*8 - 0x2faef01] ; call qword ptr [rax]
0x000000000048c5c0 : fadd dword ptr [rdi*8 - 0x2fbc701] ; call qword ptr [rax]
0x0000000000451883 : fadd qword ptr [rcx + rcx*4 - 0x38] ; ret
0x000000000041f3c1 : fbld dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000047a284 : fbstp dword ptr [rbp - 0x17] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000491318 : fcmovb st(0), st(3) ; ret
0x00000000004331ab : fcmovnb st(0), st(5) ; std ; xlatb ; ret
0x00000000004580da : fcmovnb st(0), st(6) ; test eax, esi ; idiv bh ; jmp qword ptr [rax]
0x000000000044d34e : fcmovnb st(0), st(6) ; test esp, eax ; idiv bh ; jmp qword ptr [rax]
0x0000000000477479 : fcomi st(3) ; ret
0x00000000004941a5 : fcomi st(6) ; call rsp
0x000000000040c1f3 : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; ret
0x00000000004085d6 : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000040fe35 : fcomp dword ptr [rbx + 0x5d] ; ret
0x0000000000492099 : fcomp dword ptr [rdx + 0x21] ; ret
0x0000000000490300 : fcomp qword ptr [rdi - 0x4a] ; ret 0x474c
0x000000000047de14 : fcomp st(1) ; sti ; push qword ptr [rdx + rbx*8] ; sti ; call qword ptr [rsi]
0x00000000004940d9 : fdecstp ; call rcx
0x0000000000472e47 : fdiv dword ptr [rbp + 0xa] ; add rsp, 0x30 ; pop rbx ; ret
0x000000000047d671 : fdiv st(2), st(0) ; jmp rax
0x00000000004750c9 : fdiv st(3) ; ret
0x00000000004147b6 : fdivp st(7) ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x000000000047273b : fdivr dword ptr [rax + 0x489066ff] ; add esp, 8 ; ret
0x000000000048f655 : fdivr st(4) ; test al, 0x97 ; xchg eax, esp ; ret
0x0000000000438aa8 : fdivr st(7) ; ret
0x000000000046f78d : fiadd dword ptr [rax] ; test dl, dl ; jne 0x46f79f ; ret
0x00000000004074c8 : fiadd dword ptr [rbp + 0x450f48c9] ; ret 0x8348
0x0000000000491ee6 : ficomp word ptr [rdx - 0x19] ; cmc ; mov ch, 0xab ; ret
0x0000000000472ab5 : fidivr dword ptr [rax + 1] ; ret
0x000000000044e2ed : fild dword ptr [rbx] ; add al, ch ; sti ; ret 0xfffb
0x000000000040f7d5 : fild dword ptr [rcx + rbp] ; ret
0x0000000000416bf1 : fild word ptr [r9] ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x0000000000416bf2 : fild word ptr [rcx] ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x000000000046c837 : fimul dword ptr [rax + 0x39] ; ret 0x7472
0x000000000041c956 : fimul dword ptr [rax + rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000045a8eb : fimul dword ptr [rbp + 0x63] ; ret
0x000000000044aa90 : fimul word ptr [rax - 0x77] ; out dx, eax ; call r12
0x00000000004135ed : fimul word ptr [rax - 0x77] ; xlatb ; pop rbx ; jmp 0x40f887
0x000000000046f05e : fimul word ptr [rbp + rcx*4 + 0xa] ; jmp 0x46f0b8
0x0000000000472bbe : fimul word ptr [rbp + rcx*4 + 0xa] ; jmp 0x472c18
0x000000000040b19b : fistp word ptr [rbx + 0x5d] ; jmp rax
0x000000000045df20 : fistp word ptr [rbx + 0x5d] ; pop r12 ; jmp rax
0x000000000040b20b : fistp word ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; jmp rax
0x00000000004488e7 : fisttp dword ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000046e4a1 : fisttp dword ptr [rax - 0x77] ; ret
0x00000000004660f1 : fisttp dword ptr [rbp - 0x73] ; ret
0x00000000004768a0 : fisttp dword ptr [rbx + 0x63] ; add al, 0x99 ; add rax, r9 ; jmp rax
0x000000000046e4bb : fisttp dword ptr [rcx - 0x77] ; ret 0x8b4a
0x000000000046a30f : fisttp dword ptr [rdi + rcx + 0x44] ; ror byte ptr [rcx + rcx*4 - 0x40], 0x5b ; ret
0x0000000000469144 : fisttp dword ptr [rdi] ; xchg eax, ebp ; ret
0x000000000040552e : fisttp qword ptr [rax - 0x7d] ; ret 0x4401
0x0000000000447db2 : fisttp qword ptr [rdi] ; ret 0xc389
0x000000000045652e : fisttp word ptr [rax - 0x75] ; jl 0x45655f ; adc byte ptr [rax - 0x7d], cl ; ret
0x000000000046c842 : fisttp word ptr [rax - 0x77] ; ret 0x5de8
0x0000000000401813 : fisttp word ptr [rax - 0x7d] ; ret
0x000000000046e53f : fisttp word ptr [rax] ; add rdx, r8 ; mov rax, rdx ; pop rbx ; ret
0x00000000004317ed : fisttp word ptr [rip - 0x7cb80000] ; ret 0x4910
0x000000000041f791 : fisub dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000041f491 : fisub word ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004798c2 : fisubr word ptr [rcx + 0x10022] ; add byte ptr [rax], al ; ret
0x000000000040133c : fisubr word ptr [rcx] ; sub al, byte ptr [rax] ; or byte ptr [rdi], cl ; ret 0x589
0x0000000000452ff2 : fld dword ptr [rbp - 0x77] ; ret 0x8b4c
0x000000000040f902 : fld qword ptr [rax - 0x78] ; cmp al, 0x30 ; ret
0x000000000046e70b : fld qword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x149
0x0000000000490341 : fld qword ptr [rsi + 0x32] ; mov bh, 0xb4 ; mov edi, dword ptr [rdx] ; ret
0x000000000045fe52 : fld st(5) ; std ; xlatb ; rol ch, cl ; std ; xlatb ; ret
0x000000000041d839 : fldenv dword ptr [rsi + 0xf] ; je 0x41d896 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000041db17 : fldenv dword ptr [rsi + 0xf] ; je 0x41db74 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000041f811 : fldenv dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000041d731 : fldenv dword ptr [rsi + 0xf] ; xlatb ; ret
0x000000000045603c : fldpi ; stosd dword ptr [rdi], eax ; mov eax, 1 ; ret
0x000000000046f104 : fmul dword ptr [rax + 0x11] ; rcr byte ptr [rbp + 0x5b], 1 ; ret
0x000000000049c774 : fmul dword ptr [rax + 0x32180000] ; std ; jmp qword ptr [rdx]
0x000000000040a05f : fmul dword ptr [rax - 0x77] ; ret
0x0000000000443f4e : fmul dword ptr [rax - 0x7d] ; ret 0x4801
0x0000000000459bf8 : fmul dword ptr [rbp + 0x63] ; ret
0x0000000000456b76 : fmul dword ptr [rdi] ; ret
0x0000000000416f49 : fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000042b46f : fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x000000000047d950 : fmul st(4), st(0) ; sti ; call qword ptr [rcx]
0x000000000047d958 : fmul st(4), st(0) ; sti ; call rax
0x000000000047d960 : fmul st(4), st(0) ; sti ; call rdi
0x0000000000416aaf : fnsave dword ptr [rdi] ; add al, byte ptr [rax] ; cmovne rax, rdx ; ret
0x000000000047221b : fnstsw dword ptr [rax + 0x5b9066ff] ; ret
0x00000000004062a9 : fpatan ; ret
0x000000000041f591 : frstor dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000047df1d : fsincos ; call rsp
0x000000000047dec5 : fsincos ; jmp rax
0x000000000047de9d : fsincos ; jmp rdx
0x000000000047df19 : fsincos ; push qword ptr [rcx + rbx*8 - 5] ; call rsp
0x000000000047de15 : fsincos ; push qword ptr [rdx + rbx*8] ; sti ; call qword ptr [rsi]
0x0000000000490027 : fstp dword ptr [rbx + 0x4a315a58] ; ret 0x1b49
0x00000000004903a0 : fstp st(0) ; ret 0xde5d
0x000000000049ce48 : fsub dword ptr [rax - 3] ; jmp qword ptr [rcx]
0x00000000004608ac : fsub dword ptr [rbx] ; add byte ptr [rax + 0x39], cl ; ret
0x000000000043b8d8 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x000000000043b968 : fsub dword ptr [rcx + rcx*4 + 2] ; mov eax, 0xffffffff ; ret
0x000000000041f891 : fsub dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000433614 : fsub dword ptr [rsi + 0xf] ; xlatb ; ret
0x0000000000438ebb : fsub qword ptr [rsi + 0xf] ; jmp 0x438e87
0x000000000041f691 : fsub qword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000043280c : fsub qword ptr [rsi + 0xf] ; xlatb ; ret
0x0000000000492078 : fucom st(5) ; loop 0x4920d1 ; add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x00000000004488dc : fucompi st(0) ; pop rsi ; ret 0xfffc
0x00000000004048df : fucompi st(0) ; ret
0x0000000000475771 : fucompi st(1) ; ret
0x000000000043d5fb : hlt ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004991d9 : hlt ; cli ; call qword ptr [rdx]
0x000000000049925d : hlt ; cli ; jmp rax
0x000000000049925c : hlt ; hlt ; cli ; jmp rax
0x0000000000490428 : hlt ; jmp 0x4903fd
0x000000000042719a : hlt ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000421e4e : hlt ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004385b3 : hlt ; movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x00000000004009ca : hlt ; nop dword ptr [rax + rax] ; ret
0x0000000000490563 : hlt ; stosb byte ptr [rdi], al ; cli ; ret 0xac65
0x00000000004385b7 : hlt ; sub eax, edx ; ret
0x0000000000476d8d : idiv al ; dec dword ptr [rax - 0x75] ; push rbp ; add byte ptr [rax + 0x63], cl ; ret 0xbc80
0x000000000044c27c : idiv bh ; call rax
0x000000000044d015 : idiv bh ; jmp qword ptr [rax]
0x0000000000442596 : idiv byte ptr [rdx - 1] ; cmovs eax, edx ; ret
0x000000000044c5a1 : idiv edi ; call qword ptr [rax]
0x000000000044c47e : idiv edi ; dec dword ptr [rax - 0x39] ; ret 0x2b40
0x0000000000458218 : idiv edi ; dec dword ptr [rax - 0x77] ; ret
0x000000000045757a : idiv edi ; inc dword ptr [rcx - 1] ; push rbp ; cmp byte ptr [rax + 0x39], cl ; ret
0x0000000000496bce : idiv edi ; ret 2
0x0000000000499369 : idiv edx ; call rbx
0x0000000000458217 : idiv rdi ; dec dword ptr [rax - 0x77] ; ret
0x000000000040274d : imul eax ; insd dword ptr [rdi], dx ; sbb eax, 0x89480001 ; ret 0x7be9
0x000000000049a9b5 : imul eax, dword ptr [rax], 0 ; clc ; cld ; jmp qword ptr [rbx]
0x000000000049a99d : imul eax, dword ptr [rax], 0 ; loopne 0x49a9ef ; cld ; jmp qword ptr [rbx]
0x0000000000437111 : imul eax, dword ptr [rcx], 0 ; add dh, dh ; ret 0x7502
0x000000000040a624 : imul ebp, dword ptr [rcx], 0x2740000 ; ret
0x000000000043b2f3 : imul ebp, dword ptr [rsi], 0x39480026 ; ret
0x000000000043658c : imul esp, dword ptr [rsi + 0xf], 0x74 ; ret 0xff3
0x0000000000475c63 : in al, 0x22 ; add byte ptr [rax], cl ; ret
0x000000000049769c : in al, 0x2a ; cli ; jmp rbx
0x0000000000413919 : in al, 0x64 ; mov dword ptr [rax], 0xc ; jmp 0x4138ef
0x000000000043329c : in al, 0x74 ; or dword ptr [rax - 1], ecx ; ret 0xc148
0x000000000043e103 : in al, 0x80 ; cli ; cmp eax, 0x83491774 ; ret
0x0000000000496bcc : in al, 0xe8 ; idiv edi ; ret 2
0x000000000044cba0 : in al, 0xf ; lahf ; ret
0x000000000042717a : in al, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000043a22e : in al, 0xf3 ; ret
0x0000000000411613 : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret
0x000000000044d053 : in al, dx ; add dword ptr [rax - 0x93b43], eax ; jmp qword ptr [rax]
0x000000000044ce81 : in al, dx ; add dword ptr [rbp - 0x7b], eax ; in al, 0xf ; lahf ; ret
0x00000000004975d4 : in al, dx ; and edx, edi ; call rsp
0x000000000047df18 : in al, dx ; fsincos ; push qword ptr [rcx + rbx*8 - 5] ; call rsp
0x000000000040c391 : in al, dx ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000421e4a : in al, dx ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000042757a : in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000415ef7 : in al, dx ; or al, ch ; ret 0xfea5
0x0000000000410332 : in al, dx ; or byte ptr [rax - 0x75], cl ; or byte ptr [r8 - 0x77], r9b ; ret 0x8348
0x0000000000413967 : in al, dx ; or byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000041cd44 : in al, dx ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000046dc9f : in al, dx ; or byte ptr [rbp + 0x39], cl ; ret
0x0000000000478059 : in al, dx ; sbb byte ptr [rax - 0x75], cl ; or byte ptr [rax - 0x77], cl ; ret
0x0000000000491abe : in al, dx ; xchg eax, esp ; push rsi ; cli ; push 0x6e ; ja 0x491a51 ; ret 0x48f
0x0000000000491abd : in al, dx ; xchg eax, esp ; push rsi ; cli ; push 0x6e ; ja 0x491a52 ; ret 0x48f
0x00000000004901c3 : in eax, 0x24 ; outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x000000000046f3d2 : in eax, 0x48 ; mov eax, esi ; ret
0x000000000048f459 : in eax, 0x6a ; mov eax, 0x45155e93 ; ret 0x591c
0x000000000047659a : in eax, 0x83 ; call qword ptr [rcx]
0x0000000000492079 : in eax, 0xe2 ; add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x0000000000461103 : in eax, 0xf ; je 0x461128 ; add rax, 2 ; ret
0x000000000043a6e9 : in eax, 0xf0 ; cmovne rax, rdx ; pop rbx ; ret
0x00000000004271fa : in eax, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000047d681 : in eax, 0xfa ; jmp qword ptr [rax]
0x000000000040c246 : in eax, 0xff ; dec dword ptr [rax + 0x39] ; ret
0x0000000000491541 : in eax, 0xff ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x0000000000416c3b : in eax, 2 ; cmovne rax, rdx ; ret
0x0000000000451705 : in eax, dx ; cli ; dec dword ptr [rax + 0x29] ; ret
0x000000000047a2cf : in eax, dx ; jne 0x47a2b1 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000047a4f2 : in eax, dx ; jne 0x47a4e1 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000047a9cc : in eax, dx ; jne 0x47a9b7 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000438dd2 : in eax, dx ; lea rax, qword ptr [rcx - 1] ; ret
0x0000000000421c5a : in eax, dx ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000401b51 : in eax, dx ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004275fa : in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000004748e5 : in eax, dx ; pop rbx ; mov eax, ebp ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000474022 : in eax, dx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000040d4c2 : in eax, dx ; ret
0x0000000000438f22 : in eax, dx ; sub rax, 1 ; ret
0x0000000000439238 : inc bl ; cmp dl, 1 ; jb 0x43924a ; mov byte ptr [rdi], cl ; ret
0x000000000043b5a1 : inc byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x0000000000468392 : inc byte ptr [rbp - 0xfd8a01] ; ror byte ptr [rax - 0x7d], 1 ; ret
0x00000000004486d5 : inc byte ptr [rbx] ; je 0x4486e5 ; ret
0x000000000046acc8 : inc dword ptr [r9 + 0x10] ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000047d753 : inc dword ptr [rax + 0x41] ; sti ; call qword ptr [rax - 0x1f0004be]
0x000000000047d23f : inc dword ptr [rax - 0x29] ; cli ; call rax
0x000000000047d763 : inc dword ptr [rax - 0x2f0004ba] ; sti ; jmp qword ptr [rax]
0x000000000047cd47 : inc dword ptr [rax - 0x50] ; cli ; call rax
0x0000000000457898 : inc dword ptr [rax - 0x90f43] ; jmp qword ptr [rax]
0x000000000044d561 : inc dword ptr [rax - 0x93b43] ; jmp qword ptr [rax]
0x000000000043a68f : inc dword ptr [rax] ; add byte ptr [rax], al ; cmove rax, rcx ; pop rbx ; ret
0x000000000041fda7 : inc dword ptr [rax] ; add byte ptr [rax], al ; sub eax, ecx ; ret
0x000000000047d67b : inc dword ptr [rax] ; jrcxz 0x47d67d ; call qword ptr [rax]
0x000000000047d467 : inc dword ptr [rax] ; leave ; cli ; push qword ptr [rax - 0x38] ; cli ; jmp rax
0x000000000047d7b3 : inc dword ptr [rax] ; nop ; sti ; call qword ptr [rax]
0x000000000047d80b : inc dword ptr [rax] ; xchg eax, ebp ; sti ; call qword ptr [rax]
0x000000000047d7df : inc dword ptr [rax] ; xchg eax, ecx ; sti ; jmp qword ptr [rax]
0x000000000047c5df : inc dword ptr [rax] ; xchg eax, edi ; stc ; jmp qword ptr [rax]
0x0000000000467752 : inc dword ptr [rbp + 0x5b0275c0] ; ret
0x00000000004677ef : inc dword ptr [rbp + 0x5b0e78c0] ; ret
0x000000000047cce3 : inc dword ptr [rbp + rbp*4 - 6] ; call rsp
0x000000000046d8fc : inc dword ptr [rbp - 0x76b08a40] ; ret
0x0000000000400897 : inc dword ptr [rbx + 0x438d01c1] ; call rbx
0x0000000000405c83 : inc dword ptr [rbx - 0x2f7cfe08] ; dec dword ptr [rax - 0x7d] ; ret
0x00000000004785c9 : inc dword ptr [rbx - 0x38b7f808] ; ret 0xffff
0x000000000044fb4a : inc dword ptr [rbx - 0x53343] ; call qword ptr [rax]
0x0000000000449588 : inc dword ptr [rbx - 0x76be0008] ; ret 0x840f
0x0000000000408bee : inc dword ptr [rbx - 0x7af0fe08] ; ret
0x00000000004767c3 : inc dword ptr [rbx - 0x7bf0bf1e] ; ret
0x000000000044d4dc : inc dword ptr [rbx - 0x8f743] ; call qword ptr [rax]
0x000000000043a74d : inc dword ptr [rbx] ; div ecx ; pop rbx ; mov eax, eax ; ret
0x000000000043a6bb : inc dword ptr [rbx] ; pop rbx ; ret
0x000000000047c85f : inc dword ptr [rbx] ; xor bh, dl ; call qword ptr [rbx + 0x23fffa32]
0x000000000046acc9 : inc dword ptr [rcx + 0x10] ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000045826a : inc dword ptr [rcx + 0xf] ; mov dh, 0x56 ; or al, 0xf6 ; ret 0xf08
0x0000000000403f38 : inc dword ptr [rcx + 0xf] ; xchg eax, ebp ; ret
0x0000000000454f3d : inc dword ptr [rcx + 0xf] ; xchg eax, esp ; ret 0x76e9
0x000000000044ea39 : inc dword ptr [rcx + 1] ; int 0x80
0x0000000000444763 : inc dword ptr [rcx - 0x45] ; add eax, 0xe9000000 ; ret 0xfffc
0x0000000000446f0a : inc dword ptr [rcx - 0x77] ; ret 0x17e9
0x000000000044958b : inc dword ptr [rcx - 0x77] ; ret 0x840f
0x000000000045757c : inc dword ptr [rcx - 1] ; push rbp ; cmp byte ptr [rax + 0x39], cl ; ret
0x000000000047cef3 : inc dword ptr [rcx - 6] ; call rsp
0x000000000047d307 : inc dword ptr [rdx - 0x2a] ; cli ; call rdx
0x000000000047ce0f : inc dword ptr [rdx - 0x51] ; cli ; call rdx
0x000000000047cdff : inc dword ptr [rdx] ; mov cl, 0xfa ; call qword ptr [rdx + 0x22fffab0]
0x0000000000431fcd : inc dword ptr [rip - 0x7cb80000] ; ret 0x4910
0x000000000047d2a3 : inc dword ptr [rsi - 0x2d] ; cli ; call rsi
0x000000000047d4b3 : inc dword ptr [rsi - 0x39] ; cli ; call rsi
0x000000000047cdab : inc dword ptr [rsi - 0x54] ; cli ; call rsi
0x00000000004783a2 : inc dword ptr [rsi*2 + 0x8b80f] ; add byte ptr [rax], al ; ret
0x000000000047cd9b : inc dword ptr [rsi] ; scasb al, byte ptr [rdi] ; cli ; call qword ptr [rsi + 0x26fffaad]
0x0000000000493db7 : inc dword ptr [rsp + rbp - 2] ; jmp rcx
0x000000000047d1db : inc dword ptr [rsp + rdx*8 - 6] ; call rsp
0x000000000047d7d7 : inc eax ; nop ; sti ; jmp rax
0x000000000047d773 : inc eax ; sti ; call qword ptr [rax]
0x000000000047d7f7 : inc eax ; xchg eax, ecx ; sti ; jmp rax
0x000000000041e6fc : inc ebp ; std ; xlatb ; ret 0xe883
0x000000000046c9ec : inc ebx ; mov eax, 1 ; ret
0x000000000045e86c : inc ebx ; nop ; xor eax, eax ; ret
0x0000000000438aa9 : inc ebx ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x0000000000416d2b : insb byte ptr [rdi], dx ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x000000000049ab55 : insb byte ptr [rdi], dx ; add byte ptr [rax], al ; mov byte ptr [rdi - 4], cl ; jmp rdx
0x000000000041d4c4 : insb byte ptr [rdi], dx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000478bfb : insb byte ptr [rdi], dx ; and al, 8 ; jmp 0x478c17
0x000000000047af29 : insb byte ptr [rdi], dx ; clc ; call rsi
0x000000000049af99 : insb byte ptr [rdi], dx ; cld ; jmp qword ptr [rcx]
0x0000000000498415 : insb byte ptr [rdi], dx ; cli ; jmp qword ptr [rdx]
0x000000000049207e : insb byte ptr [rdi], dx ; insd dword ptr [rdi], dx ; pop rbx ; ret 0x6f9
0x0000000000499d04 : insb byte ptr [rdi], dx ; ret 0xfffb
0x0000000000416a40 : insb byte ptr [rdi], dx ; xor dword ptr [rdx], eax ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x000000000049ab9d : insd dword ptr [rdi], dx ; add byte ptr [rax], al ; and byte ptr [rsi - 4], dl ; jmp qword ptr [rax]
0x000000000041693b : insd dword ptr [rdi], dx ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x000000000049abb5 : insd dword ptr [rdi], dx ; add byte ptr [rax], al ; sub byte ptr [rcx - 4], bl ; jmp qword ptr [rbx]
0x000000000047af25 : insd dword ptr [rdi], dx ; clc ; push rbp ; insb byte ptr [rdi], dx ; clc ; call rsi
0x000000000049207f : insd dword ptr [rdi], dx ; pop rbx ; ret 0x6f9
0x000000000049042d : insd dword ptr [rdi], dx ; ret 0xb9b9
0x000000000040274f : insd dword ptr [rdi], dx ; sbb eax, 0x89480001 ; ret 0x7be9
0x000000000049133f : insd dword ptr [rdi], dx ; test eax, 0x7d4c8c5d ; ret 0xd8f
0x000000000044994f : int 0x80
0x000000000047d915 : int 0xfb
0x000000000046da2d : int 0xff
0x0000000000460b26 : int1 ; call rbx
0x00000000004391bb : int1 ; jl 0x43920c ; adc dword ptr [rsi - 1], edx ; ret
0x00000000004391dc : int1 ; jl 0x43922d ; adc dword ptr [rsi - 1], edx ; ret
0x00000000004391ef : int1 ; jl 0x439240 ; adc dword ptr [rsi - 1], edx ; ret
0x00000000004392c4 : int1 ; jl 0x439315 ; adc dword ptr [rsi - 1], edx ; ret
0x000000000043931c : int1 ; jl 0x43936d ; adc dword ptr [rsi + 3], edx ; ret
0x00000000004393b9 : int1 ; jl 0x43940a ; adc dword ptr [rsi + 7], edx ; ret
0x000000000043a645 : int1 ; jmp rcx
0x000000000045e68b : int1 ; jne 0x45e686 ; lea eax, dword ptr [rdx + rdi] ; ret
0x000000000046a1e7 : int1 ; jne 0x46a1c5 ; mov eax, dword ptr [rcx] ; ret
0x000000000043a769 : int1 ; mov eax, eax ; ret
0x0000000000426feb : int1 ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000042241f : int1 ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000468e3a : int1 ; mov rsi, rax ; call 0x4150e6
0x0000000000438583 : int1 ; movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x000000000043a750 : int1 ; pop rbx ; mov eax, eax ; ret
0x000000000043dbd2 : int1 ; pop rdx ; pop r10 ; ret
0x0000000000491a56 : int1 ; ret 0x5803
0x0000000000438587 : int1 ; sub eax, edx ; ret
0x0000000000400896 : iretd ; inc dword ptr [rbx + 0x438d01c1] ; call rbx
0x000000000040553d : ja 0x40551e ; mov byte ptr [rcx], 0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000042aef3 : ja 0x42aef7 ; vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x00000000004366d7 : ja 0x4366dd ; ret
0x00000000004366f3 : ja 0x4366fd ; mov dword ptr [rdi], ecx ; ret
0x0000000000436734 : ja 0x436743 ; mov qword ptr [rdi], rcx ; ret
0x00000000004367b9 : ja 0x4367cd ; ret
0x000000000043680f : ja 0x436827 ; ret
0x0000000000436891 : ja 0x4368ad ; ret
0x0000000000436cf7 : ja 0x436d01 ; lea rax, qword ptr [rdi + 2] ; ret
0x0000000000436d13 : ja 0x436d21 ; mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 4] ; ret
0x0000000000436d64 : ja 0x436d77 ; mov qword ptr [rdi], rcx ; lea rax, qword ptr [rdi + 8] ; ret
0x0000000000436e49 : ja 0x436e61 ; lea rax, qword ptr [rdi + 0x10] ; ret
0x0000000000436ebf : ja 0x436edb ; lea rax, qword ptr [rdi + 0x14] ; ret
0x0000000000436f41 : ja 0x436f61 ; lea rax, qword ptr [rdi + 0x18] ; ret
0x00000000004394c4 : ja 0x4394f5 ; jb 0x4394d6 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000439824 : ja 0x43986a ; jb 0x439836 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000439c74 : ja 0x439cd2 ; jb 0x439c86 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000043a243 : ja 0x43a260 ; jb 0x43a24f ; mov byte ptr [rdi], cl ; ret
0x000000000043a3b1 : ja 0x43a3e8 ; jb 0x43a3c0 ; mov byte ptr [rdi], cl ; vzeroupper ; ret
0x000000000043a579 : ja 0x43a5be ; jb 0x43a588 ; mov byte ptr [rdi], cl ; vzeroupper ; ret
0x000000000043b95b : ja 0x43b963 ; ret
0x000000000043b9a9 : ja 0x43b9b3 ; ret
0x000000000043bbb4 : ja 0x43bc13 ; ret
0x000000000043bc4a : ja 0x43bc53 ; ret
0x000000000043bc87 : ja 0x43bce3 ; ret
0x000000000043bd1d : ja 0x43bd2b ; ret
0x000000000043bd4d : ja 0x43bd5b ; ret
0x000000000043bf57 : ja 0x43bf9b ; ret
0x000000000043bfcd : ja 0x43bfdb ; ret
0x000000000043c726 : ja 0x43c733 ; ret
0x000000000043de32 : ja 0x43de56 ; ret
0x000000000043e4d0 : ja 0x43e4fd ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x000000000043f185 : ja 0x43f1d9 ; movsxd rax, dword ptr [rbx + rax*4] ; add rax, rbx ; jmp rax
0x000000000044a943 : ja 0x44a953 ; ret
0x0000000000451882 : ja 0x451865 ; mov eax, r9d ; ret
0x00000000004615e9 : ja 0x4615b7 ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x0000000000461cab : ja 0x461cb3 ; ret
0x0000000000461cff : ja 0x461d0b ; ret
0x0000000000462040 : ja 0x46206b ; ret
0x000000000046dfce : ja 0x46e020 ; shr ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x0000000000477f5d : ja 0x477f66 ; sbb eax, eax ; ret
0x0000000000491ac4 : ja 0x491a4b ; ret 0x48f
0x000000000040bda8 : jae 0x40bdb5 ; movzx eax, byte ptr [rax] ; ret
0x000000000040effd : jae 0x40f025 ; movzx eax, byte ptr [rax] ; ret
0x000000000043b8cd : jae 0x43b8d2 ; ret
0x000000000043c95d : jae 0x43c962 ; ret
0x000000000043c98d : jae 0x43c992 ; ret
0x000000000043c9bd : jae 0x43c9c2 ; ret
0x000000000043db20 : jae 0x43db25 ; ret
0x000000000043db4d : jae 0x43db52 ; ret
0x000000000043de24 : jae 0x43de0b ; ret
0x000000000044a6ee : jae 0x44a735 ; xor eax, eax ; pop rbx ; ret
0x0000000000461c2d : jae 0x461c32 ; ret
0x000000000046b43b : jae 0x46b3e5 ; xor eax, eax ; ret
0x000000000046d8f9 : jae 0x46d8d1 ; std ; inc dword ptr [rbp - 0x76b08a40] ; ret
0x0000000000472ab4 : jae 0x472a97 ; mov eax, 1 ; ret
0x0000000000472f2d : jae 0x472f32 ; ret
0x0000000000478ee6 : jae 0x478ef9 ; mov rdx, qword ptr [r15] ; mov rdi, r13 ; call r14
0x0000000000490082 : jae 0x490064 ; jo 0x490100 ; mov ebp, 0xfb67d10d ; ret
0x0000000000490f1e : jae 0x490ef9 ; push rsi ; pop rdx ; je 0x490eee ; ret 0xacfc
0x000000000040efbe : jb 0x40f014 ; sub dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040f901 : jb 0x40f8e7 ; mov byte ptr [rax + rsi], dil ; ret
0x0000000000416049 : jb 0x41605a ; mov qword ptr [rdx], rbx ; mov rax, r10 ; pop rbx ; ret
0x000000000042042a : jb 0x42043a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042057a : jb 0x42058a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004206ca : jb 0x4206da ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042081a : jb 0x42082a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042096a : jb 0x42097a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000420aba : jb 0x420aca ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000420c0a : jb 0x420c1a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000420d5a : jb 0x420d6a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000420eaa : jb 0x420eba ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000420ffa : jb 0x42100a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042114a : jb 0x42115a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042129a : jb 0x4212aa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004213ea : jb 0x4213fa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042153a : jb 0x42154a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042168a : jb 0x42169a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000422dfa : jb 0x422e0a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000422f4a : jb 0x422f5a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042309a : jb 0x4230aa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004231ea : jb 0x4231fa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042333a : jb 0x42334a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042348a : jb 0x42349a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004235da : jb 0x4235ea ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042372a : jb 0x42373a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042387a : jb 0x42388a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004239ca : jb 0x4239da ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000423b1a : jb 0x423b2a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000423c6a : jb 0x423c7a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000423dba : jb 0x423dca ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000423f0a : jb 0x423f1a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042405a : jb 0x42406a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042aace : jb 0x42aada ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000439225 : jb 0x439234 ; mov dword ptr [rdi], ecx ; mov dword ptr [rsi - 4], ecx ; ret
0x0000000000439230 : jb 0x439243 ; mov word ptr [rdi], cx ; mov word ptr [rsi - 2], cx ; ret
0x000000000043923d : jb 0x439245 ; mov byte ptr [rdi], cl ; ret
0x0000000000439444 : jb 0x43944d ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004394c6 : jb 0x4394d4 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000004394c5 : jb 0x4394d5 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000439826 : jb 0x439834 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000439c76 : jb 0x439c84 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000043a245 : jb 0x43a24d ; mov byte ptr [rdi], cl ; ret
0x000000000043a3b3 : jb 0x43a3be ; mov byte ptr [rdi], cl ; vzeroupper ; ret
0x000000000043a57b : jb 0x43a586 ; mov byte ptr [rdi], cl ; vzeroupper ; ret
0x00000000004510ea : jb 0x451077 ; ret 0x349
0x000000000045f2e9 : jb 0x45f2fa ; mov qword ptr [rdx], rbx ; mov rax, r10 ; pop rbx ; ret
0x0000000000497121 : jb 0x49711d ; call rsp
0x000000000040884f : jbe 0x4088a2 ; add esp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000410c12 : jbe 0x410c4c ; sub dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000041d936 : jbe 0x41d975 ; add rax, rdi ; ret
0x000000000041d946 : jbe 0x41d977 ; lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x000000000041d956 : jbe 0x41d977 ; lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x000000000041d966 : jbe 0x41d977 ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x000000000041dd77 : jbe 0x41dde8 ; add rax, rdi ; vzeroupper ; ret
0x0000000000456320 : jbe 0x4562f8 ; mov qword ptr [rdi], rsi ; ret
0x000000000045c570 : jbe 0x45c548 ; mov qword ptr [rdi], rsi ; ret
0x000000000046d12f : jbe 0x46d13b ; ret
0x000000000040040e : je 0x400414 ; call rax
0x00000000004009f9 : je 0x400a10 ; pop rbp ; mov edi, 0x6a2af0 ; jmp rax
0x0000000000400a3b : je 0x400a50 ; pop rbp ; mov edi, 0x6a2af0 ; jmp rax
0x000000000040523e : je 0x40524e ; add dword ptr [rax - 9], ecx ; ror byte ptr [rax + 1], 1 ; ret
0x000000000040a244 : je 0x40a26f ; cmp byte ptr [rax + 0x29], cl ; ret
0x000000000040a628 : je 0x40a62f ; ret
0x000000000040d965 : je 0x40d973 ; ret
0x000000000040f9ef : je 0x40fa37 ; mov qword ptr [rsi], rcx ; ret
0x0000000000415312 : je 0x41533e ; sub byte ptr [rax - 0x77], cl ; out dx, eax ; call rax
0x00000000004157a3 : je 0x4157b6 ; lea rax, qword ptr [rdx - 0x10] ; ret
0x0000000000415d8d : je 0x415dc0 ; mov qword ptr [rbx], rax ; xor eax, eax ; pop rbx ; ret
0x00000000004163d9 : je 0x4163e5 ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x00000000004169a2 : je 0x41696d ; ret
0x000000000041c723 : je 0x41c6ed ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000041d60a : je 0x41d612 ; xchg eax, edx ; sub eax, edx ; ret
0x000000000041d83c : je 0x41d893 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000041db1a : je 0x41db71 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000041e4e5 : je 0x41e4f7 ; sbb eax, eax ; or eax, 1 ; ret
0x000000000041fb07 : je 0x41fb11 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042f543 : je 0x42f50d ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x00000000004310d3 : je 0x43109d ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x00000000004328b1 : je 0x4328c9 ; bsf eax, eax ; lea rax, qword ptr [rdi + rax] ; ret
0x0000000000432ed4 : je 0x432ede ; bsf eax, edx ; ret
0x0000000000432ed4 : je 0x432edf ; bsf eax, edx ; ret
0x0000000000432f7d : je 0x432f95 ; bsf rax, rdx ; ret
0x0000000000432f7d : je 0x432f96 ; bsf rax, rdx ; ret
0x0000000000432f1c : je 0x432fa9 ; bsf rax, rdx ; ret
0x0000000000439553 : je 0x439574 ; ror byte ptr [rdi], 1 ; adc dword ptr [rdi + rdx - 0x40], edi ; ret
0x000000000043ab7e : je 0x43ab8c ; xor eax, eax ; ret
0x000000000043ab79 : je 0x43ab99 ; cmp eax, 2 ; je 0x43ab91 ; xor eax, eax ; ret
0x000000000043abcd : je 0x43abb3 ; ret
0x000000000043afcb : je 0x43afe0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000043c287 : je 0x43c2b2 ; adc byte ptr [rdi], cl ; xchg eax, esp ; ret 0x2044
0x000000000043c7ea : je 0x43c7f1 ; ret
0x000000000043dc29 : je 0x43dc2e ; ret
0x000000000043dc8d : je 0x43dc92 ; ret
0x000000000043e3dc : je 0x43e3ef ; lea rdi, qword ptr [rcx + rax + 0x20] ; jmp rdx
0x000000000043f098 : je 0x43f0a3 ; ret
0x000000000043f0b4 : je 0x43f0c9 ; mov dword ptr [rip + 0x26193c], edx ; pop rbx ; ret
0x0000000000442b07 : je 0x442b36 ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x0000000000442d50 : je 0x442d7f ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x0000000000443362 : je 0x443391 ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x00000000004435df : je 0x44360e ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x0000000000443bf0 : je 0x443c1f ; push rax ; mov rdi, qword ptr [rsp + 0x48] ; call r15
0x0000000000443f2e : je 0x443f5d ; push rax ; mov rdi, qword ptr [rsp + 0x48] ; call r15
0x00000000004447e2 : je 0x444811 ; mov rdi, qword ptr [rsp + 0x38] ; call r15
0x0000000000445457 : je 0x445486 ; mov rdi, qword ptr [rsp + 0x40] ; call r15
0x0000000000446340 : je 0x44636f ; push rax ; mov rdi, qword ptr [rsp + 0x48] ; call r14
0x0000000000446527 : je 0x446555 ; adc byte ptr [rcx - 0x77], cl ; add ecx, dword ptr [rax - 0x77] ; ret 0x3b89
0x00000000004466b2 : je 0x4466e1 ; push rax ; mov rdi, qword ptr [rsp + 0x48] ; call r15
0x0000000000447188 : je 0x4471b7 ; push rax ; mov rdi, qword ptr [rsp + 0x48] ; call r14
0x000000000044737b : je 0x4473a9 ; adc byte ptr [rcx - 0x77], cl ; add ecx, dword ptr [rax - 0x77] ; ret 0x3b89
0x0000000000447502 : je 0x447531 ; push rax ; mov rdi, qword ptr [rsp + 0x48] ; call r15
0x00000000004486d7 : je 0x4486e3 ; ret
0x00000000004486d2 : je 0x4486e8 ; cmp esi, 3 ; je 0x4486e8 ; ret
0x0000000000448ef2 : je 0x448ef8 ; call rsi
0x0000000000448fed : je 0x448ff3 ; call rax
0x0000000000449f5b : je 0x449f61 ; call rax
0x000000000044a51e : je 0x44a52b ; ret
0x000000000044ab17 : je 0x44ab42 ; sbb byte ptr [rax + 1], cl ; ret
0x000000000044ad5f : je 0x44ad8c ; adc byte ptr [rax - 0x77], cl ; out dx, eax ; call r12
0x000000000045dbf6 : je 0x45dc46 ; add esp, 0x20 ; pop rbx ; ret
0x000000000045dbf5 : je 0x45dc47 ; add esp, 0x20 ; pop rbx ; ret
0x000000000045e05c : je 0x45e063 ; ret
0x000000000045e076 : je 0x45e083 ; pop rbx ; ret
0x000000000045e5ca : je 0x45e5f4 ; or al, 0xeb ; ret 0x5590
0x00000000004600ac : je 0x4600d5 ; bsf rax, rdx ; ret
0x00000000004600ac : je 0x4600d6 ; bsf rax, rdx ; ret
0x000000000046003c : je 0x4600e9 ; bsf rax, rdx ; ret
0x000000000046054b : je 0x460553 ; ret
0x0000000000460b1e : je 0x460b4d ; sbb byte ptr [rax - 0x77], cl ; out dx, eax ; mov r9, r14 ; call rbx
0x0000000000460c48 : je 0x460c55 ; test edx, edx ; jne 0x460c47 ; ret
0x00000000004610e9 : je 0x461109 ; mov cl, dl ; and cl, 0xf ; je 0x461119 ; ret
0x00000000004610f0 : je 0x461112 ; ret
0x0000000000461105 : je 0x461126 ; add rax, 2 ; ret
0x0000000000465f25 : je 0x465f54 ; sub byte ptr [rax - 0x3f], cl ; clc ; add dl, byte ptr [rax - 0x77] ; ret 0xc389
0x000000000046a258 : je 0x46a266 ; mov qword ptr [rsi], rdi ; mov rax, r8 ; pop rbx ; ret
0x000000000046c9da : je 0x46c938 ; sub eax, edx ; ret
0x000000000046fc12 : je 0x46fc26 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000470108 : je 0x470133 ; or byte ptr [rax + 1], cl ; ret
0x0000000000471781 : je 0x471795 ; mov rax, qword ptr [rbx] ; add rax, qword ptr [rdx + 8] ; call rax
0x0000000000471c20 : je 0x471c65 ; shl rdx, 5 ; add rdx, rax ; jmp 0x471c3c
0x00000000004726e6 : je 0x4726f3 ; ret
0x0000000000474e4d : je 0x474e78 ; adc byte ptr [rcx - 0x77], cl ; ret
0x00000000004773e8 : je 0x4773d2 ; add rsp, 0x18 ; ret
0x00000000004773d1 : je 0x4773f6 ; add rsp, 0x18 ; ret
0x0000000000477478 : je 0x477458 ; ret
0x00000000004774b9 : je 0x4774c6 ; mov qword ptr [rdi + rsi*8], rdx ; ret
0x00000000004797aa : je 0x4797b3 ; ret
0x00000000004797e3 : je 0x4797f4 ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x4797f9 ; ret
0x00000000004798ba : je 0x4798c3 ; ret
0x000000000047a686 : je 0x47a68c ; call rax
0x000000000047a943 : je 0x47a94e ; call rax
0x000000000047df1c : je 0x47defa ; sti ; call rsp
0x000000000048c504 : je 0x48c510 ; std ; lcall ptr [rax + 4] ; std ; call qword ptr [rax]
0x00000000004901e8 : je 0x4901b3 ; xor al, 0xd8 ; ret
0x0000000000490427 : je 0x490424 ; jmp 0x4903fe
0x0000000000490f22 : je 0x490eea ; ret 0xacfc
0x000000000049b2a1 : je 0x49b2a1 ; jmp rbx
0x000000000049b29d : je 0x49b2a5 ; add byte ptr [rax + 0x74], dl ; cld ; jmp rbx
0x000000000040d962 : jg 0x40d9a2 ; add byte ptr [rcx + rcx - 0xd], dh ; ret
0x0000000000422009 : jg 0x42205c ; ret
0x000000000042208f : jg 0x4220da ; ret
0x0000000000422209 : jg 0x42225c ; ret 0x894c
0x000000000042228f : jg 0x4222da ; ret 0x894c
0x00000000004249d9 : jg 0x424a2c ; ret
0x0000000000424a5f : jg 0x424aaa ; ret
0x0000000000424bd9 : jg 0x424c2c ; ret 0x894c
0x0000000000424c5f : jg 0x424caa ; ret 0x894c
0x0000000000426fc8 : jg 0x427019 ; loope 0x426fc7 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000042703f : jg 0x42708a ; ret 0xff2
0x0000000000427058 : jg 0x4270a9 ; loop 0x427057 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004270cf : jg 0x42711a ; ret
0x00000000004270e8 : jg 0x427139 ; jrcxz 0x4270e7 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000427178 : jg 0x4271c9 ; in al, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004271f8 : jg 0x427249 ; in eax, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000427278 : jg 0x4272c9 ; out 0xf3, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004272f8 : jg 0x427349 ; out 0xf3, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000427378 : jg 0x4273c9 ; call 0x4fc1837a
0x00000000004273f8 : jg 0x427449 ; jmp 0x4fc183fa
0x0000000000427578 : jg 0x4275c9 ; in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000004275f8 : jg 0x427649 ; in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000427688 : jg 0x4276d9 ; out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000427708 : jg 0x427759 ; out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000042777c : jg 0x427787 ; ret
0x00000000004277d6 : jg 0x4277e9 ; ret
0x00000000004277d1 : jg 0x427821 ; psllq mm1, qword ptr [rdi] ; jg 0x4277ee ; ret
0x0000000000427846 : jg 0x427859 ; ret
0x00000000004278b6 : jg 0x4278c9 ; ret
0x00000000004278b1 : jg 0x427901 ; or eax, 0xf7f0ff3 ; ret
0x0000000000427926 : jg 0x427939 ; ret
0x0000000000427921 : jg 0x427971 ; or al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x0000000000427996 : jg 0x4279a9 ; ret
0x0000000000427991 : jg 0x4279e1 ; or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x0000000000427a06 : jg 0x427a19 ; ret
0x0000000000427a01 : jg 0x427a51 ; or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x0000000000427a76 : jg 0x427a89 ; ret
0x0000000000427a71 : jg 0x427ac1 ; or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x0000000000427ae6 : jg 0x427af9 ; ret
0x0000000000427ae1 : jg 0x427b31 ; or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x0000000000427b56 : jg 0x427b69 ; ret
0x0000000000427bc6 : jg 0x427bd9 ; ret
0x0000000000427c36 : jg 0x427c49 ; ret
0x0000000000427c31 : jg 0x427c81 ; add eax, 0xf7f0ff3 ; ret
0x0000000000427ca6 : jg 0x427cb9 ; ret
0x0000000000427ca1 : jg 0x427cf1 ; add al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x0000000000427d16 : jg 0x427d29 ; ret
0x0000000000427d11 : jg 0x427d61 ; add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x0000000000427d86 : jg 0x427d99 ; ret
0x0000000000427d81 : jg 0x427dd1 ; add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x0000000000427df6 : jg 0x427e09 ; ret
0x0000000000427df1 : jg 0x427e41 ; add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x0000000000429ae8 : jg 0x429b39 ; loope 0x429ae7 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000429b5f : jg 0x429baa ; ret 0xff2
0x0000000000429b78 : jg 0x429bc9 ; loop 0x429b77 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000429bef : jg 0x429c3a ; ret
0x0000000000429c08 : jg 0x429c59 ; jrcxz 0x429c07 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000429c98 : jg 0x429ce9 ; in al, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000429d18 : jg 0x429d69 ; in eax, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000429d98 : jg 0x429de9 ; out 0xf3, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000429e18 : jg 0x429e69 ; out 0xf3, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000429e98 : jg 0x429ee9 ; call 0x4fc1ae9a
0x0000000000429f18 : jg 0x429f69 ; jmp 0x4fc1af1a
0x000000000042a098 : jg 0x42a0e9 ; in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000042a118 : jg 0x42a169 ; in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000042a1a8 : jg 0x42a1f9 ; out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000042a228 : jg 0x42a279 ; out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000042a29c : jg 0x42a2a7 ; ret
0x000000000042a2f6 : jg 0x42a309 ; ret
0x000000000042a2f1 : jg 0x42a341 ; psllq mm1, qword ptr [rdi] ; jg 0x42a30e ; ret
0x000000000042a366 : jg 0x42a379 ; ret
0x000000000042a3d6 : jg 0x42a3e9 ; ret
0x000000000042a3d1 : jg 0x42a421 ; or eax, 0xf7f0ff3 ; ret
0x000000000042a446 : jg 0x42a459 ; ret
0x000000000042a441 : jg 0x42a491 ; or al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x000000000042a4b6 : jg 0x42a4c9 ; ret
0x000000000042a4b1 : jg 0x42a501 ; or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x000000000042a526 : jg 0x42a539 ; ret
0x000000000042a521 : jg 0x42a571 ; or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x000000000042a596 : jg 0x42a5a9 ; ret
0x000000000042a591 : jg 0x42a5e1 ; or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x000000000042a606 : jg 0x42a619 ; ret
0x000000000042a601 : jg 0x42a651 ; or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x000000000042a676 : jg 0x42a689 ; ret
0x000000000042a6e6 : jg 0x42a6f9 ; ret
0x000000000042a756 : jg 0x42a769 ; ret
0x000000000042a751 : jg 0x42a7a1 ; add eax, 0xf7f0ff3 ; ret
0x000000000042a7c6 : jg 0x42a7d9 ; ret
0x000000000042a7c1 : jg 0x42a811 ; add al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x000000000042a836 : jg 0x42a849 ; ret
0x000000000042a831 : jg 0x42a881 ; add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x000000000042a8a6 : jg 0x42a8b9 ; ret
0x000000000042a8a1 : jg 0x42a8f1 ; add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x000000000042a916 : jg 0x42a929 ; ret
0x000000000042a911 : jg 0x42a961 ; add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x000000000042aa74 : jg 0x42aa85 ; vmovdqu ymmword ptr [r9 - 0x20], ymm1 ; ret
0x000000000042aa88 : jg 0x42aa99 ; vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x000000000042aefa : jg 0x42aef6 ; ret
0x00000000004367a6 : jg 0x4367b1 ; ret
0x00000000004367b6 : jg 0x4367c4 ; mov byte ptr [rdi + 0x10], dh ; ret
0x00000000004367ca : jg 0x4367d9 ; mov word ptr [rdi + 0x10], cx ; ret
0x00000000004367e9 : jg 0x4367f7 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000004367f9 : jg 0x436807 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x0000000000436809 : jg 0x43681a ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x000000000043682a : jg 0x436839 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x000000000043684a : jg 0x436859 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x000000000043686a : jg 0x436879 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x000000000043688a : jg 0x43689c ; mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x00000000004368cd : jg 0x4368df ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x00000000004368ed : jg 0x4368ff ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x000000000043690b : jg 0x43691b ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x000000000043692b : jg 0x43693b ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x000000000043694b : jg 0x43695b ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x000000000043696b : jg 0x43697b ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x0000000000436e36 : jg 0x436e45 ; lea rax, qword ptr [rdi + 0xf] ; ret
0x0000000000436e46 : jg 0x436e58 ; mov byte ptr [rdi + 0x10], dh ; lea rax, qword ptr [rdi + 0x10] ; ret
0x0000000000436e79 : jg 0x436e8b ; mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x12] ; ret
0x0000000000436e99 : jg 0x436eab ; mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x13] ; ret
0x0000000000436fbf : jg 0x43701f ; or eax, 0x1c478d48 ; ret
0x0000000000439207 : jg 0x439217 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x00000000004391fd : jg 0x43921d ; vmovdqu ymmword ptr [rsi - 0x20], ymm2 ; ret
0x0000000000439694 : jg 0x4396cc ; movups xmmword ptr [r11], xmm8 ; ret
0x0000000000439762 : jg 0x43979a ; movups xmmword ptr [r11], xmm8 ; ret
0x000000000043983a : jg 0x43984b ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x00000000004399cb : jg 0x4399f5 ; vzeroupper ; ret
0x0000000000439a72 : jg 0x439a7c ; vzeroupper ; ret
0x0000000000439afe : jg 0x439b28 ; vzeroupper ; ret
0x0000000000439b8e : jg 0x439b98 ; vzeroupper ; ret
0x0000000000439ca2 : jg 0x439cb3 ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x0000000000439e86 : jg 0x439eb0 ; vzeroupper ; ret
0x0000000000439e85 : jg 0x439eb1 ; vzeroupper ; ret
0x0000000000439f4c : jg 0x439f56 ; vzeroupper ; ret
0x0000000000439f4b : jg 0x439f57 ; vzeroupper ; ret
0x000000000043a01f : jg 0x43a049 ; vzeroupper ; ret
0x000000000043a01e : jg 0x43a04a ; vzeroupper ; ret
0x000000000043a0f2 : jg 0x43a0fc ; vzeroupper ; ret
0x000000000043a0f1 : jg 0x43a0fd ; vzeroupper ; ret
0x000000000043a15c : jg 0x43a167 ; ret
0x000000000043a1ac : jg 0x43a1b7 ; ret
0x000000000043a2b4 : jg 0x43a2c2 ; vzeroupper ; ret
0x000000000043a304 : jg 0x43a312 ; vzeroupper ; ret
0x000000000043a3c3 : jg 0x43a3d1 ; vzeroupper ; ret
0x000000000043a441 : jg 0x43a44f ; vzeroupper ; ret
0x000000000043a440 : jg 0x43a450 ; vzeroupper ; ret
0x000000000043a4a1 : jg 0x43a4af ; vzeroupper ; ret
0x000000000043a4a0 : jg 0x43a4b0 ; vzeroupper ; ret
0x000000000043a58b : jg 0x43a599 ; vzeroupper ; ret
0x000000000043a599 : jg 0x43a5a7 ; vzeroupper ; ret
0x000000000043a5f0 : jg 0x43a62d ; ret 0x2b77
0x000000000043a70b : jg 0x43a6d8 ; mov eax, 0x80 ; pop rbx ; ret
0x000000000043a767 : jg 0x43a765 ; int1 ; mov eax, eax ; ret
0x000000000043be53 : jg 0x43be5d ; add byte ptr [rax], al ; add rsp, 0x68 ; ret
0x000000000044d84a : jg 0x44d863 ; test byte ptr [rbp - 0x7c000012], ah ; ret
0x000000000045715a : jg 0x457173 ; test byte ptr [rip - 0x7c000003], cl ; ret
0x00000000004584c2 : jg 0x4584db ; test byte ptr [rbp - 0x7c000017], ah ; ret
0x00000000004585d8 : jg 0x4585f1 ; test byte ptr [rdi - 0x7c000018], cl ; ret
0x000000000046aee7 : jg 0x46aef9 ; test rdi, rdi ; jne 0x46aec8 ; ret
0x0000000000474c98 : jg 0x474ca2 ; add byte ptr [rcx - 0x77], cl ; ror byte ptr [rax - 0x77], 1 ; ret 0x3575
0x00000000004067e6 : jge 0x4067ef ; mov rax, qword ptr [rsp + 8] ; call rax
0x000000000043ce77 : jge 0x43ce32 ; mov rdi, r13 ; mov rsi, qword ptr [rax] ; call r14
0x0000000000477832 : jge 0x47782f ; leave ; ret
0x00000000004779b0 : jge 0x4779b3 ; mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x0000000000477afc : jge 0x477af9 ; leave ; ret
0x0000000000477b48 : jge 0x477b4b ; mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x0000000000477cd7 : jge 0x477cda ; mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x0000000000477e37 : jge 0x477e34 ; leave ; ret
0x0000000000477e88 : jge 0x477e8b ; mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x00000000004010cf : jl 0x4010fd ; or al, 0x48 ; mov eax, dword ptr [rsp + 0x18] ; call rax
0x0000000000405196 : jl 0x4051a7 ; add dword ptr [rax - 9], ecx ; ror byte ptr [rax + 1], 1 ; ret
0x0000000000405bfd : jl 0x405c28 ; or byte ptr [rcx - 0x77], cl ; ret 0x8b4c
0x000000000042a9f4 : jl 0x42aa43 ; adc dword ptr [rcx - 1], edi ; ret
0x000000000042aa30 : jl 0x42aa7f ; adc dword ptr [rcx - 1], ebx ; ret
0x000000000042ac2e : jl 0x42ac7d ; adc dword ptr [rcx - 1], edi ; ret
0x000000000042ad95 : jl 0x42ade4 ; adc dword ptr [rcx + 7], edi ; ret
0x000000000042aef7 : jl 0x42af46 ; adc dword ptr [rdi - 8], edi ; ret
0x00000000004391bc : jl 0x43920b ; adc dword ptr [rsi - 1], edx ; ret
0x00000000004391dd : jl 0x43922c ; adc dword ptr [rsi - 1], edx ; ret
0x00000000004391f0 : jl 0x43923f ; adc dword ptr [rsi - 1], edx ; ret
0x00000000004392c5 : jl 0x439314 ; adc dword ptr [rsi - 1], edx ; ret
0x000000000043931d : jl 0x43936c ; adc dword ptr [rsi + 3], edx ; ret
0x00000000004393ba : jl 0x439409 ; adc dword ptr [rsi + 7], edx ; ret
0x0000000000439d70 : jl 0x439d8f ; cld ; vzeroupper ; ret
0x000000000043ccba : jl 0x43cce8 ; adc byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x0000000000443bf5 : jl 0x443c1f ; call r15
0x0000000000443db0 : jl 0x443dde ; adc byte ptr [rcx - 0x77], cl ; add ecx, dword ptr [rax - 0x77] ; ret 0x3389
0x0000000000443f33 : jl 0x443f5d ; call r15
0x00000000004443bf : jl 0x4443ed ; cmp byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x0000000000444f9f : jl 0x444fcd ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x000000000044545c : jl 0x445486 ; call r15
0x0000000000446345 : jl 0x44636f ; call r14
0x00000000004466b7 : jl 0x4466e1 ; call r15
0x000000000044718d : jl 0x4471b7 ; call r14
0x0000000000447507 : jl 0x447531 ; call r15
0x000000000044ace6 : jl 0x44ad11 ; and byte ptr [rax + 0x39], cl ; ret 0x8d48
0x00000000004543bb : jl 0x4543c6 ; add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0x59e8
0x0000000000456531 : jl 0x45655c ; adc byte ptr [rax - 0x7d], cl ; ret
0x000000000045f6eb : jl 0x45f716 ; adc byte ptr [rax - 0x77], cl ; ret 0x8949
0x00000000004671e5 : jl 0x467210 ; or byte ptr [rax - 0x7d], cl ; ret 0x101
0x000000000046d905 : jl 0x46d933 ; sbb byte ptr [rax - 0x75], cl ; push rsp ; and al, 0x10 ; call rdx
0x0000000000472dc0 : jl 0x472de9 ; add byte ptr [rax], al ; mov qword ptr [rbx + 0x18], rax ; pop rbx ; ret
0x000000000047d2f4 : jl 0x47d2ca ; cli ; jmp qword ptr [rdx]
0x000000000049d129 : jl 0x49d12a ; call qword ptr [rdx]
0x0000000000432f1e : jle 0x432f27 ; add byte ptr [rax], al ; bsf rax, rdx ; ret
0x0000000000432f1e : jle 0x432f28 ; add byte ptr [rax], al ; bsf rax, rdx ; ret
0x0000000000439091 : jle 0x4390cd ; movsxd rax, ecx ; ret
0x0000000000448722 : jle 0x448735 ; sub eax, 1 ; mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x000000000045b9d3 : jle 0x45b960 ; ret 0x349
0x000000000045ca29 : jle 0x45ca58 ; add byte ptr [rax + 0x63], cl ; ror dword ptr [rax - 0x75], 4 ; ret 0x8548
0x000000000045e059 : jle 0x45e091 ; add byte ptr [rdx + rax - 0xd], dh ; ret
0x000000000046ff16 : jle 0x46ff62 ; and eax, dword ptr [rax] ; add word ptr [rdx + rax*2], 1 ; ret
0x0000000000401a02 : jmp 0x4019ed
0x000000000040230d : jmp 0x402335
0x0000000000403d8b : jmp 0x403d51
0x0000000000406802 : jmp 0x4067c7
0x0000000000406981 : jmp 0x406947
0x000000000040be1a : jmp 0x40bdd2
0x000000000040c162 : jmp 0x40c128
0x00000000004135f2 : jmp 0x40f882
0x0000000000413671 : jmp 0x41366b
0x0000000000413921 : jmp 0x4138e7
0x0000000000416459 : jmp 0x41641f
0x00000000004326f4 : jmp 0x4326ba
0x0000000000432848 : jmp 0x43280d
0x000000000043290c : jmp 0x4328d2
0x0000000000432a58 : jmp 0x432a1d
0x0000000000438d7e : jmp 0x438d44
0x0000000000438e4f : jmp 0x438e15
0x0000000000438ebe : jmp 0x438e84
0x000000000043b763 : jmp 0x43b5f1
0x000000000043bae1 : jmp 0x43ba3e
0x000000000043beaa : jmp 0x43be47
0x000000000043bfbb : jmp 0x43bf80
0x000000000043f75d : jmp 0x43f7a9
0x00000000004481b6 : jmp 0x44817b
0x000000000045824f : jmp 0x458215
0x00000000004582ea : jmp 0x4582ef
0x000000000045b9e9 : jmp 0x459398
0x000000000045d0db : jmp 0x45d0a0
0x000000000045ee93 : jmp 0x45ee59
0x0000000000461e41 : jmp 0x461d93
0x000000000046f062 : jmp 0x46f0b4
0x0000000000471f2a : jmp 0x471b43
0x0000000000472bc2 : jmp 0x472c14
0x0000000000478bfe : jmp 0x478c14
0x000000000047a513 : jmp 0x47a4d9
0x000000000048f6ea : jmp 0x48f729
0x0000000000490429 : jmp 0x4903fc
0x0000000000491420 : jmp 0x4913b4
0x000000000049141f : jmp 0x4913b5
0x00000000004273fa : jmp 0x4fc183f8
0x00000000004273f9 : jmp 0x4fc183f9
0x0000000000429f1a : jmp 0x4fc1af18
0x0000000000429f19 : jmp 0x4fc1af19
0x000000000046dfd1 : jmp 0xffffffffc3566926
0x00000000004584c6 : jmp 0xffffffffc3c984ce
0x00000000004675d9 : jmp 0xffffffffeb083869
0x0000000000461bc3 : jmp 0xfffffffff677de53
0x0000000000470a7d : jmp qword ptr [edx]
0x000000000048c50f : jmp qword ptr [rax + 0x10fffd04]
0x0000000000406a01 : jmp qword ptr [rax]
0x0000000000493dc7 : jmp qword ptr [rbp + 0x2c]
0x000000000047c83b : jmp qword ptr [rbx]
0x0000000000497ae3 : jmp qword ptr [rcx]
0x0000000000491ce4 : jmp qword ptr [rdi]
0x000000000047d02f : jmp qword ptr [rdx + 0x12fffaa1]
0x0000000000457234 : jmp qword ptr [rdx + rax*8]
0x00000000004709ef : jmp qword ptr [rdx]
0x000000000040d219 : jmp qword ptr [rsi + 0xf]
0x000000000047cda3 : jmp qword ptr [rsi]
0x0000000000416df9 : jmp r10
0x000000000046bb60 : jmp r11
0x000000000041fdfd : jmp r9
0x0000000000400a01 : jmp rax
0x000000000046bb61 : jmp rbx
0x000000000041e794 : jmp rcx
0x0000000000405d0e : jmp rdi
0x0000000000405a25 : jmp rdx
0x00000000004018fd : jmp rsi
0x000000000047cccb : jmp rsp
0x000000000040230b : jne 0x40231d ; jmp 0x402337
0x000000000040555c : jne 0x405570 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x00000000004062a8 : jne 0x406286 ; ret
0x0000000000407a21 : jne 0x407a34 ; add rsp, 0xd8 ; ret
0x0000000000407ad2 : jne 0x407ae5 ; add rsp, 0xd8 ; ret
0x000000000040c233 : jne 0x40c244 ; xor eax, eax ; ret
0x000000000040d448 : jne 0x40d49c ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x000000000040d4c1 : jne 0x40d4b3 ; ret
0x000000000040dede : jne 0x40ded3 ; ret
0x000000000040e109 : jne 0x40e133 ; pop rbx ; ret
0x000000000040e231 : jne 0x40e1f7 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000040e27c : jne 0x40e275 ; lea eax, dword ptr [rdx + rdi] ; ret
0x000000000040ebb6 : jne 0x40ebab ; ret
0x000000000040fecb : jne 0x40fed2 ; ret
0x0000000000410460 : jne 0x410454 ; pop rbx ; mov rax, rdi ; pop rbp ; pop r12 ; ret
0x000000000041062d : jne 0x41063c ; add rsp, 0x10 ; pop rbx ; ret
0x000000000041432c : jne 0x4142f3 ; ret
0x0000000000415827 : jne 0x415816 ; sub rax, 0x10 ; ret
0x000000000041844c : jne 0x418436 ; xor eax, eax ; sub eax, ecx ; ret
0x000000000041d8e7 : jne 0x41d944 ; xor eax, eax ; ret
0x000000000041d8b7 : jne 0x41d968 ; xor eax, eax ; ret
0x000000000041dd63 : jne 0x41dd87 ; xor eax, eax ; vzeroupper ; ret
0x000000000041e49a : jne 0x41e4a5 ; vzeroupper ; ret
0x000000000041e594 : jne 0x41e4a6 ; ret
0x000000000041e6df : jne 0x41e4a9 ; vzeroupper ; ret
0x000000000041fd4d : jne 0x41fd77 ; xor eax, eax ; ret
0x000000000041f341 : jne 0x41fd7b ; xor eax, eax ; ret
0x000000000041f369 : jne 0x41fd87 ; xor eax, eax ; ret
0x0000000000437125 : jne 0x4370b6 ; lea rax, qword ptr [rdi + 3] ; ret
0x00000000004370f7 : jne 0x4370b6 ; lea rax, qword ptr [rdi + 7] ; ret
0x00000000004370f6 : jne 0x4370b7 ; lea rax, qword ptr [rdi + 7] ; ret
0x0000000000438884 : jne 0x438a98 ; xor eax, eax ; ret
0x0000000000438a89 : jne 0x438aa9 ; xor eax, eax ; ret
0x0000000000438931 : jne 0x438aad ; xor eax, eax ; ret
0x0000000000438aa1 : jne 0x438aae ; cmp eax, ecx ; sbb eax, eax ; sbb eax, -1 ; ret
0x0000000000438bb1 : jne 0x438ba2 ; ret
0x0000000000438c61 : jne 0x438c52 ; ret
0x0000000000438dd1 : jne 0x438dc6 ; lea rax, qword ptr [rcx - 1] ; ret
0x0000000000438f21 : jne 0x438f16 ; sub rax, 1 ; ret
0x000000000043a22d : jne 0x43a216 ; ret
0x000000000043a394 : jne 0x43a37c ; vzeroupper ; ret
0x000000000043a557 : jne 0x43a537 ; vzeroupper ; ret
0x000000000043acaf : jne 0x43acdb ; add rsp, 0x20 ; pop rbx ; ret
0x000000000043b927 : jne 0x43b93f ; add rsp, 0x28 ; ret
0x000000000043bb57 : jne 0x43bba1 ; add rsp, 0x58 ; ret
0x000000000043bda6 : jne 0x43bdf1 ; add rsp, 0x18 ; ret
0x000000000043bf27 : jne 0x43bf34 ; add rsp, 0x58 ; ret
0x000000000043c856 : jne 0x43c86d ; add rsp, 0x28 ; ret
0x000000000043cb33 : jne 0x43cb43 ; ret
0x000000000043d5fa : jne 0x43d5f8 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000043dbd1 : jne 0x43dbc9 ; pop rdx ; pop r10 ; ret
0x0000000000440ddf : jne 0x440d73 ; call rsi
0x000000000044a65f : jne 0x44a66c ; add rsp, 0x18 ; ret
0x000000000044a8a7 : jne 0x44a8fc ; add rsp, 0x148 ; ret
0x0000000000451dde : jne 0x451d68 ; lea r8, qword ptr [rax - 1] ; call 0x46e098
0x00000000004562b2 : jne 0x4562c5 ; add rsp, 0xd8 ; ret
0x000000000045db31 : jne 0x45db23 ; ret
0x000000000045e68c : jne 0x45e685 ; lea eax, dword ptr [rdx + rdi] ; ret
0x000000000045ffa3 : jne 0x45ffae ; xor rax, rax ; ret
0x00000000004603a3 : jne 0x4603d8 ; mov rax, r8 ; vzeroupper ; ret
0x0000000000460c4c : jne 0x460c43 ; ret
0x0000000000460c53 : jne 0x460c5e ; xor rax, rax ; ret
0x0000000000460eeb : jne 0x460ea6 ; mov rax, rdx ; ret
0x0000000000461eac : jne 0x461ef9 ; add rsp, 0x58 ; ret
0x0000000000461f2f : jne 0x461f42 ; movzx eax, al ; add rsp, 0x58 ; ret
0x0000000000461ff3 : jne 0x462019 ; add rsp, 0x38 ; ret
0x0000000000467755 : jne 0x46775c ; pop rbx ; ret
0x0000000000468395 : jne 0x46839b ; call rax
0x0000000000468395 : jne 0x46839f ; call rax
0x000000000046a1e8 : jne 0x46a1c4 ; mov eax, dword ptr [rcx] ; ret
0x000000000046ae97 : jne 0x46aeb1 ; mov rax, qword ptr [rip + 0x239430] ; ret
0x000000000046aeec : jne 0x46aec3 ; ret
0x000000000046c968 : jne 0x46c941 ; movsx eax, dl ; neg eax ; ret
0x000000000046d301 : jne 0x46d339 ; add rsp, 0x38 ; ret
0x000000000046d396 : jne 0x46d3aa ; add rsp, 0x38 ; ret
0x000000000046d4a6 : jne 0x46d4ca ; add rsp, 0x48 ; ret
0x000000000046d55a : jne 0x46d569 ; add rsp, 0x20 ; pop rbx ; ret
0x000000000046d656 : jne 0x46d66a ; add rsp, 0x38 ; ret
0x000000000046d710 : jne 0x46d72a ; add rsp, 0x38 ; ret
0x000000000046ef21 : jne 0x46ef61 ; leave ; ret
0x000000000046f3d1 : jne 0x46f3bd ; mov rax, rsi ; ret
0x000000000046f455 : jne 0x46f435 ; mov rax, rsi ; ret
0x000000000046f4bf : jne 0x46f4db ; add rsp, 0x38 ; ret
0x000000000046f50f : jne 0x46f563 ; and eax, dword ptr [rax] ; add rsp, 8 ; ret
0x000000000046f791 : jne 0x46f79b ; ret
0x000000000046fafd : jne 0x46fb0a ; add rsp, 0x38 ; ret
0x000000000046fbe0 : jne 0x46fbfa ; add rsp, 0x38 ; ret
0x0000000000472d4b : jne 0x472d62 ; add rsp, 0x38 ; ret
0x0000000000472e48 : jne 0x472e5b ; add rsp, 0x30 ; pop rbx ; ret
0x0000000000472efd : jne 0x472f13 ; add rsp, 0x30 ; pop rbx ; ret
0x000000000047407a : jne 0x473fa8 ; ret
0x0000000000474c29 : jne 0x474c3c ; add rsp, 0x28 ; ret
0x0000000000475249 : jne 0x47526c ; xor eax, eax ; ret
0x0000000000475231 : jne 0x475271 ; mov rax, qword ptr [rsi + 0xb0] ; ret
0x0000000000477460 : jne 0x477481 ; mov rax, qword ptr [rax] ; ret
0x00000000004774cf : jne 0x4774da ; mov qword ptr [rax], rdx ; ret
0x000000000047782e : jne 0x477827 ; mov r15, qword ptr [rbp - 8] ; leave ; ret
0x0000000000477af8 : jne 0x477af1 ; mov r15, qword ptr [rbp - 8] ; leave ; ret
0x0000000000477e33 : jne 0x477e2c ; mov r15, qword ptr [rbp - 8] ; leave ; ret
0x0000000000478384 : jne 0x4783a3 ; ret
0x00000000004783a4 : jne 0x4783bc ; mov eax, 8 ; ret
0x00000000004783cf : jne 0x4783fe ; mov rax, qword ptr [rsi + 0x10] ; ret
0x00000000004783e9 : jne 0x478402 ; xor eax, eax ; ret
0x000000000047922f : jne 0x47925e ; mov rax, qword ptr [rsi + 0x10] ; ret
0x0000000000479249 : jne 0x479262 ; xor eax, eax ; ret
0x00000000004797e9 : jne 0x4797f3 ; ret
0x0000000000479804 : jne 0x479813 ; ret
0x0000000000479a34 : jne 0x479a43 ; ret
0x0000000000479cb9 : jne 0x479cdc ; xor eax, eax ; ret
0x000000000047a285 : jne 0x47a278 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000047a2d0 : jne 0x47a2b0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000047a3f5 : jne 0x47a3db ; pop rbx ; ret
0x000000000047a4f3 : jne 0x47a4e0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000047a9cd : jne 0x47a9b6 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000047aa9b : jne 0x47aaa3 ; ret
0x0000000000415f9b : jno 0x415ff3 ; add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x0000000000415f9b : jno 0x415ff5 ; add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x000000000041f5fe : jno 0x41f60d ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042a9f0 : jno 0x42a9f9 ; vmovups zmmword ptr [r9 - 0x40], zmm7 ; ret
0x000000000042ac2a : jno 0x42ac33 ; vmovups zmmword ptr [r9 - 0x40], zmm15 ; ret
0x000000000042ad91 : jno 0x42ada2 ; vmovups zmmword ptr [r9 + 0x1c0], zmm15 ; ret
0x000000000042aef6 : jno 0x42af7a ; adc qword ptr [rdi - 8], rdi ; ret
0x0000000000454e04 : jno 0x454e0f ; add byte ptr [rdi + rcx + 0x45], cl ; ret 0xf4c
0x00000000004657d1 : jno 0x4657e1 ; add byte ptr [rax], al ; call 0x401a26
0x000000000046dec4 : jno 0x46df16 ; shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x000000000049568e : jno 0x49569c ; ret
0x0000000000400b4b : jnp 0x400b56 ; add byte ptr [rax], bh ; leave ; ret
0x0000000000415ee1 : jnp 0x415f1a ; add al, byte ptr [rax] ; cmovne rax, rdx ; ret
0x0000000000415ee1 : jnp 0x415f1b ; add al, byte ptr [rax] ; cmovne rax, rdx ; ret
0x0000000000416d01 : jnp 0x416d34 ; add al, byte ptr [rax] ; cmovne rax, rdx ; ret
0x0000000000416d01 : jnp 0x416d35 ; add al, byte ptr [rax] ; cmovne rax, rdx ; ret
0x000000000048ff05 : jnp 0x48fec2 ; ret
0x000000000040eec3 : jns 0x40eeea ; sub dword ptr [rax], eax ; ret
0x000000000041699f : jns 0x4169a7 ; add byte ptr [rsi + rax*8 - 0xd], dh ; ret
0x000000000042a9f7 : jns 0x42a9fa ; ret
0x000000000042ac31 : jns 0x42ac34 ; ret
0x000000000042ad98 : jns 0x42ada3 ; ret
0x0000000000465a1c : jns 0x465a2a ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8545
0x000000000047511e : jns 0x47512b ; mov r8, qword ptr [r8] ; mov qword ptr [r10], r8 ; ret
0x00000000004773ce : jns 0x477411 ; add byte ptr [rbp + rbx + 0x48], dh ; add esp, 0x18 ; ret
0x000000000047813e : jns 0x47814b ; mov r8, qword ptr [r8] ; mov qword ptr [r10], r8 ; ret
0x0000000000479d3e : jns 0x479d4b ; mov r8, qword ptr [r8] ; mov qword ptr [r10], r8 ; ret
0x000000000047df44 : jns 0x47df23 ; sti ; call qword ptr [rsi]
0x000000000047df44 : jns 0x47df27 ; sti ; call qword ptr [rsi]
0x000000000048f00e : jns 0x48efa4 ; ret 0xf869
0x000000000048f00d : jns 0x48efa5 ; ret 0xf869
0x000000000049141e : jns 0x491475 ; jmp 0x4913b6
0x000000000040c054 : jo 0x40c0a5 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000040c084 : jo 0x40c0d5 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000043cb2d : jo 0x43cb40 ; test sil, 1 ; jne 0x43cb49 ; ret
0x0000000000444595 : jo 0x4445ad ; mov dh, 0x48 ; dec dword ptr [rax - 0x7d] ; ret 0x4801
0x000000000045dbaa : jo 0x45dbc2 ; mov qword ptr [rax + 0x40], rcx ; ret
0x000000000046081d : jo 0x46087f ; pop rbp ; pop r12 ; ret
0x0000000000465794 : jo 0x4657a4 ; add byte ptr [rax], al ; call 0x401a26
0x0000000000466d14 : jo 0x466d1e ; add byte ptr [rax + 0xf], cl ; ret 0x3e80
0x00000000004749df : jo 0x474a45 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000047c5dc : jo 0x47c57c ; stc ; inc dword ptr [rax] ; xchg eax, edi ; stc ; jmp qword ptr [rax]
0x000000000047cd74 : jo 0x47cd24 ; cli ; call qword ptr [rsi]
0x000000000047d46c : jo 0x47d439 ; cli ; jmp rax
0x000000000047d6f4 : jo 0x47d71a ; sti ; call qword ptr [rax]
0x000000000047d714 : jo 0x47d747 ; sti ; call qword ptr [rax]
0x000000000047d770 : jo 0x47d7c3 ; sti ; inc eax ; sti ; call qword ptr [rax]
0x0000000000490084 : jo 0x4900fe ; mov ebp, 0xfb67d10d ; ret
0x0000000000497120 : jo 0x497197 ; clc ; call rsp
0x00000000004993d0 : jo 0x4993d3 ; cli ; call rsp
0x0000000000499a0c : jo 0x499a70 ; add byte ptr [rax], al ; and byte ptr [rbx + rdi*8], ah ; call rsp
0x000000000049bc7d : jo 0x49bc84 ; ret
0x000000000049cee1 : jo 0x49cee2 ; jmp qword ptr [rdx]
0x0000000000413bc6 : jp 0x413bd3 ; add al, ch ; xchg eax, edx ; ret 0xffff
0x000000000047cd34 : jp 0x47cce4 ; cli ; jmp qword ptr [rax]
0x00000000004957b5 : jp 0x4957b0 ; call qword ptr [rdx]
0x00000000004270ea : jrcxz 0x4270e5 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004270e9 : jrcxz 0x4270e6 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000429c0a : jrcxz 0x429c05 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000429c09 : jrcxz 0x429c06 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000043dc23 : jrcxz 0x43dbe8 ; cmp r11d, 0xa ; je 0x43dc34 ; ret
0x000000000047175f : jrcxz 0x4717b3 ; mov esp, eax ; nop dword ptr [rax + rax] ; call qword ptr [rbx]
0x000000000047a4f4 : jrcxz 0x47a545 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000047d67d : jrcxz 0x47d67b ; call qword ptr [rax]
0x000000000048ee65 : jrcxz 0x48eebf ; ret
0x0000000000403f36 : js 0x403f46 ; inc dword ptr [rcx + 0xf] ; xchg eax, ebp ; ret
0x0000000000404010 : js 0x404020 ; inc dword ptr [rcx + 0xf] ; xchg eax, ebp ; ret
0x0000000000406f65 : js 0x406f89 ; call rdx
0x0000000000444ab8 : js 0x444a45 ; ret 0x8348
0x000000000044930b : js 0x449316 ; mov byte ptr [rax], 0x2f ; mov byte ptr [rdi], 0 ; ret
0x00000000004677f2 : js 0x467805 ; pop rbx ; ret
0x00000000004687ef : js 0x468841 ; mov eax, dword ptr [rbx + 0x10] ; add rax, qword ptr [r14] ; call rax
0x0000000000477686 : js 0x477693 ; add byte ptr [rax], al ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x0000000000477693 : js 0x47769f ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000491543 : lahf ; mov dh, 0xc7 ; ret 0xe71f
0x0000000000431d2d : lahf ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043b41d : lahf ; push rax ; cld ; dec dword ptr [rax - 0x77] ; ret
0x000000000044cba2 : lahf ; ret
0x000000000040f4df : lahf ; ret 0x3949
0x000000000040f592 : lahf ; ret 0x48e9
0x000000000048ed9d : lahf ; ret 0x871e
0x0000000000451e90 : lahf ; ret 0x87e
0x0000000000451a58 : lahf ; ret 0x8e0f
0x000000000043a5e9 : lahf ; ret 0xea81
0x0000000000476a41 : lahf ; ret 0xf45
0x0000000000463079 : lahf ; sub byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004323bd : lar eax, word ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000048c507 : lcall ptr [rax + 4] ; std ; call qword ptr [rax]
0x000000000048c51b : lcall ptr [rax + 4] ; std ; lcall ptr [rax + 4] ; std ; call qword ptr [rax]
0x0000000000410050 : lcall ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000409f65 : lcall ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000409ceb : lcall ptr [rbx + 0x5d] ; ret
0x000000000046b7f6 : lcall ptr [rbx + 0x64] ; mov eax, dword ptr [rax] ; ret
0x000000000047df3f : lcall ptr [rcx + rbx*8 - 0x25860005] ; sti ; call qword ptr [rsi]
0x000000000047de97 : lcall ptr [rdx + rbx*8 - 0x26770005] ; sti ; jmp rdx
0x000000000047d913 : lcall ptr [rsi] ; int 0xfb
0x0000000000427776 : lddqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x000000000040e28b : lea eax, dword ptr [r8 - 1] ; ret
0x000000000047513c : lea eax, dword ptr [rax + 8] ; mov qword ptr [r10], r8 ; ret
0x000000000041d914 : lea eax, dword ptr [rax + rdi + 0x10] ; ret
0x000000000041d924 : lea eax, dword ptr [rax + rdi + 0x20] ; ret
0x000000000041d8f4 : lea eax, dword ptr [rax + rdi - 0x10] ; ret
0x0000000000451de1 : lea eax, dword ptr [rax - 1] ; call 0x46e095
0x000000000040e28c : lea eax, dword ptr [rax - 1] ; ret
0x000000000045fccd : lea eax, dword ptr [rcx + rsi] ; ret
0x0000000000438dd4 : lea eax, dword ptr [rcx - 1] ; ret
0x0000000000436e4c : lea eax, dword ptr [rdi + 0x10] ; ret
0x0000000000436e61 : lea eax, dword ptr [rdi + 0x11] ; ret
0x0000000000436e7f : lea eax, dword ptr [rdi + 0x12] ; ret
0x0000000000436e9f : lea eax, dword ptr [rdi + 0x13] ; ret
0x0000000000436ec2 : lea eax, dword ptr [rdi + 0x14] ; ret
0x0000000000436ee1 : lea eax, dword ptr [rdi + 0x15] ; ret
0x0000000000436f01 : lea eax, dword ptr [rdi + 0x16] ; ret
0x0000000000436f21 : lea eax, dword ptr [rdi + 0x17] ; ret
0x0000000000436f44 : lea eax, dword ptr [rdi + 0x18] ; ret
0x0000000000436f69 : lea eax, dword ptr [rdi + 0x19] ; ret
0x0000000000436f87 : lea eax, dword ptr [rdi + 0x1a] ; ret
0x0000000000436fa7 : lea eax, dword ptr [rdi + 0x1b] ; ret
0x0000000000436fc3 : lea eax, dword ptr [rdi + 0x1c] ; ret
0x0000000000436fe3 : lea eax, dword ptr [rdi + 0x1d] ; ret
0x0000000000437003 : lea eax, dword ptr [rdi + 0x1e] ; ret
0x0000000000437023 : lea eax, dword ptr [rdi + 0x1f] ; ret
0x0000000000436d9d : lea eax, dword ptr [rdi + 0xa] ; ret
0x0000000000436dbd : lea eax, dword ptr [rdi + 0xb] ; ret
0x0000000000436ddf : lea eax, dword ptr [rdi + 0xc] ; ret
0x0000000000436dff : lea eax, dword ptr [rdi + 0xd] ; ret
0x0000000000436e1f : lea eax, dword ptr [rdi + 0xe] ; ret
0x0000000000436e39 : lea eax, dword ptr [rdi + 0xf] ; ret
0x0000000000436ce7 : lea eax, dword ptr [rdi + 1] ; ret
0x0000000000436cfa : lea eax, dword ptr [rdi + 2] ; ret
0x0000000000436d05 : lea eax, dword ptr [rdi + 3] ; ret
0x0000000000436d18 : lea eax, dword ptr [rdi + 4] ; ret
0x0000000000436d2d : lea eax, dword ptr [rdi + 5] ; ret
0x0000000000436d4b : lea eax, dword ptr [rdi + 6] ; ret
0x0000000000436d57 : lea eax, dword ptr [rdi + 7] ; ret
0x0000000000436d6a : lea eax, dword ptr [rdi + 8] ; ret
0x0000000000436d7f : lea eax, dword ptr [rdi + 9] ; ret
0x000000000041d949 : lea eax, dword ptr [rdi + rax + 0x10] ; ret
0x000000000041d959 : lea eax, dword ptr [rdi + rax + 0x20] ; ret
0x000000000041d853 : lea eax, dword ptr [rdi + rax + 0x30] ; ret
0x000000000045ff15 : lea eax, dword ptr [rdi + rax - 0x20] ; vzeroupper ; ret
0x00000000004327ba : lea eax, dword ptr [rdi + rax] ; cmp byte ptr [rax], sil ; cmovne rax, rdx ; ret
0x00000000004328b7 : lea eax, dword ptr [rdi + rax] ; ret
0x000000000043912a : lea eax, dword ptr [rdi + rcx] ; sub rax, rsi ; ret
0x000000000045fbc9 : lea eax, dword ptr [rdi + rsi] ; ret
0x0000000000436cd3 : lea eax, dword ptr [rdi] ; ret
0x00000000004362bd : lea eax, dword ptr [rdx + 0xa] ; ret
0x00000000004362dd : lea eax, dword ptr [rdx + 0xb] ; ret
0x00000000004362ff : lea eax, dword ptr [rdx + 0xc] ; ret
0x000000000043631f : lea eax, dword ptr [rdx + 0xd] ; ret
0x000000000043633f : lea eax, dword ptr [rdx + 0xe] ; ret
0x00000000004361cf : lea eax, dword ptr [rdx + 0xf] ; ret
0x00000000004361f7 : lea eax, dword ptr [rdx + 1] ; ret
0x000000000043620d : lea eax, dword ptr [rdx + 2] ; ret
0x0000000000436225 : lea eax, dword ptr [rdx + 3] ; ret
0x000000000043623b : lea eax, dword ptr [rdx + 4] ; ret
0x000000000043624d : lea eax, dword ptr [rdx + 5] ; ret
0x000000000043626b : lea eax, dword ptr [rdx + 6] ; ret
0x0000000000436177 : lea eax, dword ptr [rdx + 7] ; ret
0x000000000043627d : lea eax, dword ptr [rdx + 8] ; ret
0x000000000043629d : lea eax, dword ptr [rdx + 9] ; ret
0x000000000040e27e : lea eax, dword ptr [rdx + rdi] ; ret
0x000000000043a703 : lea eax, dword ptr [rdx + rdx] ; pop rbx ; and eax, 0x7ff80000 ; ret
0x00000000004157a6 : lea eax, dword ptr [rdx - 0x10] ; ret
0x00000000004361e5 : lea eax, dword ptr [rdx] ; ret
0x0000000000416d58 : lea eax, dword ptr [rip + 0x1bb12] ; cmove rax, rdx ; ret
0x0000000000415f58 : lea eax, dword ptr [rip + 0x1cf42] ; cmove rax, rdx ; ret
0x000000000041690f : lea eax, dword ptr [rip + 0x221ab] ; cmove rax, rdx ; ret
0x0000000000416c98 : lea eax, dword ptr [rip + 0x22732] ; cmovne rax, rdx ; ret
0x0000000000416b58 : lea eax, dword ptr [rip + 0x22862] ; cmovne rax, rdx ; ret
0x00000000004169f8 : lea eax, dword ptr [rip + 0x229d2] ; cmovne rax, rdx ; ret
0x0000000000416cff : lea eax, dword ptr [rip + 0x22a7b] ; cmovne rax, rdx ; ret
0x0000000000416bbf : lea eax, dword ptr [rip + 0x22bab] ; cmovne rax, rdx ; ret
0x0000000000416a5f : lea eax, dword ptr [rip + 0x22d1b] ; cmovne rax, rdx ; ret
0x0000000000416cde : lea eax, dword ptr [rip + 0x22ecc] ; cmovne rax, rdx ; ret
0x0000000000416b9e : lea eax, dword ptr [rip + 0x22ffc] ; cmovne rax, rdx ; ret
0x0000000000415edf : lea eax, dword ptr [rip + 0x2307b] ; cmovne rax, rdx ; ret
0x0000000000416a3e : lea eax, dword ptr [rip + 0x2316c] ; cmovne rax, rdx ; ret
0x0000000000416aca : lea eax, dword ptr [rip + 0x23660] ; cmovne rax, rdx ; ret
0x0000000000416aad : lea eax, dword ptr [rip + 0x237dd] ; cmovne rax, rdx ; ret
0x0000000000416afe : lea eax, dword ptr [rip + 0x2390c] ; cmovne rax, rdx ; ret
0x000000000044e793 : lea eax, dword ptr [rip + 0x24fdc7] ; jmp rax
0x000000000043f081 : lea eax, dword ptr [rip + 0x263199] ; ret
0x000000000046fc9f : lea eax, dword ptr [rip + 0x5b] ; cmovne rax, rdx ; ret
0x0000000000416d28 : lea eax, dword ptr [rip + 0x6c52] ; cmove rax, rdx ; ret
0x0000000000416938 : lea eax, dword ptr [rip + 0x6d12] ; cmove rax, rdx ; ret
0x000000000041699c : lea eax, dword ptr [rip + 0x79ee] ; je 0x416973 ; ret
0x000000000045f1c8 : lea eax, dword ptr [rip + 0x912] ; cmove rax, rdx ; ret
0x00000000004604f8 : lea eax, dword ptr [rip + 0xa12] ; cmove rax, rdx ; ret
0x000000000045f198 : lea eax, dword ptr [rip + 0xe02] ; cmove rax, rdx ; ret
0x000000000044aa34 : lea ebp, dword ptr [rdi + rax] ; mov rdi, rbp ; call r12
0x000000000048f651 : lea ebx, dword ptr [rsi - 0x3271f33] ; test al, 0x97 ; xchg eax, esp ; ret
0x00000000004606bb : lea ecx, dword ptr [rax + 1] ; call rbx
0x0000000000460856 : lea ecx, dword ptr [rax + 4] ; lea r9, qword ptr [rsp + 0x20] ; call rbx
0x000000000045ebe4 : lea ecx, dword ptr [rbp - 0x40] ; mov rdi, r15 ; call r12
0x000000000041fe60 : lea ecx, dword ptr [rbx + rcx] ; jmp r9
0x000000000043656e : lea ecx, dword ptr [rbx + rcx] ; jmp rcx
0x00000000004157b6 : lea ecx, dword ptr [rdx - 8] ; cmovne rax, rcx ; ret
0x000000000046f060 : lea ecx, dword ptr [rdx] ; jmp 0x46f0b6
0x0000000000472bc0 : lea ecx, dword ptr [rdx] ; jmp 0x472c16
0x0000000000462147 : lea ecx, dword ptr [rsi + rcx*4] ; add eax, dword ptr [rcx + rdx] ; ret
0x000000000045e9f0 : lea ecx, dword ptr [rsp + 0x10] ; mov rdi, r12 ; call rbx
0x000000000045e90b : lea ecx, dword ptr [rsp + 0x18] ; mov rdi, r12 ; call rbx
0x00000000004607de : lea ecx, dword ptr [rsp + 0x20] ; call rbx
0x00000000004606b6 : lea ecx, dword ptr [rsp + 0x28] ; lea rcx, qword ptr [rax + 1] ; call rbx
0x00000000004609cc : lea ecx, dword ptr [rsp + 0x30] ; mov rdi, rbp ; call rbx
0x000000000044930a : lea edi, dword ptr [rax + 1] ; mov byte ptr [rax], 0x2f ; mov byte ptr [rdi], 0 ; ret
0x000000000043e3df : lea edi, dword ptr [rcx + rax + 0x20] ; jmp rdx
0x000000000044e2ea : lea edi, dword ptr [rip + 0x3dbc8] ; call 0x40a5f8
0x0000000000413bc3 : lea edi, dword ptr [rip + 0x67acf] ; call 0x40fe68
0x000000000040ebc1 : lea edx, dword ptr [rax + 0x60] ; mov rax, qword ptr [rdi] ; mov qword ptr [rdx], rax ; ret
0x000000000045e7c7 : lea edx, dword ptr [rax + rdx*4] ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x00000000004641fc : lea edx, dword ptr [rax*8 - 8] ; call 0x400431
0x000000000041ff34 : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x0000000000416df6 : lea edx, dword ptr [rdx + rcx] ; jmp r10
0x0000000000420328 : lea edx, dword ptr [rdx - 0x40] ; jmp r9
0x0000000000416a13 : lea edx, dword ptr [rip + 0x11407] ; cmovne rax, rdx ; ret
0x0000000000415ebf : lea edx, dword ptr [rip + 0x1d4cb] ; cmovne rax, rdx ; ret
0x0000000000416bef : lea edx, dword ptr [rip + 0x1df4b] ; cmovne rax, rdx ; ret
0x0000000000416984 : lea edx, dword ptr [rip + 0x209c6] ; cmovne rax, rdx ; ret
0x0000000000415e58 : lea edx, dword ptr [rip + 0x211d2] ; cmovne rax, rdx ; ret
0x0000000000415e8f : lea edx, dword ptr [rip + 0x25cb] ; cmovne rax, rdx ; ret
0x0000000000460c1a : lea edx, dword ptr [rip + 0x30] ; cmovne rax, rdx ; ret
0x0000000000415f99 : lea edx, dword ptr [rip + 0x4f71] ; cmovne rax, rdx ; ret
0x0000000000416cb3 : lea edx, dword ptr [rip + 0xe697] ; cmovne rax, rdx ; ret
0x0000000000416b73 : lea edx, dword ptr [rip + 0xe7b7] ; cmovne rax, rdx ; ret
0x0000000000477fb1 : lea esi, dword ptr [rbx + rcx*8] ; mov rsi, qword ptr [r14] ; call r12
0x000000000043944f : lea esi, dword ptr [rsi + rcx - 1] ; std ; rep movsb byte ptr [rdi], byte ptr [rsi] ; cld ; ret
0x000000000043ae63 : lea esp, dword ptr [rbp - 0x18] ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x0000000000416df5 : lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000477fb0 : lea r14, qword ptr [rbx + rcx*8] ; mov rsi, qword ptr [r14] ; call r12
0x0000000000451de0 : lea r8, qword ptr [rax - 1] ; call 0x46e096
0x000000000044e792 : lea r8, qword ptr [rip + 0x24fdc7] ; jmp rax
0x000000000041fe5f : lea r9, qword ptr [r11 + r9] ; jmp r9
0x000000000045ebe3 : lea r9, qword ptr [rbp - 0x40] ; mov rdi, r15 ; call r12
0x000000000046f05f : lea r9, qword ptr [rdx] ; jmp 0x46f0b7
0x0000000000472bbf : lea r9, qword ptr [rdx] ; jmp 0x472c17
0x000000000045e9ef : lea r9, qword ptr [rsp + 0x10] ; mov rdi, r12 ; call rbx
0x000000000045e90a : lea r9, qword ptr [rsp + 0x18] ; mov rdi, r12 ; call rbx
0x00000000004607dd : lea r9, qword ptr [rsp + 0x20] ; call rbx
0x00000000004606b5 : lea r9, qword ptr [rsp + 0x28] ; lea rcx, qword ptr [rax + 1] ; call rbx
0x00000000004609cb : lea r9, qword ptr [rsp + 0x30] ; mov rdi, rbp ; call rbx
0x000000000047513b : lea rax, qword ptr [rax + 8] ; mov qword ptr [r10], r8 ; ret
0x000000000041d913 : lea rax, qword ptr [rax + rdi + 0x10] ; ret
0x000000000041d923 : lea rax, qword ptr [rax + rdi + 0x20] ; ret
0x000000000041d8f3 : lea rax, qword ptr [rax + rdi - 0x10] ; ret
0x000000000045fccc : lea rax, qword ptr [rcx + rsi] ; ret
0x0000000000438dd3 : lea rax, qword ptr [rcx - 1] ; ret
0x0000000000436e4b : lea rax, qword ptr [rdi + 0x10] ; ret
0x0000000000436e60 : lea rax, qword ptr [rdi + 0x11] ; ret
0x0000000000436e7e : lea rax, qword ptr [rdi + 0x12] ; ret
0x0000000000436e9e : lea rax, qword ptr [rdi + 0x13] ; ret
0x0000000000436ec1 : lea rax, qword ptr [rdi + 0x14] ; ret
0x0000000000436ee0 : lea rax, qword ptr [rdi + 0x15] ; ret
0x0000000000436f00 : lea rax, qword ptr [rdi + 0x16] ; ret
0x0000000000436f20 : lea rax, qword ptr [rdi + 0x17] ; ret
0x0000000000436f43 : lea rax, qword ptr [rdi + 0x18] ; ret
0x0000000000436f68 : lea rax, qword ptr [rdi + 0x19] ; ret
0x0000000000436f86 : lea rax, qword ptr [rdi + 0x1a] ; ret
0x0000000000436fa6 : lea rax, qword ptr [rdi + 0x1b] ; ret
0x0000000000436fc2 : lea rax, qword ptr [rdi + 0x1c] ; ret
0x0000000000436fe2 : lea rax, qword ptr [rdi + 0x1d] ; ret
0x0000000000437002 : lea rax, qword ptr [rdi + 0x1e] ; ret
0x0000000000437022 : lea rax, qword ptr [rdi + 0x1f] ; ret
0x0000000000436d9c : lea rax, qword ptr [rdi + 0xa] ; ret
0x0000000000436dbc : lea rax, qword ptr [rdi + 0xb] ; ret
0x0000000000436dde : lea rax, qword ptr [rdi + 0xc] ; ret
0x0000000000436dfe : lea rax, qword ptr [rdi + 0xd] ; ret
0x0000000000436e1e : lea rax, qword ptr [rdi + 0xe] ; ret
0x0000000000436e38 : lea rax, qword ptr [rdi + 0xf] ; ret
0x0000000000436ce6 : lea rax, qword ptr [rdi + 1] ; ret
0x0000000000436cf9 : lea rax, qword ptr [rdi + 2] ; ret
0x0000000000436d04 : lea rax, qword ptr [rdi + 3] ; ret
0x0000000000436d17 : lea rax, qword ptr [rdi + 4] ; ret
0x0000000000436d2c : lea rax, qword ptr [rdi + 5] ; ret
0x0000000000436d4a : lea rax, qword ptr [rdi + 6] ; ret
0x0000000000436d56 : lea rax, qword ptr [rdi + 7] ; ret
0x0000000000436d69 : lea rax, qword ptr [rdi + 8] ; ret
0x0000000000436d7e : lea rax, qword ptr [rdi + 9] ; ret
0x000000000041d948 : lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x000000000041d958 : lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x000000000041d852 : lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x000000000045ff14 : lea rax, qword ptr [rdi + rax - 0x20] ; vzeroupper ; ret
0x00000000004328b6 : lea rax, qword ptr [rdi + rax] ; ret
0x0000000000439129 : lea rax, qword ptr [rdi + rcx] ; sub rax, rsi ; ret
0x000000000045fbc8 : lea rax, qword ptr [rdi + rsi] ; ret
0x0000000000436cd2 : lea rax, qword ptr [rdi] ; ret
0x00000000004362bc : lea rax, qword ptr [rdx + 0xa] ; ret
0x00000000004362dc : lea rax, qword ptr [rdx + 0xb] ; ret
0x00000000004362fe : lea rax, qword ptr [rdx + 0xc] ; ret
0x000000000043631e : lea rax, qword ptr [rdx + 0xd] ; ret
0x000000000043633e : lea rax, qword ptr [rdx + 0xe] ; ret
0x00000000004361ce : lea rax, qword ptr [rdx + 0xf] ; ret
0x00000000004361f6 : lea rax, qword ptr [rdx + 1] ; ret
0x000000000043620c : lea rax, qword ptr [rdx + 2] ; ret
0x0000000000436224 : lea rax, qword ptr [rdx + 3] ; ret
0x000000000043623a : lea rax, qword ptr [rdx + 4] ; ret
0x000000000043624c : lea rax, qword ptr [rdx + 5] ; ret
0x000000000043626a : lea rax, qword ptr [rdx + 6] ; ret
0x0000000000436176 : lea rax, qword ptr [rdx + 7] ; ret
0x000000000043627c : lea rax, qword ptr [rdx + 8] ; ret
0x000000000043629c : lea rax, qword ptr [rdx + 9] ; ret
0x00000000004157a5 : lea rax, qword ptr [rdx - 0x10] ; ret
0x00000000004361e4 : lea rax, qword ptr [rdx] ; ret
0x000000000043f080 : lea rax, qword ptr [rip + 0x263199] ; ret
0x000000000044aa33 : lea rbp, qword ptr [rdi + rax] ; mov rdi, rbp ; call r12
0x000000000043656d : lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000004606ba : lea rcx, qword ptr [rax + 1] ; call rbx
0x0000000000460855 : lea rcx, qword ptr [rax + 4] ; lea r9, qword ptr [rsp + 0x20] ; call rbx
0x00000000004157b5 : lea rcx, qword ptr [rdx - 8] ; cmovne rax, rcx ; ret
0x0000000000462146 : lea rcx, qword ptr [rsi + rcx*4] ; add eax, dword ptr [rcx + rdx] ; ret
0x000000000043e3de : lea rdi, qword ptr [rcx + rax + 0x20] ; jmp rdx
0x000000000044e2e9 : lea rdi, qword ptr [rip + 0x3dbc8] ; call 0x40a5f9
0x0000000000413bc2 : lea rdi, qword ptr [rip + 0x67acf] ; call 0x40fe69
0x000000000041ff33 : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000420327 : lea rdx, qword ptr [rdx - 0x40] ; jmp r9
0x000000000043944e : lea rsi, qword ptr [rsi + rcx - 1] ; std ; rep movsb byte ptr [rdi], byte ptr [rsi] ; cld ; ret
0x000000000047436b : leave ; add eax, dword ptr [rax] ; add byte ptr [rax + 1], cl ; ret
0x0000000000447c4a : leave ; call r15
0x000000000047d525 : leave ; cli ; jmp rdx
0x000000000047d469 : leave ; cli ; push qword ptr [rax - 0x38] ; cli ; jmp rax
0x0000000000438bb0 : leave ; jne 0x438ba3 ; ret
0x0000000000438c60 : leave ; jne 0x438c53 ; ret
0x0000000000438f20 : leave ; jne 0x438f17 ; sub rax, 1 ; ret
0x0000000000460eea : leave ; jne 0x460ea7 ; mov rax, rdx ; ret
0x0000000000439128 : leave ; lea rax, qword ptr [rdi + rcx] ; sub rax, rsi ; ret
0x00000000004750f0 : leave ; movsxd rax, dword ptr [r8 + rcx*4] ; add rax, r8 ; jmp rax
0x00000000004643ce : leave ; nop ; ret
0x0000000000400b53 : leave ; ret
0x00000000004607da : leave ; xor edx, edx ; lea r9, qword ptr [rsp + 0x20] ; call rbx
0x000000000047cff7 : ljmp ptr [rax - 0x57ad0006] ; cli ; call rdx
0x000000000041eb4e : lock add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000046acc7 : lock inc dword ptr [r9 + 0x10] ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004083f0 : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000438530 : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add dh, dh ; ret 0x7501
0x000000000047cdad : lodsb al, byte ptr [rsi] ; cli ; call rsi
0x000000000047cda9 : lodsb al, byte ptr [rsi] ; cli ; inc dword ptr [rsi - 0x54] ; cli ; call rsi
0x000000000047cd6d : lodsb al, byte ptr [rsi] ; cli ; jmp rax
0x00000000004941a4 : lodsb al, byte ptr [rsi] ; fcomi st(6) ; call rsp
0x000000000041c984 : lodsb al, byte ptr [rsi] ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000491cdd : lodsb al, byte ptr [rsi] ; or byte ptr [rdi + 0x26], al ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x000000000047ce21 : lodsd eax, dword ptr [rsi] ; cli ; call qword ptr [rdx]
0x000000000047cce5 : lodsd eax, dword ptr [rsi] ; cli ; call rsp
0x000000000047cce1 : lodsd eax, dword ptr [rsi] ; cli ; inc dword ptr [rbp + rbp*4 - 6] ; call rsp
0x000000000047cda1 : lodsd eax, dword ptr [rsi] ; cli ; jmp qword ptr [rsi]
0x000000000046e032 : lodsd eax, dword ptr [rsi] ; ret
0x000000000041844d : loop 0x418485 ; shr byte ptr [rcx], 0xc8 ; ret
0x000000000042705a : loop 0x427055 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000427059 : loop 0x427056 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000429b7a : loop 0x429b75 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000429b79 : loop 0x429b76 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000043a6cf : loop 0x43a6e9 ; movsxd rax, dword ptr [rsi + rdx*4] ; add rax, rsi ; jmp rax
0x000000000043de25 : loop 0x43de1c ; ret
0x000000000043de43 : loop 0x43de96 ; mov dword ptr [rdi + 0x20], edx ; mov byte ptr [rdi + 0x28], 1 ; ret
0x0000000000458cc8 : loop 0x458cce ; dec dword ptr [rcx + 0x63] ; ret
0x0000000000471c24 : loop 0x471c2f ; add rdx, rax ; jmp 0x471c38
0x000000000047221a : loop 0x472200 ; mov eax, 0x5b9066ff ; ret
0x00000000004773e9 : loop 0x477438 ; add esp, 0x18 ; ret
0x000000000049207a : loop 0x4920cf ; add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x0000000000426fca : loope 0x426fc5 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000426fc9 : loope 0x426fc6 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000429aea : loope 0x429ae5 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000429ae9 : loope 0x429ae6 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000043725b : loope 0x437265 ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xf] ; ret
0x000000000043abce : loope 0x43abc5 ; ret
0x000000000043fd5e : loope 0x43fd6b ; pop rbx ; shl eax, cl ; pop rbp ; pop r12 ; ret
0x00000000004610ee : loope 0x461103 ; je 0x461114 ; ret
0x000000000046858b : loope 0x468591 ; dec dword ptr [rcx - 0x77] ; ret
0x000000000046dec7 : loope 0x46df19 ; mov dword ptr [rdi], ecx ; ret
0x000000000046def8 : loope 0x46df4b ; mov dword ptr [rdi - 8], ecx ; ret
0x000000000046df6d : loope 0x46dfc0 ; mov dword ptr [rdi - 0x10], ecx ; ret
0x000000000047a3f6 : loope 0x47a455 ; ret
0x000000000047a9ce : loope 0x47aa30 ; pop rbp ; pop r12 ; ret
0x0000000000401d38 : loopne 0x401d9c ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000407bb7 : loopne 0x407c1d ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x000000000040dc76 : loopne 0x40dcdd ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000041252e : loopne 0x412542 ; xchg eax, esp ; ret 0x7ae9
0x0000000000420381 : loopne 0x420398 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000420380 : loopne 0x420399 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004204d1 : loopne 0x4204e8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004204d0 : loopne 0x4204e9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000420621 : loopne 0x420638 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000420620 : loopne 0x420639 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000420771 : loopne 0x420788 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000420770 : loopne 0x420789 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004208c1 : loopne 0x4208d8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004208c0 : loopne 0x4208d9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000420a11 : loopne 0x420a28 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000420a10 : loopne 0x420a29 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000420b61 : loopne 0x420b78 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000420b60 : loopne 0x420b79 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000420caf : loopne 0x420cc6 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000420cae : loopne 0x420cc7 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000420e01 : loopne 0x420e18 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000420e00 : loopne 0x420e19 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000420f51 : loopne 0x420f68 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000420f50 : loopne 0x420f69 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004210a1 : loopne 0x4210b8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004210a0 : loopne 0x4210b9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004211f1 : loopne 0x421208 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004211f0 : loopne 0x421209 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000421341 : loopne 0x421358 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000421340 : loopne 0x421359 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000421491 : loopne 0x4214a8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000421490 : loopne 0x4214a9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004215e1 : loopne 0x4215f8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004215e0 : loopne 0x4215f9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000422d51 : loopne 0x422d68 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000422d50 : loopne 0x422d69 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000422ea1 : loopne 0x422eb8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000422ea0 : loopne 0x422eb9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000422ff1 : loopne 0x423008 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000422ff0 : loopne 0x423009 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000423141 : loopne 0x423158 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000423140 : loopne 0x423159 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000423291 : loopne 0x4232a8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000423290 : loopne 0x4232a9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004233e1 : loopne 0x4233f8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004233e0 : loopne 0x4233f9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000423531 : loopne 0x423548 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000423530 : loopne 0x423549 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042367f : loopne 0x423696 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042367e : loopne 0x423697 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004237d1 : loopne 0x4237e8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004237d0 : loopne 0x4237e9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000423921 : loopne 0x423938 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000423920 : loopne 0x423939 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000423a71 : loopne 0x423a88 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000423a70 : loopne 0x423a89 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000423bc1 : loopne 0x423bd8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000423bc0 : loopne 0x423bd9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000423d11 : loopne 0x423d28 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000423d10 : loopne 0x423d29 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000423e61 : loopne 0x423e78 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000423e60 : loopne 0x423e79 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000423fb1 : loopne 0x423fc8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000423fb0 : loopne 0x423fc9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000043a63d : loopne 0x43a657 ; movsxd rcx, dword ptr [rsi + rax*4] ; add rcx, rsi ; jmp rcx
0x000000000043dc88 : loopne 0x43dc9d ; cmp eax, 4 ; je 0x43dc97 ; ret
0x000000000043fd62 : loopne 0x43fdc5 ; pop r12 ; ret
0x000000000045c239 : loopne 0x45c29d ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000045e51c : loopne 0x45e583 ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000464db4 : loopne 0x464e1a ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x0000000000464e72 : loopne 0x464ed8 ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x000000000046b643 : loopne 0x46b6a5 ; pop rbp ; pop r12 ; ret
0x000000000046b660 : loopne 0x46b6c2 ; pop rbp ; pop r12 ; ret
0x000000000046b6a0 : loopne 0x46b702 ; pop rbp ; pop r12 ; ret
0x000000000046da5d : loopne 0x46da66 ; sub eax, 1 ; ret
0x0000000000472fa4 : loopne 0x47300a ; sar rax, 3 ; pop rbp ; pop r12 ; ret
0x000000000047cd70 : loopne 0x47cd24 ; cli ; push qword ptr [rax - 0x55] ; cli ; call qword ptr [rsi]
0x000000000047d679 : loopne 0x47d67b ; inc dword ptr [rax] ; jrcxz 0x47d67f ; call qword ptr [rax]
0x000000000047d7dc : loopne 0x47d775 ; sti ; inc dword ptr [rax] ; xchg eax, ecx ; sti ; jmp qword ptr [rax]
0x000000000047d7fc : loopne 0x47d792 ; sti ; call rax
0x000000000048f654 : loopne 0x48f634 ; cld ; test al, 0x97 ; xchg eax, esp ; ret
0x0000000000497ae0 : loopne 0x497b22 ; cli ; jmp qword ptr [rcx]
0x00000000004981f0 : loopne 0x49824f ; cli ; call qword ptr [rdx]
0x0000000000499570 : loopne 0x499584 ; sti ; call qword ptr [rdi]
0x000000000049a9a0 : loopne 0x49a9ec ; cld ; jmp qword ptr [rbx]
0x000000000049c230 : loopne 0x49c21d ; std ; jmp qword ptr [rdi]
0x000000000048f06a : mov ah, 0x13 ; ret
0x0000000000495b50 : mov ah, 0x1c ; add byte ptr [rax], al ; test dil, r14b ; jmp qword ptr [rsi]
0x0000000000442e90 : mov ah, 0x24 ; cwde ; add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret
0x000000000048f510 : mov ah, 0xa5 ; ret
0x000000000047cce0 : mov ah, 0xad ; cli ; inc dword ptr [rbp + rbp*4 - 6] ; call rsp
0x000000000047d1d8 : mov ah, 0xd4 ; cli ; inc dword ptr [rsp + rdx*8 - 6] ; call rsp
0x000000000040504d : mov ah, 0xff ; dec dword ptr [rax - 0x77] ; ret 0xf748
0x000000000048ee64 : mov ah, bl ; push rsi ; ret
0x000000000040ad93 : mov al, 0 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000475236 : mov al, 0 ; add byte ptr [rax], al ; ret
0x0000000000447c44 : mov al, 0 ; add byte ptr [rax], al ; xor r9d, r9d ; call r15
0x000000000043ce78 : mov al, 0x4c ; mov edi, ebp ; mov rsi, qword ptr [rax] ; call r14
0x000000000047d82c : mov al, 0x95 ; sti ; call rax
0x000000000047d850 : mov al, 0x96 ; sti ; call rax
0x000000000047d870 : mov al, 0x97 ; sti ; call rax
0x0000000000499bd0 : mov al, 0xa5 ; sti ; call qword ptr [rbx]
0x000000000047cd44 : mov al, 0xb0 ; cli ; inc dword ptr [rax - 0x50] ; cli ; call rax
0x000000000049dc00 : mov al, 0xc4 ; std ; jmp qword ptr [rax]
0x0000000000432c7f : mov al, 0xc5 ; std ; xlatb ; ret
0x000000000047d23c : mov al, 0xd7 ; cli ; inc dword ptr [rax - 0x29] ; cli ; call rax
0x0000000000491316 : mov al, 0xee ; fcmovb st(0), st(3) ; ret
0x000000000047cd49 : mov al, 0xfa ; call rax
0x000000000047cd45 : mov al, 0xfa ; inc dword ptr [rax - 0x50] ; cli ; call rax
0x000000000047ce05 : mov al, 0xfa ; jmp qword ptr [rdx]
0x000000000047ccc9 : mov al, 0xfa ; jmp rsp
0x0000000000434a56 : mov al, byte ptr [rcx + 2] ; mov byte ptr [rdx + 2], al ; mov rax, rdi ; ret
0x0000000000434a74 : mov al, byte ptr [rcx + 4] ; mov byte ptr [rdx + 4], al ; mov rax, rdi ; ret
0x00000000004361e0 : mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; lea rax, qword ptr [rdx] ; ret
0x0000000000434a30 : mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x0000000000434a40 : mov ax, word ptr [rcx] ; mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x0000000000427d91 : mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x000000000044800f : mov bh, 0x47 ; or cl, byte ptr [rax + 0x39] ; ret 0x1176
0x00000000004370f8 : mov bh, 0x48 ; lea eax, dword ptr [rdi + 7] ; ret
0x000000000046af0d : mov bh, 0x93 ; and eax, dword ptr [rax] ; mov qword ptr [rsi], rax ; ret
0x0000000000490344 : mov bh, 0xb4 ; mov edi, dword ptr [rdx] ; ret
0x000000000040b549 : mov bh, 0xd8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0x2b40
0x0000000000416b75 : mov bh, 0xe7 ; add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x0000000000491a53 : mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x00000000004389ee : mov bl, 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000460eec : mov bl, 0x48 ; mov eax, edx ; ret
0x0000000000491423 : mov bl, 0x8e ; ret 0xdcd9
0x000000000045136d : mov bl, 0xd8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0x2b40
0x000000000040be1b : mov bl, 0xe8 ; jmp rdi
0x000000000040f904 : mov byte ptr [rax + rsi], bh ; ret
0x000000000040f903 : mov byte ptr [rax + rsi], dil ; ret
0x0000000000469335 : mov byte ptr [rax - 0x77], cl ; ret
0x00000000004492ca : mov byte ptr [rax], 0x2f ; mov byte ptr [rdi], 0 ; pop rbx ; pop r14 ; ret
0x000000000044930d : mov byte ptr [rax], 0x2f ; mov byte ptr [rdi], 0 ; ret
0x0000000000400d24 : mov byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000049c775 : mov byte ptr [rax], al ; add byte ptr [rax], bl ; xor bh, ch ; jmp qword ptr [rdx]
0x000000000049c78d : mov byte ptr [rax], al ; add byte ptr [rax], dh ; xor bh, ch ; jmp rdx
0x000000000045722e : mov byte ptr [rbp - 0x910], bh ; jmp qword ptr [rdx + rax*8]
0x000000000045722d : mov byte ptr [rbp - 0x910], dil ; jmp qword ptr [rdx + rax*8]
0x0000000000498224 : mov byte ptr [rbx], al ; add byte ptr [rax], bl ; pop rbx ; cli ; call qword ptr [rcx]
0x0000000000499888 : mov byte ptr [rbx], bl ; sti ; call qword ptr [rax]
0x0000000000449ac3 : mov byte ptr [rcx + rax - 0x3a], cl ; jmp rsi
0x00000000004750f4 : mov byte ptr [rcx + rax - 0x40], cl ; jmp rax
0x0000000000403d86 : mov byte ptr [rcx - 0x75], 0x47 ; add al, 0xeb ; ret
0x000000000040553f : mov byte ptr [rcx], 0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043cb31 : mov byte ptr [rcx], 0x75 ; or esi, ebx ; ret
0x00000000004455e7 : mov byte ptr [rcx], 9 ; ret 0x3948
0x000000000044d1db : mov byte ptr [rcx], dh ; or dword ptr [rax], eax ; add byte ptr [rcx - 0x77], cl ; ret
0x000000000040f9ed : mov byte ptr [rcx], dl ; je 0x40fa39 ; mov qword ptr [rsi], rcx ; ret
0x0000000000436e48 : mov byte ptr [rdi + 0x10], dh ; lea rax, qword ptr [rdi + 0x10] ; ret
0x00000000004367b8 : mov byte ptr [rdi + 0x10], dh ; ret
0x0000000000436ebe : mov byte ptr [rdi + 0x14], dh ; lea rax, qword ptr [rdi + 0x14] ; ret
0x000000000043680e : mov byte ptr [rdi + 0x14], dh ; ret
0x0000000000436f40 : mov byte ptr [rdi + 0x18], dh ; lea rax, qword ptr [rdi + 0x18] ; ret
0x0000000000436890 : mov byte ptr [rdi + 0x18], dh ; ret
0x000000000043de12 : mov byte ptr [rdi + 0x28], 1 ; ret
0x0000000000436cf6 : mov byte ptr [rdi + 2], dh ; lea rax, qword ptr [rdi + 2] ; ret
0x00000000004366d6 : mov byte ptr [rdi + 2], dh ; ret
0x0000000000436d12 : mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 4] ; ret
0x00000000004366f2 : mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x0000000000436733 : mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x00000000004219ab : mov byte ptr [rdi - 1], dl ; ret
0x000000000049ab58 : mov byte ptr [rdi - 4], cl ; jmp rdx
0x000000000040a6d0 : mov byte ptr [rdi], 0 ; mov rax, rdi ; ret
0x00000000004492cd : mov byte ptr [rdi], 0 ; pop rbx ; pop r14 ; ret
0x0000000000449310 : mov byte ptr [rdi], 0 ; ret
0x000000000042aad2 : mov byte ptr [rdi], cl ; ret
0x000000000043a3b5 : mov byte ptr [rdi], cl ; vzeroupper ; ret
0x0000000000436cd0 : mov byte ptr [rdi], dh ; lea rax, qword ptr [rdi] ; ret
0x00000000004366b0 : mov byte ptr [rdi], dh ; ret
0x0000000000427e03 : mov byte ptr [rdi], dl ; ret
0x000000000049d124 : mov byte ptr [rdx + 0x7cf80000], dl ; std ; call qword ptr [rdx]
0x0000000000436209 : mov byte ptr [rdx + 2], al ; lea rax, qword ptr [rdx + 2] ; ret
0x0000000000434a59 : mov byte ptr [rdx + 2], al ; mov rax, rdi ; ret
0x0000000000436237 : mov byte ptr [rdx + 4], al ; lea rax, qword ptr [rdx + 4] ; ret
0x0000000000434a77 : mov byte ptr [rdx + 4], al ; mov rax, rdi ; ret
0x00000000004361e2 : mov byte ptr [rdx], al ; lea rax, qword ptr [rdx] ; ret
0x0000000000434a32 : mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x0000000000475c60 : mov byte ptr [rip + 0x22e469], 8 ; ret
0x0000000000400a76 : mov byte ptr [rip + 0x2a2783], 1 ; pop rbp ; ret
0x000000000046f3cf : mov byte ptr [rsi], al ; jne 0x46f3bf ; mov rax, rsi ; ret
0x000000000046f453 : mov byte ptr [rsi], al ; jne 0x46f437 ; mov rax, rsi ; ret
0x0000000000469334 : mov byte ptr gs:[rax - 0x77], cl ; ret
0x000000000048ee62 : mov ch, 0x31 ; mov ah, bl ; push rsi ; ret
0x00000000004901a3 : mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x000000000049153f : mov ch, 0x99 ; in eax, 0xff ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x0000000000491eea : mov ch, 0xab ; ret
0x000000000041f6c6 : mov ch, 6 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000444485 : mov ch, ah ; add al, byte ptr [rax] ; add bh, dh ; ret 0xf800
0x000000000047ce01 : mov cl, 0xfa ; call qword ptr [rdx + 0x22fffab0]
0x000000000047cd7d : mov cl, 0xfa ; call qword ptr [rsi]
0x000000000047cd3d : mov cl, 0xfa ; jmp qword ptr [rax]
0x000000000047de9c : mov cl, bl ; sti ; jmp rdx
0x000000000044a457 : mov cl, byte ptr [rax + 0x39] ; ror byte ptr [rax + 0xf], 1 ; ret 0x8b41
0x000000000042d2b5 : mov cl, byte ptr [rbx - 0x37d67dfc] ; ret
0x0000000000416df4 : mov cl, byte ptr [rdi - 0x73] ; adc al, 0xa ; jmp r10
0x0000000000491312 : mov cl, byte ptr [rip - 0x114f09b0] ; fcmovb st(0), st(3) ; ret
0x000000000041e514 : mov cl, byte ptr [rsi + rdx - 1] ; sub eax, ecx ; ret
0x000000000042aad0 : mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000004610eb : mov cl, dl ; and cl, 0xf ; je 0x461117 ; ret
0x00000000004915cc : mov cs, edi ; ret 0x8b36
0x000000000043183e : mov cs, word ptr [rip - 0x7cb80000] ; ret 0xe910
0x00000000004366d0 : mov cx, word ptr [rsi] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x000000000047831f : mov dh, 0 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000040bdcd : mov dh, 0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000040aadf : mov dh, 0 ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000040bdab : mov dh, 0 ; ret
0x000000000045f1fe : mov dh, 0x12 ; cli ; dec dword ptr [rax + 1] ; ret
0x0000000000427e01 : mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x000000000041e064 : mov dh, 0x16 ; sub eax, edx ; ret
0x00000000004062a4 : mov dh, 0x17 ; test dl, dl ; jne 0x40628a ; ret
0x0000000000405ea9 : mov dh, 0x24 ; or cl, ch ; ret 0xfffc
0x00000000004061c9 : mov dh, 0x40 ; or dword ptr [rax + rax*8 - 0x38b79f8c], eax ; ret 0xfff0
0x00000000004385c1 : mov dh, 0x47 ; cmc ; movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x00000000004385b1 : mov dh, 0x47 ; hlt ; movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x0000000000438581 : mov dh, 0x47 ; int1 ; movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x00000000004385a1 : mov dh, 0x47 ; movzx edx, byte ptr [rsi - 0xd] ; sub eax, edx ; ret
0x0000000000438591 : mov dh, 0x47 ; movzx edx, byte ptr [rsi - 0xe] ; sub eax, edx ; ret
0x000000000044c898 : mov dh, 0x47 ; or al, 0x83 ; ret
0x0000000000444597 : mov dh, 0x48 ; dec dword ptr [rax - 0x7d] ; ret 0x4801
0x0000000000490302 : mov dh, 0x4e ; ret 0x474c
0x000000000046d6a6 : mov dh, 0x53 ; and eax, dword ptr [rax] ; mov qword ptr [rax], rdx ; pop rbx ; ret
0x00000000004385c5 : mov dh, 0x56 ; cmc ; sub eax, edx ; ret
0x00000000004385b5 : mov dh, 0x56 ; hlt ; sub eax, edx ; ret
0x0000000000438585 : mov dh, 0x56 ; int1 ; sub eax, edx ; ret
0x000000000045702d : mov dh, 0x56 ; or al, 0x83 ; ret
0x0000000000456fba : mov dh, 0x56 ; or al, 0xf6 ; ret 0xf08
0x0000000000438595 : mov dh, 0x56 ; sub eax, edx ; ret
0x00000000004056ca : mov dh, 0x73 ; add dword ptr [rax - 0x77], ecx ; ret
0x0000000000464f4b : mov dh, 0x87 ; adc eax, 0x89000003 ; ret 0xe8c0
0x000000000047aa86 : mov dh, 0xa0 ; stc ; push rbx ; ret
0x000000000047cfb0 : mov dh, 0xa1 ; cli ; jmp qword ptr [rsi]
0x000000000047cda8 : mov dh, 0xac ; cli ; inc dword ptr [rsi - 0x54] ; cli ; call rsi
0x0000000000461f32 : mov dh, 0xc0 ; add rsp, 0x58 ; ret
0x0000000000476366 : mov dh, 0xc0 ; movsxd rax, dword ptr [r12 + rax*4] ; add rax, r12 ; jmp rax
0x000000000045c034 : mov dh, 0xc0 ; movsxd rax, dword ptr [rcx + rax*4] ; add rax, rcx ; jmp rax
0x000000000045bf80 : mov dh, 0xc0 ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x000000000040c250 : mov dh, 0xc0 ; neg eax ; pop rbx ; ret
0x0000000000472d9d : mov dh, 0xc0 ; neg eax ; ret
0x000000000046f85a : mov dh, 0xc0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004404b1 : mov dh, 0xc0 ; xor edx, edx ; add eax, 1 ; push rax ; call rbx
0x000000000043a6a1 : mov dh, 0xc1 ; pop rbx ; ret
0x000000000040ca32 : mov dh, 0xc5 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000491544 : mov dh, 0xc7 ; ret 0xe71f
0x00000000004750ef : mov dh, 0xc9 ; movsxd rax, dword ptr [r8 + rcx*4] ; add rax, r8 ; jmp rax
0x000000000041e08a : mov dh, 0xd2 ; sub eax, edx ; ret
0x000000000047d2a0 : mov dh, 0xd3 ; cli ; inc dword ptr [rsi - 0x2d] ; cli ; call rsi
0x000000000047689f : mov dh, 0xdb ; movsxd rax, dword ptr [r9 + r11*4] ; add rax, r9 ; jmp rax
0x00000000004394c9 : mov dh, 0xe ; mov byte ptr [rdi], cl ; ret
0x00000000004181a1 : mov dh, 0xe ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x000000000041e524 : mov dh, 0xe ; sub eax, ecx ; ret
0x0000000000464de5 : mov dh, 0xf9 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000405d05 : mov dh, 0xfa ; movsxd rdi, dword ptr [r10 + rdi*4] ; add rdi, r10 ; jmp rdi
0x000000000040aaf1 : mov dh, 2 ; ret
0x000000000041e521 : mov dh, 7 ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x000000000041e061 : mov dh, 7 ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x00000000004181a4 : mov dh, 7 ; sub eax, ecx ; ret
0x000000000043abcc : mov dh, byte ptr [rcx - 0xd] ; ret
0x0000000000478ea7 : mov dl, 0x22 ; add byte ptr [rax + 0x39], cl ; ret
0x000000000047ce0c : mov dl, 0xaf ; cli ; inc dword ptr [rdx - 0x51] ; cli ; call rdx
0x000000000047d304 : mov dl, 0xd6 ; cli ; inc dword ptr [rdx - 0x2a] ; cli ; call rdx
0x000000000048d5b9 : mov dl, 0xfd ; jmp qword ptr [rax]
0x0000000000421a30 : mov dl, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x00000000004481b2 : mov dword ptr [r12], edx ; jmp 0x44817f
0x000000000042aac6 : mov dword ptr [r9 - 2], ecx ; ret
0x000000000042aab1 : mov dword ptr [r9 - 4], ecx ; ret
0x000000000043ddc1 : mov dword ptr [rax + 0x10], ecx ; mov qword ptr [rax + 8], rdx ; ret
0x000000000045db69 : mov dword ptr [rax + 0x10], edx ; mov qword ptr [rax + 0x40], rcx ; ret
0x000000000045dba9 : mov dword ptr [rax + 0x10], esi ; mov qword ptr [rax + 0x40], rcx ; ret
0x000000000045e138 : mov dword ptr [rax + 0x18], edx ; mov dword ptr [rbx], ecx ; xor eax, eax ; pop rbx ; ret
0x000000000045db6d : mov dword ptr [rax + 0x40], ecx ; ret
0x000000000045e1ba : mov dword ptr [rax + 0x48], 0 ; pop rbx ; ret
0x000000000045ecbc : mov dword ptr [rax + 0x60], 0 ; call 0x43af09
0x000000000040df95 : mov dword ptr [rax + 8], 0 ; ret
0x000000000043ddc5 : mov dword ptr [rax + 8], edx ; ret
0x000000000045429d : mov dword ptr [rax], 0x16 ; mov eax, edx ; ret
0x000000000041391b : mov dword ptr [rax], 0xc ; jmp 0x4138ed
0x0000000000413608 : mov dword ptr [rax], 0xc ; xor eax, eax ; ret
0x00000000004618a8 : mov dword ptr [rax], 2 ; xor eax, eax ; ret
0x0000000000473d38 : mov dword ptr [rax], edi ; call 0x400441
0x000000000046fa1d : mov dword ptr [rax], edi ; pop rbx ; ret
0x000000000046f96d : mov dword ptr [rax], edx ; add rsp, 8 ; ret
0x000000000046d6ab : mov dword ptr [rax], edx ; pop rbx ; ret
0x00000000004774d2 : mov dword ptr [rax], edx ; ret
0x000000000045e7cb : mov dword ptr [rax], edx ; xor eax, eax ; ret
0x0000000000471b28 : mov dword ptr [rbp - 0x68], eax ; call 0x43dd65
0x0000000000468be1 : mov dword ptr [rbp - 0xe0], ebx ; call r10
0x00000000004681e1 : mov dword ptr [rbp - 0xf8], ebx ; call r10
0x0000000000448712 : mov dword ptr [rbx + 0x10], 0 ; pop rbx ; ret
0x000000000040a7a7 : mov dword ptr [rbx + 0x10], eax ; mov rax, rbx ; pop rbx ; ret
0x000000000046d59e : mov dword ptr [rbx + 0x10], eax ; pop rax ; pop rdx ; pop rbx ; ret
0x000000000040af5f : mov dword ptr [rbx + 0x10], eax ; xor eax, eax ; pop rbx ; ret
0x000000000046b48e : mov dword ptr [rbx + 0x10], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000046d2a3 : mov dword ptr [rbx + 0x18], eax ; pop rax ; pop rdx ; pop rbx ; ret
0x0000000000472dc5 : mov dword ptr [rbx + 0x18], eax ; pop rbx ; ret
0x0000000000472e79 : mov dword ptr [rbx + 0x20], eax ; pop rbx ; ret
0x000000000044a6ed : mov dword ptr [rbx + 0x40], esi ; xor eax, eax ; pop rbx ; ret
0x000000000040d99d : mov dword ptr [rbx + 0x40], esp ; mov dword ptr [rbx], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040d611 : mov dword ptr [rbx + 0x50], 0 ; pop rbx ; ret
0x000000000040c052 : mov dword ptr [rbx + 0x70], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000045dbf4 : mov dword ptr [rbx + 0x74], eax ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000448727 : mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x000000000046ad72 : mov dword ptr [rbx + 8], edx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004701d3 : mov dword ptr [rbx], eax ; add rsp, 0x10 ; pop rbx ; ret
0x000000000040d92c : mov dword ptr [rbx], eax ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000474919 : mov dword ptr [rbx], eax ; pop rax ; pop rdx ; pop rbx ; ret
0x000000000040d9a0 : mov dword ptr [rbx], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000415d90 : mov dword ptr [rbx], eax ; xor eax, eax ; pop rbx ; ret
0x000000000040a6a5 : mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000045e13b : mov dword ptr [rbx], ecx ; xor eax, eax ; pop rbx ; ret
0x000000000040839e : mov dword ptr [rcx + 0x130], edx ; ret
0x0000000000400cde : mov dword ptr [rcx + rax*2], 0x72f2a30f ; ret 0xfe83
0x000000000044722c : mov dword ptr [rcx - 0x77], eax ; ret 0x8ce9
0x000000000042aac7 : mov dword ptr [rcx - 2], ecx ; ret
0x000000000042aab2 : mov dword ptr [rcx - 4], ecx ; ret
0x000000000042aaa1 : mov dword ptr [rcx - 8], ecx ; ret
0x000000000043bfb4 : mov dword ptr [rcx], eax ; mov eax, 0xffffffff ; jmp 0x43bf87
0x000000000043b8da : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000040fc14 : mov dword ptr [rdi + 0x10], eax ; pop rbx ; pop rbp ; ret
0x0000000000436e5d : mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x11] ; ret
0x0000000000436e9b : mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x13] ; ret
0x0000000000436f1d : mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x17] ; ret
0x000000000043680b : mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x000000000043688d : mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x18], dh ; ret
0x00000000004367cd : mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000004368d0 : mov dword ptr [rdi + 0x10], edx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x00000000004368f0 : mov dword ptr [rdi + 0x10], edx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000004368b1 : mov dword ptr [rdi + 0x10], edx ; mov word ptr [rdi + 0x18], cx ; ret
0x0000000000436f83 : mov dword ptr [rdi + 0x17], ecx ; lea rax, qword ptr [rdi + 0x1a] ; ret
0x00000000004368d3 : mov dword ptr [rdi + 0x17], ecx ; ret
0x000000000040d4f3 : mov dword ptr [rdi + 0x18], eax ; mov qword ptr [rdi + 8], rax ; ret
0x0000000000436f65 : mov dword ptr [rdi + 0x18], ecx ; lea rax, qword ptr [rdi + 0x19] ; ret
0x0000000000436fa3 : mov dword ptr [rdi + 0x18], ecx ; lea rax, qword ptr [rdi + 0x1b] ; ret
0x00000000004368b5 : mov dword ptr [rdi + 0x18], ecx ; ret
0x000000000043de0f : mov dword ptr [rdi + 0x20], edx ; mov byte ptr [rdi + 0x28], 1 ; ret
0x000000000043de31 : mov dword ptr [rdi + 0x20], esi ; ret
0x000000000040fc11 : mov dword ptr [rdi + 0x24], ebp ; mov dword ptr [rdi + 0x10], eax ; pop rbx ; pop rbp ; ret
0x0000000000467285 : mov dword ptr [rdi + 0x300], eax ; ret
0x0000000000467257 : mov dword ptr [rdi + 0x308], eax ; ret
0x000000000040d523 : mov dword ptr [rdi + 0x48], edx ; mov qword ptr [rdi + 8], rax ; ret
0x000000000040fc59 : mov dword ptr [rdi + 0x60], ecx ; ret
0x000000000040fce6 : mov dword ptr [rdi + 0x880], eax ; ret
0x0000000000477511 : mov dword ptr [rdi + 0x98], esi ; ret
0x0000000000436edd : mov dword ptr [rdi + 0xe], ecx ; lea rax, qword ptr [rdi + 0x15] ; ret
0x000000000043682d : mov dword ptr [rdi + 0xe], ecx ; ret
0x0000000000436e7b : mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x12] ; ret
0x0000000000436efd : mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x16] ; ret
0x00000000004367eb : mov dword ptr [rdi + 0xf], ecx ; ret
0x0000000000427c45 : mov dword ptr [rdi + 1], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000427a88 : mov dword ptr [rdi + 1], edx ; mov qword ptr [rdi], rcx ; ret
0x0000000000427d28 : mov dword ptr [rdi + 1], edx ; mov word ptr [rdi], cx ; ret
0x0000000000427bd5 : mov dword ptr [rdi + 2], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000427a18 : mov dword ptr [rdi + 2], edx ; mov qword ptr [rdi], rcx ; ret
0x0000000000436d47 : mov dword ptr [rdi + 3], edx ; lea rax, qword ptr [rdi + 6] ; ret
0x0000000000427b65 : mov dword ptr [rdi + 3], edx ; mov dword ptr [rdi], ecx ; ret
0x00000000004279a8 : mov dword ptr [rdi + 3], edx ; mov qword ptr [rdi], rcx ; ret
0x0000000000436717 : mov dword ptr [rdi + 3], edx ; ret
0x0000000000436d29 : mov dword ptr [rdi + 4], edx ; lea rax, qword ptr [rdi + 5] ; ret
0x0000000000427938 : mov dword ptr [rdi + 4], edx ; mov qword ptr [rdi], rcx ; ret
0x0000000000436709 : mov dword ptr [rdi + 4], edx ; ret
0x0000000000436ddb : mov dword ptr [rdi + 5], edx ; lea rax, qword ptr [rdi + 0xc] ; ret
0x00000000004278c8 : mov dword ptr [rdi + 5], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000043677b : mov dword ptr [rdi + 5], edx ; ret
0x0000000000436dfb : mov dword ptr [rdi + 6], edx ; lea rax, qword ptr [rdi + 0xd] ; ret
0x0000000000427858 : mov dword ptr [rdi + 6], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000043678b : mov dword ptr [rdi + 6], edx ; ret
0x0000000000436d99 : mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xa] ; ret
0x0000000000436e1b : mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xe] ; ret
0x00000000004277e8 : mov dword ptr [rdi + 7], edx ; mov qword ptr [rdi], rcx ; ret
0x0000000000436759 : mov dword ptr [rdi + 7], edx ; ret
0x000000000046f30e : mov dword ptr [rdi + 8], eax ; mov eax, 2 ; ret
0x000000000040d4f7 : mov dword ptr [rdi + 8], eax ; ret
0x000000000046e004 : mov dword ptr [rdi + 8], ecx ; ret
0x0000000000436db9 : mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 0xb] ; ret
0x0000000000436d7b : mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 9] ; ret
0x000000000046efc4 : mov dword ptr [rdi + 8], edx ; mov eax, ecx ; adc eax, eax ; ret
0x000000000043674b : mov dword ptr [rdi + 8], edx ; ret
0x000000000043a25b : mov dword ptr [rdi + rdx - 2], ecx ; mov word ptr [rdi], cx ; ret
0x00000000004394f5 : mov dword ptr [rdi + rdx - 2], ecx ; mov word ptr [rdi], si ; ret
0x000000000043a253 : mov dword ptr [rdi + rdx - 4], ecx ; mov dword ptr [rdi], ecx ; ret
0x000000000043a3d5 : mov dword ptr [rdi + rdx - 4], ecx ; mov dword ptr [rdi], ecx ; vzeroupper ; ret
0x00000000004394e5 : mov dword ptr [rdi + rdx - 4], ecx ; mov dword ptr [rdi], esi ; ret
0x000000000043a24b : mov dword ptr [rdi + rdx - 8], ecx ; mov qword ptr [rdi], rcx ; ret
0x00000000004394d7 : mov dword ptr [rdi + rdx - 8], ecx ; mov qword ptr [rdi], rsi ; ret
0x00000000004774bc : mov dword ptr [rdi + rsi*8], edx ; ret
0x00000000004216f5 : mov dword ptr [rdi - 0x10], ebx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000421733 : mov dword ptr [rdi - 0x10], ebx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000046df6f : mov dword ptr [rdi - 0x10], ecx ; ret
0x0000000000421a7c : mov dword ptr [rdi - 0xa], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000427298 : mov dword ptr [rdi - 0xa], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000421c5c : mov dword ptr [rdi - 0xb], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000427218 : mov dword ptr [rdi - 0xb], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000421e4c : mov dword ptr [rdi - 0xc], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000427198 : mov dword ptr [rdi - 0xc], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042201d : mov dword ptr [rdi - 0xd], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000427109 : mov dword ptr [rdi - 0xd], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000042221d : mov dword ptr [rdi - 0xe], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000427079 : mov dword ptr [rdi - 0xe], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000042241d : mov dword ptr [rdi - 0xf], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000426fe9 : mov dword ptr [rdi - 0xf], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000421dfd : mov dword ptr [rdi - 2], ecx ; ret
0x0000000000421c15 : mov dword ptr [rdi - 2], edx ; ret
0x0000000000421df9 : mov dword ptr [rdi - 3], edx ; mov word ptr [rdi - 2], cx ; ret
0x00000000004221d9 : mov dword ptr [rdi - 4], ecx ; ret
0x00000000004218af : mov dword ptr [rdi - 4], edx ; ret
0x00000000004221d6 : mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004223d6 : mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004225d6 : mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004216f9 : mov dword ptr [rdi - 8], ecx ; ret
0x0000000000421737 : mov dword ptr [rdi - 8], edx ; ret
0x00000000004218ac : mov dword ptr [rdi - 9], eax ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004219a8 : mov dword ptr [rdi - 9], ecx ; mov byte ptr [rdi - 1], dl ; ret
0x00000000004218f4 : mov dword ptr [rdi - 9], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000427318 : mov dword ptr [rdi - 9], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000406800 : mov dword ptr [rdi], eax ; jmp 0x4067c9
0x000000000040697f : mov dword ptr [rdi], eax ; jmp 0x406949
0x000000000046def4 : mov dword ptr [rdi], eax ; shl r9, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x000000000046dffe : mov dword ptr [rdi], eax ; shr r9, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x00000000004560da : mov dword ptr [rdi], ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000040f79f : mov dword ptr [rdi], ebx ; sub dword ptr [rax], eax ; ret
0x0000000000436d15 : mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 4] ; ret
0x0000000000436d67 : mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 8] ; ret
0x0000000000436cf4 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dh ; lea rax, qword ptr [rdi + 2] ; ret
0x00000000004366d4 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dh ; ret
0x0000000000436d45 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; lea rax, qword ptr [rdi + 6] ; ret
0x0000000000436715 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; ret
0x0000000000436d97 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xa] ; ret
0x0000000000436757 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 7], edx ; ret
0x0000000000436db7 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 0xb] ; ret
0x0000000000436767 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 8], edx ; ret
0x0000000000439227 : mov dword ptr [rdi], ecx ; mov dword ptr [rsi - 4], ecx ; ret
0x0000000000436778 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 5], rdx ; ret
0x0000000000436788 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 6], rdx ; ret
0x0000000000436798 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 7], rdx ; ret
0x0000000000436706 : mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; ret
0x0000000000436748 : mov dword ptr [rdi], ecx ; mov word ptr [rdi + 8], dx ; ret
0x0000000000439233 : mov dword ptr [rdi], ecx ; mov word ptr [rsi - 2], cx ; ret
0x00000000004277ec : mov dword ptr [rdi], ecx ; ret
0x000000000043a3cf : mov dword ptr [rdi], ecx ; vzeroupper ; ret
0x0000000000436ce4 : mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 1] ; ret
0x0000000000436d02 : mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 3] ; ret
0x0000000000436d54 : mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 7] ; ret
0x0000000000427af4 : mov dword ptr [rdi], edx ; ret
0x000000000042aaaf : mov dword ptr [rdi], esi ; mov dword ptr [r9 - 4], ecx ; ret
0x000000000046f196 : mov dword ptr [rdi], esi ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x000000000042aa9e : mov dword ptr [rdi], esi ; mov qword ptr [r9 - 8], rcx ; ret
0x000000000042aac3 : mov dword ptr [rdi], esi ; mov word ptr [r9 - 2], cx ; ret
0x00000000004394dc : mov dword ptr [rdi], esi ; ret
0x000000000040a825 : mov dword ptr [rdx + 0x130], edi ; pop rbx ; ret
0x0000000000436267 : mov dword ptr [rdx + 3], eax ; lea rax, qword ptr [rdx + 6] ; ret
0x0000000000434a97 : mov dword ptr [rdx + 3], eax ; mov rax, rdi ; ret
0x0000000000436249 : mov dword ptr [rdx + 4], eax ; lea rax, qword ptr [rdx + 5] ; ret
0x0000000000434a89 : mov dword ptr [rdx + 4], eax ; mov rax, rdi ; ret
0x00000000004362fb : mov dword ptr [rdx + 5], eax ; lea rax, qword ptr [rdx + 0xc] ; ret
0x0000000000436279 : mov dword ptr [rdx + 5], eax ; lea rax, qword ptr [rdx + 8] ; ret
0x0000000000434aa9 : mov dword ptr [rdx + 5], eax ; mov rax, rdi ; ret
0x000000000043631b : mov dword ptr [rdx + 6], eax ; lea rax, qword ptr [rdx + 0xd] ; ret
0x0000000000436299 : mov dword ptr [rdx + 6], eax ; lea rax, qword ptr [rdx + 9] ; ret
0x0000000000434ab9 : mov dword ptr [rdx + 6], eax ; mov rax, rdi ; ret
0x00000000004362b9 : mov dword ptr [rdx + 7], eax ; lea rax, qword ptr [rdx + 0xa] ; ret
0x000000000043633b : mov dword ptr [rdx + 7], eax ; lea rax, qword ptr [rdx + 0xe] ; ret
0x0000000000434ac9 : mov dword ptr [rdx + 7], eax ; mov rax, rdi ; ret
0x00000000004362d9 : mov dword ptr [rdx + 8], eax ; lea rax, qword ptr [rdx + 0xb] ; ret
0x00000000004361cb : mov dword ptr [rdx + 8], eax ; lea rax, qword ptr [rdx + 0xf] ; ret
0x0000000000434a1b : mov dword ptr [rdx + 8], eax ; mov rax, rdi ; ret
0x000000000040ec60 : mov dword ptr [rdx + 8], eax ; xor eax, eax ; ret
0x00000000004361f4 : mov dword ptr [rdx], eax ; lea rax, qword ptr [rdx + 1] ; ret
0x0000000000436222 : mov dword ptr [rdx], eax ; lea rax, qword ptr [rdx + 3] ; ret
0x0000000000436174 : mov dword ptr [rdx], eax ; lea rax, qword ptr [rdx + 7] ; ret
0x000000000043b96a : mov dword ptr [rdx], eax ; mov eax, 0xffffffff ; ret
0x000000000046f198 : mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x000000000046f2f3 : mov dword ptr [rdx], eax ; mov eax, 2 ; ret
0x000000000043bc1a : mov dword ptr [rdx], eax ; mov rax, -1 ; ret
0x00000000004349c4 : mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x000000000046f9fd : mov dword ptr [rdx], eax ; pop rbx ; ret
0x000000000040ebc8 : mov dword ptr [rdx], eax ; ret
0x000000000041604c : mov dword ptr [rdx], ebx ; mov rax, r10 ; pop rbx ; ret
0x000000000043cba5 : mov dword ptr [rdx], edi ; pop rbx ; pop rbp ; ret
0x000000000047a3ef : mov dword ptr [rip + 0x22981b], ebx ; jne 0x47a3e1 ; pop rbx ; ret
0x000000000046f528 : mov dword ptr [rip + 0x234a5a], eax ; ret
0x000000000046ada5 : mov dword ptr [rip + 0x239525], eax ; ret
0x000000000044a518 : mov dword ptr [rip + 0x2584ba], edx ; je 0x44a531 ; ret
0x000000000043f0b6 : mov dword ptr [rip + 0x26193c], edx ; pop rbx ; ret
0x00000000004144a6 : mov dword ptr [rip + 0x28d2d4], eax ; ret
0x0000000000410c5c : mov dword ptr [rip + 0x290b1e], eax ; ret
0x000000000040f874 : mov dword ptr [rip + 0x291eee], eax ; ret
0x000000000040f864 : mov dword ptr [rip + 0x291ef6], eax ; ret
0x000000000040f852 : mov dword ptr [rip + 0x291ef8], edx ; ret
0x000000000040f814 : mov dword ptr [rip + 0x291efe], eax ; ret
0x000000000040f7ee : mov dword ptr [rip + 0x291f0c], eax ; ret
0x000000000040f804 : mov dword ptr [rip + 0x291f16], eax ; ret
0x000000000040f7be : mov dword ptr [rip + 0x291f44], eax ; ret
0x000000000040f79d : mov dword ptr [rip + 0x291f89], eax ; ret
0x000000000040f7d3 : mov dword ptr [rip + 0x2944db], eax ; ret
0x000000000040eb5b : mov dword ptr [rsi + 0x60], ebx ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000451993 : mov dword ptr [rsi + 0xf660003], esp ; outsd dx, dword ptr [rsi] ; ret 0x290f
0x0000000000439236 : mov dword ptr [rsi - 2], ecx ; ret
0x0000000000439229 : mov dword ptr [rsi - 4], ecx ; ret
0x000000000044ae33 : mov dword ptr [rsi - 5], edx ; dec dword ptr [rbp - 0x7b] ; dec dword ptr [rax - 0x77] ; ret
0x0000000000464b21 : mov dword ptr [rsi], 0xffffffff ; xor eax, eax ; ret
0x00000000004774fe : mov dword ptr [rsi], eax ; mov rax, qword ptr [rdi + 0x98] ; ret
0x000000000046af12 : mov dword ptr [rsi], eax ; ret
0x000000000040f9f2 : mov dword ptr [rsi], ecx ; ret
0x000000000046a25b : mov dword ptr [rsi], edi ; mov rax, r8 ; pop rbx ; ret
0x000000000041254c : mov dword ptr [rsp + 0x10], ebx ; mov qword ptr [rsp + 8], rax ; call rsi
0x00000000004125cf : mov dword ptr [rsp + 0x10], edx ; mov qword ptr [rsp + 8], rax ; call rcx
0x0000000000406773 : mov dword ptr [rsp + 0x20], edx ; call rax
0x00000000004125d4 : mov dword ptr [rsp + 8], eax ; call rcx
0x0000000000412551 : mov dword ptr [rsp + 8], eax ; call rsi
0x000000000040926e : mov dword ptr [rsp + 8], ecx ; mov rdi, r15 ; call rax
0x000000000040b4e2 : mov dword ptr [rsp], ecx ; mov rdi, rbx ; call rax
0x00000000004481b3 : mov dword ptr [rsp], edx ; jmp 0x44817e
0x000000000045429c : mov dword ptr fs:[rax], 0x16 ; mov eax, edx ; ret
0x000000000041391a : mov dword ptr fs:[rax], 0xc ; jmp 0x4138ee
0x0000000000413607 : mov dword ptr fs:[rax], 0xc ; xor eax, eax ; ret
0x00000000004618a7 : mov dword ptr fs:[rax], 2 ; xor eax, eax ; ret
0x000000000046205c : mov dword ptr fs:[rax], edx ; xor eax, eax ; ret
0x000000000043bfb3 : mov dword ptr fs:[rcx], eax ; mov eax, 0xffffffff ; jmp 0x43bf88
0x000000000043b8d9 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000043b969 : mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; ret
0x00000000004394e4 : mov dword ptr ss:[rdi + rdx - 4], ecx ; mov dword ptr [rdi], esi ; ret
0x0000000000421c10 : mov dx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x00000000004366c0 : mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x0000000000400b4e : mov eax, 0 ; leave ; ret
0x000000000043a71b : mov eax, 0x10 ; pop rbx ; ret
0x0000000000415da0 : mov eax, 0x16 ; ret
0x000000000043a729 : mov eax, 0x20 ; pop rbx ; ret
0x000000000046fec0 : mov eax, 0x27 ; syscall ; ret
0x000000000043a722 : mov eax, 0x30 ; pop rbx ; ret
0x000000000043a737 : mov eax, 0x40 ; pop rbx ; ret
0x000000000048f45b : mov eax, 0x45155e93 ; ret 0x591c
0x000000000047273c : mov eax, 0x489066ff ; add esp, 8 ; ret
0x0000000000448068 : mov eax, 0x5b000000 ; pop r12 ; ret
0x000000000047221c : mov eax, 0x5b9066ff ; ret
0x000000000043a730 : mov eax, 0x60 ; pop rbx ; ret
0x0000000000461c50 : mov eax, 0x66 ; syscall ; ret
0x0000000000461c70 : mov eax, 0x68 ; syscall ; ret
0x0000000000461c60 : mov eax, 0x6b ; syscall ; ret
0x0000000000461c80 : mov eax, 0x6c ; syscall ; ret
0x000000000043a70d : mov eax, 0x80 ; pop rbx ; ret
0x000000000049ab54 : mov eax, 0x8800006c ; cld ; jmp rdx
0x00000000004716ea : mov eax, 0x89fd8945 ; ret 0xe283
0x0000000000415db8 : mov eax, 0xc ; pop rbx ; ret
0x00000000004616b0 : mov eax, 0xc9 ; syscall ; ret
0x000000000043dbf2 : mov eax, 0xca ; syscall ; pop rdx ; pop rsi ; ret
0x00000000004799b7 : mov eax, 0xd88948ff ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040be15 : mov eax, 0xffffffff ; jmp 0x40bdd7
0x000000000043bfb6 : mov eax, 0xffffffff ; jmp 0x43bf85
0x0000000000456358 : mov eax, 0xffffffff ; mov qword ptr [rdi], rsi ; ret
0x0000000000409f61 : mov eax, 0xffffffff ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000409ce7 : mov eax, 0xffffffff ; pop rbx ; pop rbp ; ret
0x000000000040af73 : mov eax, 0xffffffff ; pop rbx ; ret
0x0000000000409cab : mov eax, 0xffffffff ; ret
0x000000000046f175 : mov eax, 1 ; mov qword ptr [rdi], rsi ; ret
0x000000000040de92 : mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043afe8 : mov eax, 1 ; pop rbx ; pop rbp ; ret
0x000000000045e0cf : mov eax, 1 ; pop rbx ; ret
0x000000000045603f : mov eax, 1 ; ret
0x0000000000460f03 : mov eax, 2 ; ret
0x0000000000461161 : mov eax, 3 ; ret
0x000000000047837f : mov eax, 4 ; jne 0x4783a8 ; ret
0x0000000000461171 : mov eax, 4 ; ret
0x0000000000461181 : mov eax, 5 ; ret
0x0000000000461191 : mov eax, 6 ; ret
0x00000000004611a1 : mov eax, 7 ; ret
0x000000000043a714 : mov eax, 8 ; pop rbx ; ret
0x0000000000440500 : mov eax, 8 ; ret
0x0000000000403d87 : mov eax, dword ptr [r15 + 4] ; jmp 0x403d55
0x0000000000409801 : mov eax, dword ptr [rax + 0x20] ; jmp rax
0x000000000045e884 : mov eax, dword ptr [rax + 0x4c] ; ret
0x000000000040ded8 : mov eax, dword ptr [rax + 0x68] ; test rax, rax ; jne 0x40ded9 ; ret
0x000000000046d161 : mov eax, dword ptr [rax + 8] ; ret
0x0000000000465ef9 : mov eax, dword ptr [rax + rax] ; add byte ptr [rbx - 0x76b7ffbb], cl ; ret 0x314c
0x0000000000448fe7 : mov eax, dword ptr [rax + rbp*8] ; test rax, rax ; je 0x448ff9 ; call rax
0x000000000047a680 : mov eax, dword ptr [rax + rbp*8] ; test rax, rax ; je 0x47a692 ; call rax
0x000000000044a55f : mov eax, dword ptr [rax + rdi*8 + 0x80] ; ret
0x000000000044f411 : mov eax, dword ptr [rax + rdi*8] ; jmp rax
0x0000000000459e90 : mov eax, dword ptr [rax + rsi*8] ; jmp rax
0x0000000000475139 : mov eax, dword ptr [rax] ; lea rax, qword ptr [rax + 8] ; mov qword ptr [r10], r8 ; ret
0x0000000000475121 : mov eax, dword ptr [rax] ; mov qword ptr [r10], r8 ; ret
0x000000000046b7f9 : mov eax, dword ptr [rax] ; ret
0x0000000000468120 : mov eax, dword ptr [rbp - 0xb8] ; add rax, r11 ; call rax
0x0000000000467ef1 : mov eax, dword ptr [rbx + 0x10] ; add rax, qword ptr [r14] ; call rax
0x000000000040d65d : mov eax, dword ptr [rbx + 0x18] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x000000000046fa19 : mov eax, dword ptr [rbx + 0x18] ; mov qword ptr [rax], rdi ; pop rbx ; ret
0x000000000040dbb9 : mov eax, dword ptr [rbx + 0x40] ; add rsp, 0x20 ; pop rbx ; jmp rax
0x0000000000471784 : mov eax, dword ptr [rbx] ; add rax, qword ptr [rdx + 8] ; call rax
0x0000000000434a94 : mov eax, dword ptr [rcx + 3] ; mov dword ptr [rdx + 3], eax ; mov rax, rdi ; ret
0x0000000000434aa6 : mov eax, dword ptr [rcx + 5] ; mov dword ptr [rdx + 5], eax ; mov rax, rdi ; ret
0x0000000000434ab6 : mov eax, dword ptr [rcx + 6] ; mov dword ptr [rdx + 6], eax ; mov rax, rdi ; ret
0x0000000000434ac6 : mov eax, dword ptr [rcx + 7] ; mov dword ptr [rdx + 7], eax ; mov rax, rdi ; ret
0x0000000000434ad6 : mov eax, dword ptr [rcx + 8] ; mov dword ptr [rdx + 8], eax ; mov rax, rdi ; ret
0x000000000042f6aa : mov eax, dword ptr [rcx + rax*4] ; mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x0000000000430f82 : mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x0000000000436220 : mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; lea rax, qword ptr [rdx + 3] ; ret
0x0000000000434a60 : mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x0000000000436171 : mov eax, dword ptr [rcx] ; mov qword ptr [rdx], rax ; lea rax, qword ptr [rdx + 7] ; ret
0x00000000004349c1 : mov eax, dword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x00000000004361f1 : mov eax, dword ptr [rcx] ; mov word ptr [rdx], ax ; lea rax, qword ptr [rdx + 1] ; ret
0x0000000000434a41 : mov eax, dword ptr [rcx] ; mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x000000000046a1ea : mov eax, dword ptr [rcx] ; ret
0x00000000004687a6 : mov eax, dword ptr [rdi + 0x10] ; add rax, qword ptr [r14] ; call rax
0x000000000045e73e : mov eax, dword ptr [rdi + 0x10] ; sar rdx, 2 ; sub eax, edx ; ret
0x000000000040ebd0 : mov eax, dword ptr [rdi + 0x10] ; sub eax, dword ptr [rsi + 0x10] ; ret
0x000000000040ebf8 : mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x000000000047a93d : mov eax, dword ptr [rdi + 0x20] ; test rax, rax ; je 0x47a954 ; call rax
0x000000000045e881 : mov eax, dword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x000000000040eee1 : mov eax, dword ptr [rdi + 0x68] ; ret
0x0000000000477491 : mov eax, dword ptr [rdi + 0x90] ; ret
0x00000000004774e1 : mov eax, dword ptr [rdi + 0x98] ; ret
0x0000000000477521 : mov eax, dword ptr [rdi + 0xa0] ; ret
0x0000000000477581 : mov eax, dword ptr [rdi + 0xa8] ; ret
0x0000000000477571 : mov eax, dword ptr [rdi + 0xb0] ; ret
0x0000000000477531 : mov eax, dword ptr [rdi + 0xb8] ; ret
0x0000000000403d88 : mov eax, dword ptr [rdi + 4] ; jmp 0x403d54
0x00000000004726e1 : mov eax, dword ptr [rdi] ; cmp rax, rsi ; je 0x4726f8 ; ret
0x000000000040f7d1 : mov eax, dword ptr [rdi] ; mov dword ptr [rip + 0x2944db], eax ; ret
0x000000000040ebc5 : mov eax, dword ptr [rdi] ; mov qword ptr [rdx], rax ; ret
0x000000000040f871 : mov eax, dword ptr [rdi] ; mov qword ptr [rip + 0x291eee], rax ; ret
0x000000000040f861 : mov eax, dword ptr [rdi] ; mov qword ptr [rip + 0x291ef6], rax ; ret
0x000000000040f811 : mov eax, dword ptr [rdi] ; mov qword ptr [rip + 0x291efe], rax ; ret
0x000000000040f801 : mov eax, dword ptr [rdi] ; mov qword ptr [rip + 0x291f16], rax ; ret
0x00000000004797e5 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x4797f7 ; ret
0x0000000000479800 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x479817 ; ret
0x0000000000479a30 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x479a47 ; ret
0x000000000043abc7 : mov eax, dword ptr [rdx + rax*4] ; sub eax, dword ptr [rdx + rcx*4] ; je 0x43abb9 ; ret
0x000000000042d2b6 : mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x000000000045e2a7 : mov eax, dword ptr [rdx] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000040ebb1 : mov eax, dword ptr [rdx] ; test rax, rax ; jne 0x40ebb0 ; ret
0x00000000004700b0 : mov eax, dword ptr [rip + 0x23472a] ; ret
0x000000000046af0b : mov eax, dword ptr [rip + 0x2393b7] ; mov qword ptr [rsi], rax ; ret
0x000000000046ae9a : mov eax, dword ptr [rip + 0x239430] ; ret
0x0000000000447f11 : mov eax, dword ptr [rip + 0x25be81] ; ret
0x0000000000440601 : mov eax, dword ptr [rip + 0x264241] ; ret
0x000000000040eec1 : mov eax, dword ptr [rip + 0x292179] ; ret
0x00000000004783d2 : mov eax, dword ptr [rsi + 0x10] ; ret
0x0000000000475261 : mov eax, dword ptr [rsi + 0xa8] ; ret
0x0000000000475234 : mov eax, dword ptr [rsi + 0xb0] ; ret
0x0000000000475251 : mov eax, dword ptr [rsi + 0xb8] ; ret
0x00000000004783f1 : mov eax, dword ptr [rsi + 8] ; ret
0x000000000044f074 : mov eax, dword ptr [rsi + rax*8] ; jmp rax
0x0000000000477556 : mov eax, dword ptr [rsp + 0x10] ; add rsp, 0x28 ; ret
0x00000000004010d3 : mov eax, dword ptr [rsp + 0x18] ; call rax
0x0000000000444fa3 : mov eax, dword ptr [rsp + 0x20] ; call rax
0x000000000043bf8a : mov eax, dword ptr [rsp + 0xc] ; add rsp, 0x10 ; pop rbx ; ret
0x00000000004067e9 : mov eax, dword ptr [rsp + 8] ; call rax
0x000000000040676e : mov eax, dword ptr [rsp + 8] ; mov qword ptr [rsp + 0x20], r10 ; call rax
0x0000000000474cca : mov eax, dword ptr [rsp] ; add rsp, 0x38 ; ret
0x000000000043bea7 : mov eax, dword ptr [rsp] ; jmp 0x43be4a
0x000000000046b7f8 : mov eax, dword ptr fs:[rax] ; ret
0x0000000000410b9f : mov eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000415303 : mov eax, eax ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000041518b : mov eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000046a25e : mov eax, eax ; pop rbx ; ret
0x000000000043a752 : mov eax, eax ; ret
0x0000000000461524 : mov eax, eax ; shr rax, 2 ; vzeroupper ; ret
0x0000000000460371 : mov eax, eax ; vzeroupper ; ret
0x000000000040845b : mov eax, ebp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000004748e7 : mov eax, ebp ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000043cdee : mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000401ae1 : mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000409c52 : mov eax, ebp ; pop rbx ; pop rbp ; ret
0x000000000046f103 : mov eax, ebx ; adc rax, rdx ; pop rbp ; pop rbx ; ret
0x0000000000472e46 : mov eax, ebx ; jne 0x472e5d ; add rsp, 0x30 ; pop rbx ; ret
0x000000000040c1f2 : mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004085d5 : mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040fe34 : mov eax, ebx ; pop rbx ; pop rbp ; ret
0x000000000040a7ab : mov eax, ebx ; pop rbx ; ret
0x000000000046efc7 : mov eax, ecx ; adc eax, eax ; ret
0x0000000000456447 : mov eax, ecx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000045638c : mov eax, ecx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000451885 : mov eax, ecx ; ret
0x000000000040a6a3 : mov eax, edi ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000410464 : mov eax, edi ; pop rbp ; pop r12 ; ret
0x000000000040a6d4 : mov eax, edi ; ret
0x0000000000414932 : mov eax, edx ; pop rbp ; pop r12 ; ret
0x0000000000461a1b : mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000455f1b : mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004082f1 : mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000041604f : mov eax, edx ; pop rbx ; ret
0x0000000000433389 : mov eax, edx ; ret
0x000000000046da26 : mov eax, esi ; mov rsp, r8 ; mov rbp, r9 ; jmp rdx
0x000000000040bbda : mov eax, esi ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000045ce44 : mov eax, esi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000408774 : mov eax, esi ; pop rbx ; ret
0x000000000046f3d4 : mov eax, esi ; ret
0x000000000040dc75 : mov eax, esp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000401d37 : mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000046b642 : mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000451884 : mov eax, r9d ; ret
0x000000000044ff7d : mov ebp, 0x89000010 ; ret 0x349
0x0000000000487864 : mov ebp, 0xc000000f ; sldt word ptr [rax] ; ret
0x000000000048e91d : mov ebp, 0xc1c0bfbe ; ret 0xc4c3
0x000000000045fb38 : mov ebp, 0xf80148c0 ; ret
0x000000000045fdbc : mov ebp, 0xf80148c6 ; ret
0x0000000000490086 : mov ebp, 0xfb67d10d ; ret
0x000000000045722f : mov ebp, 0xfffff6f0 ; jmp qword ptr [rdx + rax*8]
0x0000000000456cde : mov ebp, 0xfffff730 ; call rax
0x000000000044c41c : mov ebp, 0xfffff758 ; call rax
0x0000000000459c25 : mov ebp, 0xfffffae8 ; add byte ptr [rcx - 0x77], al ; ret
0x00000000004779b3 : mov ebp, dword ptr [rbp] ; mov rsp, rcx ; ret
0x0000000000478bfa : mov ebp, dword ptr [rsp + 8] ; jmp 0x478c18
0x000000000045d0d9 : mov ebp, eax ; jmp 0x45d0a2
0x000000000046da2c : mov ebp, ecx ; jmp rdx
0x000000000043f0c1 : mov ebx, 0x8900022b ; ret
0x000000000043dc24 : mov ebx, 0xafb8341 ; je 0x43dc33 ; ret
0x000000000048d5b5 : mov ebx, 0xb288fffd ; std ; jmp qword ptr [rax]
0x000000000048e91b : mov ebx, 0xbfbebdbc ; rol cl, 0xc2 ; ret
0x0000000000416d5b : mov ebx, 0xf480001 ; ret 0x66c3
0x0000000000449f56 : mov ebx, edi ; test rax, rax ; je 0x449f66 ; call rax
0x000000000046f7cb : mov ecx, 0x1f0fff ; pop rbx ; ret
0x0000000000461d9c : mov ecx, 0x48000000 ; add esp, 0x78 ; ret
0x000000000048e919 : mov ecx, 0xbdbcbbba ; mov esi, 0xc2c1c0bf ; ret
0x000000000042aaac : mov ecx, dword ptr [rcx - 4] ; mov dword ptr [rdi], esi ; mov dword ptr [r9 - 4], ecx ; ret
0x000000000041fe5e : mov ecx, dword ptr [rdi - 0x73] ; or al, 0xb ; jmp r9
0x000000000045e85b : mov ecx, dword ptr [rdx + 0x48] ; cmp ecx, dword ptr [rdx + 0x4c] ; cmove eax, ecx ; ret
0x000000000042d2b3 : mov ecx, dword ptr [rdx + rcx*4] ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x00000000004221d3 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004223d3 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004225d3 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004366f0 : mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x0000000000436731 : mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x0000000000427c43 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 1], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000427bd3 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 2], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000427b63 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 3], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000427a85 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 1], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000427a15 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 2], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000004279a5 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 3], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000427935 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 4], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000004278c5 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 5], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000427855 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 6], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000004277e5 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 7], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000427d25 : mov ecx, dword ptr [rsi] ; mov word ptr [rdi + 1], dx ; mov word ptr [rdi], cx ; ret
0x00000000004366d1 : mov ecx, dword ptr [rsi] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x000000000046d257 : mov ecx, dword ptr [rsp + 0x40] ; add rsp, 0x48 ; jmp qword ptr [rax]
0x000000000046d1e5 : mov ecx, dword ptr [rsp + 0x40] ; add rsp, 0x58 ; jmp qword ptr [rax]
0x000000000045ee91 : mov ecx, eax ; jmp 0x45ee5b
0x000000000044043b : mov ecx, ebp ; call rbx
0x000000000040de10 : mov ecx, edx ; pop rbx ; xor edx, edx ; jmp rax
0x00000000004394b2 : mov ecx, edx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000040de4a : mov ecx, edx ; xor edx, edx ; jmp rax
0x0000000000460b25 : mov ecx, esi ; call rbx
0x000000000044dcea : mov edi, 0x440f48c0 ; ret 0xe2e9
0x00000000004009fc : mov edi, 0x6a2af0 ; jmp rax
0x00000000004771e6 : mov edi, 1 ; call r14
0x000000000047713c : mov edi, 1 ; call rax
0x0000000000477eac : mov edi, 1 ; jmp rax
0x0000000000406f64 : mov edi, dword ptr [rax + 0x20] ; call rdx
0x000000000044c41b : mov edi, dword ptr [rbp - 0x8a8] ; call rax
0x0000000000456cdd : mov edi, dword ptr [rbp - 0x8d0] ; call rax
0x0000000000477831 : mov edi, dword ptr [rbp - 8] ; leave ; ret
0x00000000004067e5 : mov edi, dword ptr [rbp] ; mov rax, qword ptr [rsp + 8] ; call rax
0x000000000046aee6 : mov edi, dword ptr [rdi + 8] ; test rdi, rdi ; jne 0x46aec9 ; ret
0x0000000000490346 : mov edi, dword ptr [rdx] ; ret
0x000000000047910f : mov edi, dword ptr [rsp + 0x10] ; call r14
0x000000000043ccb9 : mov edi, dword ptr [rsp + 0x10] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x000000000046d904 : mov edi, dword ptr [rsp + 0x18] ; mov rdx, qword ptr [rsp + 0x10] ; call rdx
0x0000000000442760 : mov edi, dword ptr [rsp + 0x20] ; call r15
0x000000000044399a : mov edi, dword ptr [rsp + 0x30] ; call r14
0x000000000044382f : mov edi, dword ptr [rsp + 0x30] ; call r15
0x00000000004430ff : mov edi, dword ptr [rsp + 0x30] ; call rbx
0x0000000000442b0b : mov edi, dword ptr [rsp + 0x38] ; call r14
0x00000000004447e6 : mov edi, dword ptr [rsp + 0x38] ; call r15
0x00000000004443be : mov edi, dword ptr [rsp + 0x38] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x000000000044545b : mov edi, dword ptr [rsp + 0x40] ; call r15
0x0000000000444f9e : mov edi, dword ptr [rsp + 0x40] ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x0000000000446344 : mov edi, dword ptr [rsp + 0x48] ; call r14
0x0000000000443bf4 : mov edi, dword ptr [rsp + 0x48] ; call r15
0x00000000004010ce : mov edi, dword ptr [rsp + 0xc] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x000000000040dbeb : mov edi, dword ptr [rsp + 8] ; add rsp, 0x20 ; pop rbx ; jmp rax
0x000000000044aa4c : mov edi, dword ptr [rsp + 8] ; call r12
0x000000000040d686 : mov edi, dword ptr [rsp] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x0000000000477ffc : mov edi, dword ptr [rsp] ; mov rdx, qword ptr [rbp] ; call r12
0x00000000004492f9 : mov edi, eax ; mov byte ptr [rdi], 0 ; pop rbx ; pop r14 ; ret
0x000000000040180e : mov edi, ebp ; call qword ptr [r15 + rbx*8]
0x000000000047417a : mov edi, ebp ; call qword ptr [rax]
0x0000000000474016 : mov edi, ebp ; call qword ptr [rbx]
0x000000000044aa38 : mov edi, ebp ; call r12
0x0000000000478eec : mov edi, ebp ; call r14
0x0000000000415316 : mov edi, ebp ; call rax
0x00000000004609d1 : mov edi, ebp ; call rbx
0x0000000000460b22 : mov edi, ebp ; mov r9, r14 ; call rbx
0x0000000000406839 : mov edi, ebp ; mov rax, qword ptr [rsp + 8] ; call rax
0x000000000043ce7a : mov edi, ebp ; mov rsi, qword ptr [rax] ; call r14
0x00000000004488db : mov edi, ebx ; call 0x414b44
0x0000000000447eca : mov edi, ebx ; call r12
0x00000000004407e9 : mov edi, ebx ; call r15
0x000000000040b4e6 : mov edi, ebx ; call rax
0x000000000040b19a : mov edi, ebx ; pop rbx ; pop rbp ; jmp rax
0x000000000045df1f : mov edi, ebx ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x000000000040b20a : mov edi, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; jmp rax
0x0000000000414f8f : mov edi, edi ; call 0x411234
0x000000000045ebe8 : mov edi, edi ; call r12
0x0000000000409273 : mov edi, edi ; call rax
0x000000000044ab44 : mov edi, edi ; mov rdx, r13 ; call r12
0x000000000046f451 : mov edi, edx ; mov byte ptr [rsi], al ; jne 0x46f439 ; mov rax, rsi ; ret
0x00000000004135ef : mov edi, edx ; pop rbx ; jmp 0x40f885
0x0000000000414124 : mov edi, esi ; call 0x4103b4
0x000000000044aa77 : mov edi, esi ; call r12
0x0000000000440ddb : mov edi, esi ; mov rsi, qword ptr [rbp - 0x70] ; call rsi
0x0000000000477f04 : mov edi, esp ; call r15
0x000000000045e910 : mov edi, esp ; call rbx
0x000000000043a656 : mov edx, 0 ; cmove rax, rdx ; pop rbx ; ret
0x000000000040a826 : mov edx, 0x130 ; pop rbx ; ret
0x000000000043da96 : mov edx, 0x64 ; test eax, eax ; cmove eax, edx ; ret
0x000000000044a51a : mov edx, 0x74002584 ; or bl, dh ; ret
0x0000000000465793 : mov edx, 0x870 ; call 0x401a27
0x00000000004657d0 : mov edx, 0x871 ; call 0x401a27
0x000000000043f0a2 : mov edx, 0x8900022b ; ret
0x000000000048f7fe : mov edx, 0xcac982a4 ; call 0xffffffffaf0b967e
0x0000000000442597 : mov edx, 0xffffffff ; cmovs eax, edx ; ret
0x000000000046a17c : mov edx, 1 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x0000000000478000 : mov edx, dword ptr [rbp] ; call r12
0x000000000046f9f9 : mov edx, dword ptr [rbx + 0x18] ; mov qword ptr [rdx], rax ; pop rbx ; ret
0x0000000000430f7f : mov edx, dword ptr [rcx + rdx*4] ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x000000000042f6ad : mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x000000000046fa0d : mov edx, dword ptr [rdi + 0x30] ; mov qword ptr [rax], rdx ; pop rbx ; ret
0x0000000000478ee9 : mov edx, dword ptr [rdi] ; mov rdi, r13 ; call r14
0x0000000000436712 : mov edx, dword ptr [rsi + 3] ; mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; ret
0x0000000000436703 : mov edx, dword ptr [rsi + 4] ; mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; ret
0x0000000000436753 : mov edx, dword ptr [rsi + 7] ; mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 7], edx ; ret
0x0000000000436763 : mov edx, dword ptr [rsi + 8] ; mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 8], edx ; ret
0x0000000000421c11 : mov edx, dword ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x0000000000421fd0 : mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000421861 : mov edx, dword ptr [rsi - 8] ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000436d00 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 3] ; ret
0x0000000000427cb0 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x0000000000436d51 : mov edx, dword ptr [rsi] ; mov qword ptr [rdi], rdx ; lea rax, qword ptr [rdi + 7] ; ret
0x0000000000427af1 : mov edx, dword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x0000000000436ce1 : mov edx, dword ptr [rsi] ; mov word ptr [rdi], dx ; lea rax, qword ptr [rdi + 1] ; ret
0x00000000004366c1 : mov edx, dword ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x000000000046d909 : mov edx, dword ptr [rsp + 0x10] ; call rdx
0x0000000000416455 : mov edx, dword ptr [rsp + 0x18] ; jmp 0x416423
0x0000000000477139 : mov edx, dword ptr [rsp] ; mov edi, 1 ; call rax
0x000000000046256b : mov edx, eax ; jmp 0x462552
0x000000000044ab47 : mov edx, ebp ; call r12
0x0000000000474175 : mov edx, ebp ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [rax]
0x0000000000474011 : mov edx, ebp ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [rbx]
0x0000000000473fd1 : mov edx, ebp ; mov rsi, r12 ; mov edi, ebp ; call rax
0x000000000044aa71 : mov edx, ebp ; mov rsi, rbp ; mov rdi, r14 ; call r12
0x000000000044abb4 : mov edx, ebp ; mov rsi, rbp ; mov rdi, rbx ; call r12
0x000000000044aa8c : mov edx, ebp ; mov rsi, rbx ; mov rdi, rbp ; call r12
0x000000000043a178 : mov edx, edi ; rep stosb byte ptr [rdi], al ; mov rax, rdx ; ret
0x0000000000462149 : mov es, word ptr [rbx] ; add al, 0x11 ; ret
0x00000000004492fa : mov esi, 0x415b0007 ; pop rsi ; ret
0x0000000000441902 : mov esi, 0x83480147 ; ret
0x000000000048e91e : mov esi, 0xc2c1c0bf ; ret
0x000000000043a5e4 : mov esi, 0xf000000 ; lahf ; ret 0xea81
0x000000000045c3f4 : mov esi, 1 ; mov rdi, rbx ; call rax
0x000000000043ca28 : mov esi, 2 ; jmp rax
0x000000000043ca3b : mov esi, 3 ; pop rbp ; pop r12 ; jmp rax
0x0000000000448eec : mov esi, dword ptr [rax + rdi*8] ; test rsi, rsi ; je 0x448efe ; call rsi
0x000000000043ce7d : mov esi, dword ptr [rax] ; call r14
0x000000000047782d : mov esi, dword ptr [rbp - 0x10] ; mov r15, qword ptr [rbp - 8] ; leave ; ret
0x0000000000440dde : mov esi, dword ptr [rbp - 0x70] ; call rsi
0x0000000000451ddd : mov esi, dword ptr [rbp - 0x80] ; lea r8, qword ptr [rax - 1] ; call 0x46e099
0x000000000047910c : mov esi, dword ptr [rdi] ; mov rdi, qword ptr [rsp + 0x10] ; call r14
0x0000000000477fb5 : mov esi, dword ptr [rsi] ; call r12
0x00000000004394e3 : mov esi, dword ptr [rsi] ; mov dword ptr [rdi + rdx - 4], ecx ; mov dword ptr [rdi], esi ; ret
0x000000000044ad5e : mov esi, dword ptr [rsp + 0x10] ; mov rdi, rbp ; call r12
0x0000000000414be1 : mov esi, dword ptr [rsp + 0x18] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x0000000000440436 : mov esi, dword ptr [rsp + 0x18] ; mov r9, r13 ; call rbx
0x0000000000415311 : mov esi, dword ptr [rsp + 0x28] ; mov rdi, rbp ; call rax
0x00000000004430fa : mov esi, dword ptr [rsp + 0x38] ; mov rdi, qword ptr [rsp + 0x30] ; call rbx
0x0000000000468e3c : mov esi, eax ; call 0x4150e4
0x000000000046a1e3 : mov esi, eax ; cmp rcx, rsi ; jne 0x46a1c9 ; mov eax, dword ptr [rcx] ; ret
0x000000000044aa49 : mov esi, ebp ; mov rdi, qword ptr [rsp + 8] ; call r12
0x000000000044aa74 : mov esi, ebp ; mov rdi, r14 ; call r12
0x000000000044ab41 : mov esi, ebp ; mov rdi, r15 ; mov rdx, r13 ; call r12
0x000000000044abb7 : mov esi, ebp ; mov rdi, rbx ; call r12
0x0000000000453376 : mov esi, ebp ; mov rdi, rbx ; call rax
0x000000000044aa8f : mov esi, ebx ; mov rdi, rbp ; call r12
0x00000000004135ec : mov esi, ebx ; mov rdi, rdx ; pop rbx ; jmp 0x40f888
0x0000000000477eaa : mov esi, edi ; mov edi, 1 ; jmp rax
0x000000000044c418 : mov esi, edi ; mov rdi, qword ptr [rbp - 0x8a8] ; call rax
0x0000000000477f01 : mov esi, esi ; mov rdi, r12 ; call r15
0x0000000000474178 : mov esi, esp ; mov edi, ebp ; call qword ptr [rax]
0x0000000000474014 : mov esi, esp ; mov edi, ebp ; call qword ptr [rbx]
0x0000000000473fd4 : mov esi, esp ; mov edi, ebp ; call rax
0x0000000000414121 : mov esi, esp ; mov rdi, r14 ; call 0x4103b7
0x0000000000414f8c : mov esi, esp ; mov rdi, r15 ; call 0x411237
0x000000000045df1c : mov esi, esp ; mov rdi, rbx ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x0000000000405a9b : mov esp, 0x24448b48 ; sub byte ptr [rax - 0x7d], cl ; ret
0x000000000041d8f1 : mov esp, 0x448d48c0 ; cmp al, dh ; ret
0x000000000041d921 : mov esp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x000000000041d911 : mov esp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x00000000004027a6 : mov esp, 0x8024 ; add byte ptr [rax - 0x39], cl ; ret
0x0000000000408152 : mov esp, 0x8824 ; add al, ch ; ret
0x000000000040e232 : mov esp, 0x8c48348 ; pop rbx ; pop rbp ; ret
0x0000000000404ff3 : mov esp, 0x9024 ; add al, ch ; ret 0xffb4
0x0000000000433033 : mov esp, 0xd00148d2 ; sub rax, rdi ; ret
0x000000000045cfe4 : mov esp, 0xd824 ; add byte ptr [rax - 0x39], cl ; ret 0x2b40
0x0000000000499258 : mov esp, 0xf4000053 ; hlt ; cli ; jmp rax
0x000000000041d9db : mov esp, 0xf80148c0 ; add rax, rcx ; ret
0x000000000041d901 : mov esp, 0xf80148c0 ; ret
0x000000000041ddf2 : mov esp, 0xf80148c0 ; vzeroupper ; ret
0x000000000043d641 : mov esp, dword ptr [rsi + 0x26] ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000400756 : mov esp, eax ; call 0x43a5d8
0x000000000040061f : mov esp, eax ; call 0x43aa18
0x000000000046da29 : mov esp, eax ; mov rbp, r9 ; jmp rdx
0x0000000000471761 : mov esp, eax ; nop dword ptr [rax + rax] ; call qword ptr [rbx]
0x00000000004779b7 : mov esp, ecx ; ret
0x0000000000475123 : mov qword ptr [r10], r8 ; ret
0x00000000004067ff : mov qword ptr [r15], rax ; jmp 0x4067ca
0x000000000040697e : mov qword ptr [r15], rax ; jmp 0x40694a
0x000000000042aaa0 : mov qword ptr [r9 - 8], rcx ; ret
0x000000000043ddc0 : mov qword ptr [rax + 0x10], rcx ; mov qword ptr [rax + 8], rdx ; ret
0x000000000045db68 : mov qword ptr [rax + 0x10], rdx ; mov qword ptr [rax + 0x40], rcx ; ret
0x000000000045dba8 : mov qword ptr [rax + 0x10], rsi ; mov qword ptr [rax + 0x40], rcx ; ret
0x000000000045e137 : mov qword ptr [rax + 0x18], rdx ; mov dword ptr [rbx], ecx ; xor eax, eax ; pop rbx ; ret
0x000000000045db6c : mov qword ptr [rax + 0x40], rcx ; ret
0x000000000045e1b9 : mov qword ptr [rax + 0x48], 0 ; pop rbx ; ret
0x000000000040df94 : mov qword ptr [rax + 8], 0 ; ret
0x000000000043ddc4 : mov qword ptr [rax + 8], rdx ; ret
0x000000000046fa1c : mov qword ptr [rax], rdi ; pop rbx ; ret
0x000000000046f96c : mov qword ptr [rax], rdx ; add rsp, 8 ; ret
0x000000000046d6aa : mov qword ptr [rax], rdx ; pop rbx ; ret
0x00000000004774d1 : mov qword ptr [rax], rdx ; ret
0x000000000045e7ca : mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x0000000000471b27 : mov qword ptr [rbp - 0x68], rax ; call 0x43dd66
0x0000000000468be0 : mov qword ptr [rbp - 0xe0], r11 ; call r10
0x00000000004681e0 : mov qword ptr [rbp - 0xf8], r11 ; call r10
0x0000000000448711 : mov qword ptr [rbx + 0x10], 0 ; pop rbx ; ret
0x000000000040a7a6 : mov qword ptr [rbx + 0x10], rax ; mov rax, rbx ; pop rbx ; ret
0x000000000046d59d : mov qword ptr [rbx + 0x10], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x000000000040af5e : mov qword ptr [rbx + 0x10], rax ; xor eax, eax ; pop rbx ; ret
0x000000000046b48d : mov qword ptr [rbx + 0x10], rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000046d2a2 : mov qword ptr [rbx + 0x18], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x0000000000472dc4 : mov qword ptr [rbx + 0x18], rax ; pop rbx ; ret
0x0000000000472e78 : mov qword ptr [rbx + 0x20], rax ; pop rbx ; ret
0x000000000040d610 : mov qword ptr [rbx + 0x50], 0 ; pop rbx ; ret
0x00000000004701d2 : mov qword ptr [rbx], rax ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000474918 : mov qword ptr [rbx], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x0000000000415d8f : mov qword ptr [rbx], rax ; xor eax, eax ; pop rbx ; ret
0x000000000040839d : mov qword ptr [rcx + 0x130], rdx ; ret
0x000000000046e07e : mov qword ptr [rdi + 0x10], r9 ; ret
0x0000000000436f1c : mov qword ptr [rdi + 0x10], rcx ; lea rax, qword ptr [rdi + 0x17] ; ret
0x000000000043688c : mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x000000000043686c : mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000004368cf : mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x00000000004368ef : mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000004368b0 : mov qword ptr [rdi + 0x10], rdx ; mov word ptr [rdi + 0x18], cx ; ret
0x000000000040d4f2 : mov qword ptr [rdi + 0x18], rax ; mov qword ptr [rdi + 8], rax ; ret
0x000000000043de0e : mov qword ptr [rdi + 0x20], rdx ; mov byte ptr [rdi + 0x28], 1 ; ret
0x000000000043de30 : mov qword ptr [rdi + 0x20], rsi ; ret
0x0000000000467284 : mov qword ptr [rdi + 0x300], rax ; ret
0x0000000000467256 : mov qword ptr [rdi + 0x308], rax ; ret
0x000000000040d522 : mov qword ptr [rdi + 0x48], rdx ; mov qword ptr [rdi + 8], rax ; ret
0x000000000040fc58 : mov qword ptr [rdi + 0x60], rcx ; ret
0x000000000040fce5 : mov qword ptr [rdi + 0x880], rax ; ret
0x0000000000477510 : mov qword ptr [rdi + 0x98], rsi ; ret
0x0000000000436edc : mov qword ptr [rdi + 0xe], rcx ; lea rax, qword ptr [rdi + 0x15] ; ret
0x000000000043682c : mov qword ptr [rdi + 0xe], rcx ; ret
0x0000000000436efc : mov qword ptr [rdi + 0xf], rcx ; lea rax, qword ptr [rdi + 0x16] ; ret
0x000000000043684c : mov qword ptr [rdi + 0xf], rcx ; ret
0x0000000000427a87 : mov qword ptr [rdi + 1], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000427a17 : mov qword ptr [rdi + 2], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000004279a7 : mov qword ptr [rdi + 3], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000427937 : mov qword ptr [rdi + 4], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000436dda : mov qword ptr [rdi + 5], rdx ; lea rax, qword ptr [rdi + 0xc] ; ret
0x00000000004278c7 : mov qword ptr [rdi + 5], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000043677a : mov qword ptr [rdi + 5], rdx ; ret
0x0000000000436dfa : mov qword ptr [rdi + 6], rdx ; lea rax, qword ptr [rdi + 0xd] ; ret
0x0000000000427857 : mov qword ptr [rdi + 6], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000043678a : mov qword ptr [rdi + 6], rdx ; ret
0x0000000000436e1a : mov qword ptr [rdi + 7], rdx ; lea rax, qword ptr [rdi + 0xe] ; ret
0x00000000004277e7 : mov qword ptr [rdi + 7], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000043679a : mov qword ptr [rdi + 7], rdx ; ret
0x000000000046efc3 : mov qword ptr [rdi + 8], r10 ; mov eax, ecx ; adc eax, eax ; ret
0x000000000046e003 : mov qword ptr [rdi + 8], r9 ; ret
0x000000000046f30d : mov qword ptr [rdi + 8], rax ; mov eax, 2 ; ret
0x000000000040d4f6 : mov qword ptr [rdi + 8], rax ; ret
0x000000000043a24a : mov qword ptr [rdi + rdx - 8], rcx ; mov qword ptr [rdi], rcx ; ret
0x00000000004394d6 : mov qword ptr [rdi + rdx - 8], rcx ; mov qword ptr [rdi], rsi ; ret
0x00000000004774bb : mov qword ptr [rdi + rsi*8], rdx ; ret
0x00000000004216f4 : mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000421732 : mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000046df6e : mov qword ptr [rdi - 0x10], r9 ; ret
0x0000000000421a7b : mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000427297 : mov qword ptr [rdi - 0xa], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000421c5b : mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000427217 : mov qword ptr [rdi - 0xb], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000421e4b : mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000427197 : mov qword ptr [rdi - 0xc], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042201c : mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000427108 : mov qword ptr [rdi - 0xd], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000042221c : mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000427078 : mov qword ptr [rdi - 0xe], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000042241c : mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000426fe8 : mov qword ptr [rdi - 0xf], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000046def9 : mov qword ptr [rdi - 8], r9 ; ret
0x00000000004216f8 : mov qword ptr [rdi - 8], rcx ; ret
0x0000000000421736 : mov qword ptr [rdi - 8], rdx ; ret
0x00000000004218ab : mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004219a7 : mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x00000000004218f3 : mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000427317 : mov qword ptr [rdi - 9], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004560d9 : mov qword ptr [rdi], r13 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000046dec8 : mov qword ptr [rdi], r9 ; ret
0x0000000000436d66 : mov qword ptr [rdi], rcx ; lea rax, qword ptr [rdi + 8] ; ret
0x0000000000436756 : mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 7], edx ; ret
0x0000000000436766 : mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 8], edx ; ret
0x0000000000436777 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 5], rdx ; ret
0x0000000000436787 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 6], rdx ; ret
0x0000000000436797 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 7], rdx ; ret
0x0000000000436747 : mov qword ptr [rdi], rcx ; mov word ptr [rdi + 8], dx ; ret
0x00000000004277eb : mov qword ptr [rdi], rcx ; ret
0x000000000043a3ce : mov qword ptr [rdi], rcx ; vzeroupper ; ret
0x0000000000436d53 : mov qword ptr [rdi], rdx ; lea rax, qword ptr [rdi + 7] ; ret
0x0000000000427af3 : mov qword ptr [rdi], rdx ; ret
0x000000000042aa9d : mov qword ptr [rdi], rsi ; mov qword ptr [r9 - 8], rcx ; ret
0x00000000004394db : mov qword ptr [rdi], rsi ; ret
0x000000000040a824 : mov qword ptr [rdx + 0x130], rdi ; pop rbx ; ret
0x00000000004362fa : mov qword ptr [rdx + 5], rax ; lea rax, qword ptr [rdx + 0xc] ; ret
0x0000000000434aea : mov qword ptr [rdx + 5], rax ; mov rax, rdi ; ret
0x000000000043631a : mov qword ptr [rdx + 6], rax ; lea rax, qword ptr [rdx + 0xd] ; ret
0x0000000000434b0a : mov qword ptr [rdx + 6], rax ; mov rax, rdi ; ret
0x000000000043633a : mov qword ptr [rdx + 7], rax ; lea rax, qword ptr [rdx + 0xe] ; ret
0x0000000000434b2a : mov qword ptr [rdx + 7], rax ; mov rax, rdi ; ret
0x00000000004361ca : mov qword ptr [rdx + 8], rax ; lea rax, qword ptr [rdx + 0xf] ; ret
0x0000000000434a1a : mov qword ptr [rdx + 8], rax ; mov rax, rdi ; ret
0x000000000040ec5f : mov qword ptr [rdx + 8], rax ; xor eax, eax ; ret
0x0000000000436173 : mov qword ptr [rdx], rax ; lea rax, qword ptr [rdx + 7] ; ret
0x00000000004349c3 : mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x000000000046f9fc : mov qword ptr [rdx], rax ; pop rbx ; ret
0x000000000040ebc7 : mov qword ptr [rdx], rax ; ret
0x000000000041604b : mov qword ptr [rdx], rbx ; mov rax, r10 ; pop rbx ; ret
0x000000000043cba4 : mov qword ptr [rdx], rdi ; pop rbx ; pop rbp ; ret
0x000000000046f527 : mov qword ptr [rip + 0x234a5a], rax ; ret
0x000000000046ada4 : mov qword ptr [rip + 0x239525], rax ; ret
0x00000000004144a5 : mov qword ptr [rip + 0x28d2d4], rax ; ret
0x0000000000410c5b : mov qword ptr [rip + 0x290b1e], rax ; ret
0x000000000040f873 : mov qword ptr [rip + 0x291eee], rax ; ret
0x000000000040f863 : mov qword ptr [rip + 0x291ef6], rax ; ret
0x000000000040f851 : mov qword ptr [rip + 0x291ef8], rdx ; ret
0x000000000040f813 : mov qword ptr [rip + 0x291efe], rax ; ret
0x000000000040f7ed : mov qword ptr [rip + 0x291f0c], rax ; ret
0x000000000040f803 : mov qword ptr [rip + 0x291f16], rax ; ret
0x000000000040f7bd : mov qword ptr [rip + 0x291f44], rax ; ret
0x000000000040eb5a : mov qword ptr [rsi + 0x60], rbx ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000464b20 : mov qword ptr [rsi], -1 ; xor eax, eax ; ret
0x000000000046af11 : mov qword ptr [rsi], rax ; ret
0x000000000040f9f1 : mov qword ptr [rsi], rcx ; ret
0x000000000046a25a : mov qword ptr [rsi], rdi ; mov rax, r8 ; pop rbx ; ret
0x0000000000406772 : mov qword ptr [rsp + 0x20], r10 ; call rax
0x00000000004125d3 : mov qword ptr [rsp + 8], rax ; call rcx
0x0000000000412550 : mov qword ptr [rsp + 8], rax ; call rsi
0x000000000040926d : mov qword ptr [rsp + 8], rcx ; mov rdi, r15 ; call rax
0x000000000040b4e1 : mov qword ptr [rsp], rcx ; mov rdi, rbx ; call rax
0x000000000044a545 : mov qword ptr fs:[rdx], rax ; ret
0x00000000004394d5 : mov qword ptr ss:[rdi + rdx - 8], rcx ; mov qword ptr [rdi], rsi ; ret
0x000000000048f7fd : mov r10d, 0xcac982a4 ; call 0xffffffffaf0b967f
0x0000000000400755 : mov r12, rax ; call 0x43a5d9
0x000000000040061e : mov r12, rax ; call 0x43aa19
0x0000000000471760 : mov r12, rax ; nop dword ptr [rax + rax] ; call qword ptr [rbx]
0x000000000047782c : mov r14, qword ptr [rbp - 0x10] ; mov r15, qword ptr [rbp - 8] ; leave ; ret
0x0000000000477830 : mov r15, qword ptr [rbp - 8] ; leave ; ret
0x0000000000475120 : mov r8, qword ptr [r8] ; mov qword ptr [r10], r8 ; ret
0x000000000044043a : mov r9, r13 ; call rbx
0x0000000000460b24 : mov r9, r14 ; call rbx
0x000000000040e140 : mov rax, -1 ; ret
0x0000000000461140 : mov rax, 1 ; ret
0x0000000000461150 : mov rax, 2 ; ret
0x0000000000461160 : mov rax, 3 ; ret
0x0000000000461170 : mov rax, 4 ; ret
0x0000000000461180 : mov rax, 5 ; ret
0x0000000000461190 : mov rax, 6 ; ret
0x00000000004611a0 : mov rax, 7 ; ret
0x00000000004687a5 : mov rax, qword ptr [r15 + 0x10] ; add rax, qword ptr [r14] ; call rax
0x0000000000409800 : mov rax, qword ptr [rax + 0x20] ; jmp rax
0x000000000045e883 : mov rax, qword ptr [rax + 0x4c] ; ret
0x000000000046d160 : mov rax, qword ptr [rax + 8] ; ret
0x0000000000448fe6 : mov rax, qword ptr [rax + rbp*8] ; test rax, rax ; je 0x448ffa ; call rax
0x000000000047a67f : mov rax, qword ptr [rax + rbp*8] ; test rax, rax ; je 0x47a693 ; call rax
0x000000000044a55e : mov rax, qword ptr [rax + rdi*8 + 0x80] ; ret
0x000000000044f410 : mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x0000000000459e8f : mov rax, qword ptr [rax + rsi*8] ; jmp rax
0x0000000000477462 : mov rax, qword ptr [rax] ; ret
0x0000000000467ef0 : mov rax, qword ptr [rbx + 0x10] ; add rax, qword ptr [r14] ; call rax
0x000000000040d65c : mov rax, qword ptr [rbx + 0x18] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x000000000046fa18 : mov rax, qword ptr [rbx + 0x18] ; mov qword ptr [rax], rdi ; pop rbx ; ret
0x000000000040dbb8 : mov rax, qword ptr [rbx + 0x40] ; add rsp, 0x20 ; pop rbx ; jmp rax
0x0000000000471783 : mov rax, qword ptr [rbx] ; add rax, qword ptr [rdx + 8] ; call rax
0x00000000004349c0 : mov rax, qword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x000000000047a93c : mov rax, qword ptr [rdi + 0x20] ; test rax, rax ; je 0x47a955 ; call rax
0x000000000045e880 : mov rax, qword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x000000000040eee0 : mov rax, qword ptr [rdi + 0x68] ; ret
0x0000000000477490 : mov rax, qword ptr [rdi + 0x90] ; ret
0x00000000004774e0 : mov rax, qword ptr [rdi + 0x98] ; ret
0x0000000000477520 : mov rax, qword ptr [rdi + 0xa0] ; ret
0x0000000000477580 : mov rax, qword ptr [rdi + 0xa8] ; ret
0x0000000000477570 : mov rax, qword ptr [rdi + 0xb0] ; ret
0x0000000000477530 : mov rax, qword ptr [rdi + 0xb8] ; ret
0x00000000004726e0 : mov rax, qword ptr [rdi] ; cmp rax, rsi ; je 0x4726f9 ; ret
0x000000000040f7d0 : mov rax, qword ptr [rdi] ; mov dword ptr [rip + 0x2944db], eax ; ret
0x000000000040ebc4 : mov rax, qword ptr [rdi] ; mov qword ptr [rdx], rax ; ret
0x000000000040ebb0 : mov rax, qword ptr [rdx] ; test rax, rax ; jne 0x40ebb1 ; ret
0x000000000046ae99 : mov rax, qword ptr [rip + 0x239430] ; ret
0x0000000000447f10 : mov rax, qword ptr [rip + 0x25be81] ; ret
0x0000000000440600 : mov rax, qword ptr [rip + 0x264241] ; ret
0x000000000040eec0 : mov rax, qword ptr [rip + 0x292179] ; ret
0x00000000004783d1 : mov rax, qword ptr [rsi + 0x10] ; ret
0x0000000000475260 : mov rax, qword ptr [rsi + 0xa8] ; ret
0x0000000000475233 : mov rax, qword ptr [rsi + 0xb0] ; ret
0x0000000000475250 : mov rax, qword ptr [rsi + 0xb8] ; ret
0x00000000004783f0 : mov rax, qword ptr [rsi + 8] ; ret
0x000000000044f073 : mov rax, qword ptr [rsi + rax*8] ; jmp rax
0x0000000000477555 : mov rax, qword ptr [rsp + 0x10] ; add rsp, 0x28 ; ret
0x00000000004010d2 : mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000444fa2 : mov rax, qword ptr [rsp + 0x20] ; call rax
0x00000000004067e8 : mov rax, qword ptr [rsp + 8] ; call rax
0x0000000000474cc9 : mov rax, qword ptr [rsp] ; add rsp, 0x38 ; ret
0x000000000041604e : mov rax, r10 ; pop rbx ; ret
0x0000000000401d36 : mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000046b641 : mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043cded : mov rax, r13 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000410b9e : mov rax, r8 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000415302 : mov rax, r8 ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000041518a : mov rax, r8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000046a25d : mov rax, r8 ; pop rbx ; ret
0x0000000000460370 : mov rax, r8 ; vzeroupper ; ret
0x0000000000456446 : mov rax, r9 ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000045638b : mov rax, r9 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000469ef2 : mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000401ae0 : mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000047768a : mov rax, rbp ; pop rbx ; pop rbp ; ret
0x000000000040c1f1 : mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004085d4 : mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040fe33 : mov rax, rbx ; pop rbx ; pop rbp ; ret
0x000000000040a7aa : mov rax, rbx ; pop rbx ; ret
0x000000000040a6a2 : mov rax, rdi ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000410463 : mov rax, rdi ; pop rbp ; pop r12 ; ret
0x000000000040a6d3 : mov rax, rdi ; ret
0x0000000000414931 : mov rax, rdx ; pop rbp ; pop r12 ; ret
0x0000000000461a1a : mov rax, rdx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000414616 : mov rax, rdx ; pop rbx ; pop rbp ; ret
0x000000000043a755 : mov rax, rdx ; pop rbx ; ret
0x0000000000433388 : mov rax, rdx ; ret
0x000000000046f3d3 : mov rax, rsi ; ret
0x00000000004779b2 : mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x0000000000478bf9 : mov rbp, qword ptr [rsp + 8] ; jmp 0x478c19
0x000000000046da2b : mov rbp, r9 ; jmp rdx
0x000000000045d0d8 : mov rbp, rax ; jmp 0x45d0a3
0x0000000000449f55 : mov rbx, rdi ; test rax, rax ; je 0x449f67 ; call rax
0x0000000000436730 : mov rcx, qword ptr [rsi] ; mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x000000000046d256 : mov rcx, qword ptr [rsp + 0x40] ; add rsp, 0x48 ; jmp qword ptr [rax]
0x000000000046d1e4 : mov rcx, qword ptr [rsp + 0x40] ; add rsp, 0x58 ; jmp qword ptr [rax]
0x000000000045ee90 : mov rcx, rax ; jmp 0x45ee5c
0x00000000004394b1 : mov rcx, rdx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000406f63 : mov rdi, qword ptr [rax + 0x20] ; call rdx
0x000000000044c41a : mov rdi, qword ptr [rbp - 0x8a8] ; call rax
0x0000000000456cdc : mov rdi, qword ptr [rbp - 0x8d0] ; call rax
0x00000000004067e4 : mov rdi, qword ptr [rbp] ; mov rax, qword ptr [rsp + 8] ; call rax
0x000000000047910e : mov rdi, qword ptr [rsp + 0x10] ; call r14
0x000000000044275f : mov rdi, qword ptr [rsp + 0x20] ; call r15
0x0000000000443999 : mov rdi, qword ptr [rsp + 0x30] ; call r14
0x000000000044382e : mov rdi, qword ptr [rsp + 0x30] ; call r15
0x00000000004430fe : mov rdi, qword ptr [rsp + 0x30] ; call rbx
0x0000000000442b0a : mov rdi, qword ptr [rsp + 0x38] ; call r14
0x00000000004447e5 : mov rdi, qword ptr [rsp + 0x38] ; call r15
0x000000000044545a : mov rdi, qword ptr [rsp + 0x40] ; call r15
0x0000000000446343 : mov rdi, qword ptr [rsp + 0x48] ; call r14
0x0000000000443bf3 : mov rdi, qword ptr [rsp + 0x48] ; call r15
0x000000000044aa4b : mov rdi, qword ptr [rsp + 8] ; call r12
0x000000000040d685 : mov rdi, qword ptr [rsp] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x0000000000477ffb : mov rdi, qword ptr [rsp] ; mov rdx, qword ptr [rbp] ; call r12
0x0000000000477f03 : mov rdi, r12 ; call r15
0x000000000045e90f : mov rdi, r12 ; call rbx
0x0000000000478eeb : mov rdi, r13 ; call r14
0x000000000043ce79 : mov rdi, r13 ; mov rsi, qword ptr [rax] ; call r14
0x0000000000414123 : mov rdi, r14 ; call 0x4103b5
0x000000000044aa76 : mov rdi, r14 ; call r12
0x0000000000440dda : mov rdi, r14 ; mov rsi, qword ptr [rbp - 0x70] ; call rsi
0x0000000000414f8e : mov rdi, r15 ; call 0x411235
0x000000000045ebe7 : mov rdi, r15 ; call r12
0x0000000000409272 : mov rdi, r15 ; call rax
0x000000000044ab43 : mov rdi, r15 ; mov rdx, r13 ; call r12
0x00000000004492f8 : mov rdi, rax ; mov byte ptr [rdi], 0 ; pop rbx ; pop r14 ; ret
0x000000000044aa37 : mov rdi, rbp ; call r12
0x0000000000415315 : mov rdi, rbp ; call rax
0x00000000004609d0 : mov rdi, rbp ; call rbx
0x0000000000460b21 : mov rdi, rbp ; mov r9, r14 ; call rbx
0x0000000000406838 : mov rdi, rbp ; mov rax, qword ptr [rsp + 8] ; call rax
0x00000000004488da : mov rdi, rbx ; call 0x414b45
0x0000000000447ec9 : mov rdi, rbx ; call r12
0x00000000004407e8 : mov rdi, rbx ; call r15
0x000000000040b4e5 : mov rdi, rbx ; call rax
0x000000000040b199 : mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x000000000045df1e : mov rdi, rbx ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x000000000040b209 : mov rdi, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; jmp rax
0x00000000004135ee : mov rdi, rdx ; pop rbx ; jmp 0x40f886
0x0000000000477138 : mov rdx, qword ptr [r12] ; mov edi, 1 ; call rax
0x0000000000478ee8 : mov rdx, qword ptr [r15] ; mov rdi, r13 ; call r14
0x0000000000477fff : mov rdx, qword ptr [rbp] ; call r12
0x000000000046f9f8 : mov rdx, qword ptr [rbx + 0x18] ; mov qword ptr [rdx], rax ; pop rbx ; ret
0x000000000046fa0c : mov rdx, qword ptr [rdi + 0x30] ; mov qword ptr [rax], rdx ; pop rbx ; ret
0x0000000000421860 : mov rdx, qword ptr [rsi - 8] ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000427af0 : mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x000000000046d908 : mov rdx, qword ptr [rsp + 0x10] ; call rdx
0x0000000000416454 : mov rdx, qword ptr [rsp + 0x18] ; jmp 0x416424
0x000000000044ab46 : mov rdx, r13 ; call r12
0x0000000000474174 : mov rdx, r13 ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [rax]
0x0000000000474010 : mov rdx, r13 ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [rbx]
0x0000000000473fd0 : mov rdx, r13 ; mov rsi, r12 ; mov edi, ebp ; call rax
0x000000000046256a : mov rdx, rax ; jmp 0x462553
0x000000000043a177 : mov rdx, rdi ; rep stosb byte ptr [rdi], al ; mov rax, rdx ; ret
0x0000000000477fb4 : mov rsi, qword ptr [r14] ; call r12
0x000000000047910b : mov rsi, qword ptr [r15] ; mov rdi, qword ptr [rsp + 0x10] ; call r14
0x0000000000448eeb : mov rsi, qword ptr [rax + r15*8] ; test rsi, rsi ; je 0x448eff ; call rsi
0x000000000043ce7c : mov rsi, qword ptr [rax] ; call r14
0x0000000000440ddd : mov rsi, qword ptr [rbp - 0x70] ; call rsi
0x000000000044ad5d : mov rsi, qword ptr [rsp + 0x10] ; mov rdi, rbp ; call r12
0x0000000000440435 : mov rsi, qword ptr [rsp + 0x18] ; mov r9, r13 ; call rbx
0x0000000000415310 : mov rsi, qword ptr [rsp + 0x28] ; mov rdi, rbp ; call rax
0x0000000000474177 : mov rsi, r12 ; mov edi, ebp ; call qword ptr [rax]
0x0000000000474013 : mov rsi, r12 ; mov edi, ebp ; call qword ptr [rbx]
0x0000000000473fd3 : mov rsi, r12 ; mov edi, ebp ; call rax
0x0000000000414120 : mov rsi, r12 ; mov rdi, r14 ; call 0x4103b8
0x0000000000414f8b : mov rsi, r12 ; mov rdi, r15 ; call 0x411238
0x0000000000453375 : mov rsi, r13 ; mov rdi, rbx ; call rax
0x0000000000477f00 : mov rsi, r14 ; mov rdi, r12 ; call r15
0x0000000000468e3b : mov rsi, rax ; call 0x4150e5
0x000000000044aa48 : mov rsi, rbp ; mov rdi, qword ptr [rsp + 8] ; call r12
0x000000000044aa73 : mov rsi, rbp ; mov rdi, r14 ; call r12
0x000000000044abb6 : mov rsi, rbp ; mov rdi, rbx ; call r12
0x000000000044aa8e : mov rsi, rbx ; mov rdi, rbp ; call r12
0x00000000004135eb : mov rsi, rbx ; mov rdi, rdx ; pop rbx ; jmp 0x40f889
0x0000000000477ea9 : mov rsi, rdi ; mov edi, 1 ; jmp rax
0x000000000046da28 : mov rsp, r8 ; mov rbp, r9 ; jmp rdx
0x00000000004779b6 : mov rsp, rcx ; ret
0x000000000042aac5 : mov word ptr [r9 - 2], cx ; ret
0x000000000049c4d4 : mov word ptr [rcx], fs ; std ; call rdi
0x0000000000436e5c : mov word ptr [rdi + 0x10], cx ; lea rax, qword ptr [rdi + 0x11] ; ret
0x00000000004367cc : mov word ptr [rdi + 0x10], cx ; ret
0x0000000000436f64 : mov word ptr [rdi + 0x18], cx ; lea rax, qword ptr [rdi + 0x19] ; ret
0x00000000004368b4 : mov word ptr [rdi + 0x18], cx ; ret
0x0000000000427d27 : mov word ptr [rdi + 1], dx ; mov word ptr [rdi], cx ; ret
0x0000000000436d28 : mov word ptr [rdi + 4], dx ; lea rax, qword ptr [rdi + 5] ; ret
0x0000000000436708 : mov word ptr [rdi + 4], dx ; ret
0x0000000000436d7a : mov word ptr [rdi + 8], dx ; lea rax, qword ptr [rdi + 9] ; ret
0x000000000043674a : mov word ptr [rdi + 8], dx ; ret
0x000000000043a25a : mov word ptr [rdi + rdx - 2], cx ; mov word ptr [rdi], cx ; ret
0x00000000004394f4 : mov word ptr [rdi + rdx - 2], cx ; mov word ptr [rdi], si ; ret
0x0000000000421dfc : mov word ptr [rdi - 2], cx ; ret
0x0000000000421c14 : mov word ptr [rdi - 2], dx ; ret
0x0000000000421df8 : mov word ptr [rdi - 3], dx ; mov word ptr [rdi - 2], cx ; ret
0x00000000004366d3 : mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x0000000000439232 : mov word ptr [rdi], cx ; mov word ptr [rsi - 2], cx ; ret
0x0000000000427d2b : mov word ptr [rdi], cx ; ret
0x000000000043a3e4 : mov word ptr [rdi], cx ; vzeroupper ; ret
0x0000000000436ce3 : mov word ptr [rdi], dx ; lea rax, qword ptr [rdi + 1] ; ret
0x0000000000427d93 : mov word ptr [rdi], dx ; ret
0x000000000042aac2 : mov word ptr [rdi], si ; mov word ptr [r9 - 2], cx ; ret
0x00000000004394f9 : mov word ptr [rdi], si ; ret
0x0000000000436248 : mov word ptr [rdx + 4], ax ; lea rax, qword ptr [rdx + 5] ; ret
0x0000000000434a88 : mov word ptr [rdx + 4], ax ; mov rax, rdi ; ret
0x00000000004361f3 : mov word ptr [rdx], ax ; lea rax, qword ptr [rdx + 1] ; ret
0x0000000000434a43 : mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x0000000000439235 : mov word ptr [rsi - 2], cx ; ret
0x00000000004394f3 : mov word ptr ss:[rdi + rdx - 2], cx ; mov word ptr [rdi], si ; ret
0x00000000004399c7 : movabs al, byte ptr [0x77f8c5237f7ec1c4] ; ret
0x0000000000455425 : movabs al, byte ptr [0x840fc08548000000] ; ret 5
0x00000000004563af : movabs al, byte ptr [0x894928348d48fffa] ; ret 0x894d
0x0000000000461baf : movabs byte ptr [0x894774fff883fffd], al ; ret 0xe283
0x00000000004019ff : movabs byte ptr [0x8a1d8d48e3eb0003], al ; ret
0x0000000000441119 : movabs dword ptr [0x8948c08548fffd33], eax ; ret
0x0000000000420382 : movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x000000000042037e : movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x000000000042042c : movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004367a0 : movdqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x000000000043701d : movdqu xmmword ptr [rdi + 0x10], xmm2 ; lea rax, qword ptr [rdi + 0x1f] ; ret
0x000000000043696d : movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00000000004279ff : movdqu xmmword ptr [rdi + 0xa], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000042798f : movdqu xmmword ptr [rdi + 0xb], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000042791f : movdqu xmmword ptr [rdi + 0xc], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004278af : movdqu xmmword ptr [rdi + 0xd], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000436fbd : movdqu xmmword ptr [rdi + 0xd], xmm2 ; lea rax, qword ptr [rdi + 0x1c] ; ret
0x000000000043690d : movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x000000000042783f : movdqu xmmword ptr [rdi + 0xe], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000436fdd : movdqu xmmword ptr [rdi + 0xe], xmm2 ; lea rax, qword ptr [rdi + 0x1d] ; ret
0x000000000043692d : movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x00000000004277cf : movdqu xmmword ptr [rdi + 0xf], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000436ffd : movdqu xmmword ptr [rdi + 0xf], xmm2 ; lea rax, qword ptr [rdi + 0x1e] ; ret
0x000000000043694d : movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x0000000000427def : movdqu xmmword ptr [rdi + 1], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000427d7f : movdqu xmmword ptr [rdi + 2], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000427d0f : movdqu xmmword ptr [rdi + 3], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000427c9f : movdqu xmmword ptr [rdi + 4], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000427c2f : movdqu xmmword ptr [rdi + 5], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000427bbf : movdqu xmmword ptr [rdi + 6], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000427b4f : movdqu xmmword ptr [rdi + 7], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000427adf : movdqu xmmword ptr [rdi + 8], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000427a6f : movdqu xmmword ptr [rdi + 9], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043a1cd : movdqu xmmword ptr [rdi + rdx - 0x20], xmm0 ; ret
0x0000000000426f5b : movdqu xmmword ptr [rdi - 0x10], xmm0 ; ret
0x0000000000426fcb : movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000436e34 : movdqu xmmword ptr [rdi], xmm0 ; lea rax, qword ptr [rdi + 0xf] ; ret
0x00000000004367b4 : movdqu xmmword ptr [rdi], xmm0 ; mov byte ptr [rdi + 0x10], dh ; ret
0x00000000004367f7 : movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000004367e7 : movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x0000000000436868 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x0000000000436828 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x0000000000436848 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000004367c8 : movdqu xmmword ptr [rdi], xmm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x0000000000436969 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x0000000000436909 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x0000000000436929 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x0000000000436949 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x000000000042777a : movdqu xmmword ptr [rdi], xmm0 ; ret
0x00000000004277d4 : movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004367a1 : movq mm0, qword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x000000000043701e : movq qword ptr [rdi + 0x10], mm2 ; lea rax, qword ptr [rdi + 0x1f] ; ret
0x000000000043696e : movq qword ptr [rdi + 0x10], mm2 ; ret
0x0000000000427a00 : movq qword ptr [rdi + 0xa], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000427990 : movq qword ptr [rdi + 0xb], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000427920 : movq qword ptr [rdi + 0xc], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004278b0 : movq qword ptr [rdi + 0xd], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000436fbe : movq qword ptr [rdi + 0xd], mm2 ; lea rax, qword ptr [rdi + 0x1c] ; ret
0x000000000043690e : movq qword ptr [rdi + 0xd], mm2 ; ret
0x0000000000427840 : movq qword ptr [rdi + 0xe], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000436fde : movq qword ptr [rdi + 0xe], mm2 ; lea rax, qword ptr [rdi + 0x1d] ; ret
0x000000000043692e : movq qword ptr [rdi + 0xe], mm2 ; ret
0x00000000004277d0 : movq qword ptr [rdi + 0xf], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000436ffe : movq qword ptr [rdi + 0xf], mm2 ; lea rax, qword ptr [rdi + 0x1e] ; ret
0x000000000043694e : movq qword ptr [rdi + 0xf], mm2 ; ret
0x0000000000427df0 : movq qword ptr [rdi + 1], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000427d80 : movq qword ptr [rdi + 2], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000427d10 : movq qword ptr [rdi + 3], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000427ca0 : movq qword ptr [rdi + 4], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000427c30 : movq qword ptr [rdi + 5], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000427bc0 : movq qword ptr [rdi + 6], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000427b50 : movq qword ptr [rdi + 7], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000427ae0 : movq qword ptr [rdi + 8], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000427a70 : movq qword ptr [rdi + 9], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043a155 : movq qword ptr [rdi + rdx - 0x10], mm0 ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x000000000043a1ce : movq qword ptr [rdi + rdx - 0x20], mm0 ; ret
0x0000000000426f5c : movq qword ptr [rdi - 0x10], mm0 ; ret
0x0000000000426fcc : movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000427707 : movq qword ptr [rdi - 0x11], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000427687 : movq qword ptr [rdi - 0x12], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000004275f7 : movq qword ptr [rdi - 0x13], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000427577 : movq qword ptr [rdi - 0x14], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000004274f7 : movq qword ptr [rdi - 0x15], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000427477 : movq qword ptr [rdi - 0x16], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000004273f7 : movq qword ptr [rdi - 0x17], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000427377 : movq qword ptr [rdi - 0x18], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000004272f7 : movq qword ptr [rdi - 0x19], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000427277 : movq qword ptr [rdi - 0x1a], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000004271f7 : movq qword ptr [rdi - 0x1b], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000427177 : movq qword ptr [rdi - 0x1c], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000004270e7 : movq qword ptr [rdi - 0x1d], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000427057 : movq qword ptr [rdi - 0x1e], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000426fc7 : movq qword ptr [rdi - 0x1f], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000436e35 : movq qword ptr [rdi], mm0 ; lea rax, qword ptr [rdi + 0xf] ; ret
0x00000000004367b5 : movq qword ptr [rdi], mm0 ; mov byte ptr [rdi + 0x10], dh ; ret
0x0000000000436808 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x00000000004367f8 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000004367e8 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x0000000000436869 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x0000000000436829 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x0000000000436849 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000004367c9 : movq qword ptr [rdi], mm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x000000000043696a : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x000000000043690a : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x000000000043692a : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x000000000043694a : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x000000000042777b : movq qword ptr [rdi], mm0 ; ret
0x00000000004277d5 : movq qword ptr [rdi], mm1 ; ret
0x0000000000447b6c : movsb byte ptr [rdi], byte ptr [rsi] ; and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000439455 : movsb byte ptr [rdi], byte ptr [rsi] ; cld ; ret
0x000000000047cf9d : movsb byte ptr [rdi], byte ptr [rsi] ; cli ; call rsi
0x000000000047cf5d : movsb byte ptr [rdi], byte ptr [rsi] ; cli ; jmp rax
0x00000000004901c2 : movsb byte ptr [rdi], byte ptr [rsi] ; in eax, 0x24 ; outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x000000000049141d : movsb byte ptr [rdi], byte ptr [rsi] ; jns 0x491476 ; jmp 0x4913b7
0x0000000000439447 : movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000043f0c8 : movsb byte ptr [rdi], byte ptr [rsi] ; sub eax, dword ptr [rdx] ; add byte ptr [rcx], dh ; sar byte ptr [rcx], cl ; ret
0x000000000046b43c : movsb byte ptr [rdi], byte ptr [rsi] ; xor eax, eax ; ret
0x00000000004939cc : movsd dword ptr [rdi], dword ptr [rsi] ; and bh, dh ; dec esp ; sbb bh, dh ; call rsp
0x000000000047cf95 : movsd dword ptr [rdi], dword ptr [rsi] ; cli ; call rsi
0x000000000047cf55 : movsd dword ptr [rdi], dword ptr [rsi] ; cli ; jmp rax
0x0000000000491a55 : movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x00000000004584c5 : movsd dword ptr [rdi], dword ptr [rsi] ; jmp 0xffffffffc3c984cf
0x0000000000491311 : movsd dword ptr [rdi], dword ptr [rsi] ; mov cl, byte ptr [rip - 0x114f09b0] ; fcmovb st(0), st(3) ; ret
0x000000000046df22 : movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x0000000000499bd1 : movsd dword ptr [rdi], dword ptr [rsi] ; sti ; call qword ptr [rbx]
0x00000000004750c4 : movss dword ptr [rsp - 0x28], xmm0 ; ret
0x000000000046c96a : movsx eax, dl ; neg eax ; ret
0x0000000000416df1 : movsxd r9, dword ptr [r10 + r9*4] ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x00000000004253db : movsxd r9, dword ptr [r11 + r9*4] ; add r9, r11 ; jmp r9
0x000000000041fe5b : movsxd r9, dword ptr [r11 + r9*4] ; lea r9, qword ptr [r11 + r9] ; jmp r9
0x0000000000476368 : movsxd rax, dword ptr [r12 + rax*4] ; add rax, r12 ; jmp rax
0x0000000000476c69 : movsxd rax, dword ptr [r14 + rax*4] ; add rax, r14 ; jmp rax
0x0000000000475317 : movsxd rax, dword ptr [r15 + rax*4] ; add rax, r15 ; jmp rax
0x00000000004750f1 : movsxd rax, dword ptr [r8 + rcx*4] ; add rax, r8 ; jmp rax
0x00000000004768a1 : movsxd rax, dword ptr [r9 + r11*4] ; add rax, r9 ; jmp rax
0x000000000043f1fe : movsxd rax, dword ptr [rbp + rax*4] ; add rax, rbp ; jmp rax
0x000000000043f187 : movsxd rax, dword ptr [rbx + rax*4] ; add rax, rbx ; jmp rax
0x000000000045c036 : movsxd rax, dword ptr [rcx + rax*4] ; add rax, rcx ; jmp rax
0x0000000000401b91 : movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x000000000043b5d3 : movsxd rax, dword ptr [rdx + rbx*4] ; add rax, rdx ; jmp rax
0x0000000000467c4d : movsxd rax, dword ptr [rsi + r12*4] ; add rax, rsi ; jmp rax
0x000000000045c74b : movsxd rax, dword ptr [rsi + rax*4] ; add rax, rsi ; jmp rax
0x000000000043a617 : movsxd rax, dword ptr [rsi + rdi*4] ; add rax, rsi ; jmp rax
0x000000000043a6d1 : movsxd rax, dword ptr [rsi + rdx*4] ; add rax, rsi ; jmp rax
0x000000000046fe4d : movsxd rax, ecx ; add rax, rdi ; sub rax, r8 ; ret
0x00000000004390e7 : movsxd rax, ecx ; add rax, rdi ; sub rax, rsi ; ret
0x0000000000439094 : movsxd rax, ecx ; ret
0x00000000004390d9 : movsxd rbx, ecx ; add cl, byte ptr [rdi] ; xchg eax, edx ; ror byte ptr [rdi], 0x94 ; ret 0xc085
0x000000000041e78d : movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x0000000000436569 : movsxd rcx, dword ptr [r11 + rdx*4] ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x000000000043a63f : movsxd rcx, dword ptr [rsi + rax*4] ; add rcx, rsi ; jmp rcx
0x0000000000439127 : movsxd rcx, ecx ; lea rax, qword ptr [rdi + rcx] ; sub rax, rsi ; ret
0x0000000000405d07 : movsxd rdi, dword ptr [r10 + rdi*4] ; add rdi, r10 ; jmp rdi
0x000000000041ff2f : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000405a1e : movsxd rdx, dword ptr [rdi + rdx*4] ; add rdx, rdi ; jmp rdx
0x000000000043b849 : movsxd rdx, eax ; jmp 0x43b5f3
0x0000000000449ac0 : movsxd rsi, dword ptr [r8 + r9*4] ; add rsi, r8 ; jmp rsi
0x000000000043854c : movsxd rsi, esi ; ret 0x7520
0x000000000043960f : movups xmmword ptr [r11], xmm4 ; ret
0x0000000000439696 : movups xmmword ptr [r11], xmm8 ; ret
0x0000000000439697 : movups xmmword ptr [rbx], xmm0 ; ret
0x0000000000439610 : movups xmmword ptr [rbx], xmm4 ; ret
0x000000000043960b : movups xmmword ptr [rcx - 0x30], xmm0 ; movups xmmword ptr [r11], xmm4 ; ret
0x000000000043960a : movups xmmword ptr [rcx - 0x30], xmm8 ; movups xmmword ptr [r11], xmm4 ; ret
0x0000000000439692 : movups xmmword ptr [rdi + 0x30], xmm7 ; movups xmmword ptr [r11], xmm8 ; ret
0x00000000004393f2 : movups xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x0000000000439579 : movups xmmword ptr [rdi + rdx - 0x20], xmm3 ; ret
0x0000000000439556 : movups xmmword ptr [rdi + rdx - 0x40], xmm7 ; ret
0x00000000004393ef : movups xmmword ptr [rdi], xmm0 ; movups xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x00000000004750c5 : movups xmmword ptr [rsp - 0x28], xmm0 ; ret
0x0000000000461f31 : movzx eax, al ; add rsp, 0x58 ; ret
0x000000000040c24f : movzx eax, al ; neg eax ; pop rbx ; ret
0x0000000000472d9c : movzx eax, al ; neg eax ; ret
0x000000000046f859 : movzx eax, al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004404b0 : movzx eax, al ; xor edx, edx ; add eax, 1 ; push rax ; call rbx
0x000000000040ca30 : movzx eax, bpl ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000047831e : movzx eax, byte ptr [rax] ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000040bdcc : movzx eax, byte ptr [rax] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000040aade : movzx eax, byte ptr [rax] ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000040bdaa : movzx eax, byte ptr [rax] ; ret
0x000000000044f06f : movzx eax, byte ptr [rdi + rax] ; mov rax, qword ptr [rsi + rax*8] ; jmp rax
0x0000000000418188 : movzx eax, byte ptr [rdi + rdx] ; sub eax, ecx ; ret
0x000000000041e520 : movzx eax, byte ptr [rdi] ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x000000000041e060 : movzx eax, byte ptr [rdi] ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x00000000004181a3 : movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x000000000040aaf0 : movzx eax, byte ptr [rdx] ; ret
0x000000000040ca31 : movzx eax, ch ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043a6a0 : movzx eax, cl ; pop rbx ; ret
0x0000000000438baa : movzx ecx, byte ptr [rsi + rdx + 3] ; test cl, cl ; jne 0x438ba9 ; ret
0x0000000000438c5a : movzx ecx, byte ptr [rsi + rdx + 3] ; test cl, cl ; jne 0x438c59 ; ret
0x000000000041f644 : movzx ecx, byte ptr [rsi - 1] ; sub eax, ecx ; ret
0x00000000004394c8 : movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000004181a0 : movzx ecx, byte ptr [rsi] ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x000000000041e523 : movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x00000000004062a3 : movzx edx, byte ptr [rdi] ; test dl, dl ; jne 0x40628b ; ret
0x0000000000418361 : movzx edx, byte ptr [rdx + rcx] ; sub eax, edx ; ret
0x000000000041c7d8 : movzx edx, byte ptr [rsi + rcx] ; sub eax, edx ; ret
0x000000000041e4a8 : movzx edx, byte ptr [rsi + rcx] ; sub eax, edx ; vzeroupper ; ret
0x00000000004181f3 : movzx edx, byte ptr [rsi + rdx] ; sub eax, edx ; ret
0x0000000000438574 : movzx edx, byte ptr [rsi - 0x10] ; sub eax, edx ; ret
0x00000000004385d4 : movzx edx, byte ptr [rsi - 0xa] ; sub eax, edx ; ret
0x00000000004385c4 : movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x00000000004385b4 : movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x00000000004385a4 : movzx edx, byte ptr [rsi - 0xd] ; sub eax, edx ; ret
0x0000000000438594 : movzx edx, byte ptr [rsi - 0xe] ; sub eax, edx ; ret
0x0000000000438584 : movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x0000000000427720 : movzx edx, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x000000000041f3f7 : movzx edx, byte ptr [rsi - 1] ; sub eax, edx ; ret
0x000000000043855b : movzx edx, byte ptr [rsi - 9] ; sub eax, edx ; ret
0x0000000000427e00 : movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x000000000041e063 : movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x000000000041e089 : movzx edx, dl ; sub eax, edx ; ret
0x00000000004276a0 : movzx edx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x0000000000427d90 : movzx edx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x000000000044f40d : mul byte ptr [rax + rax] ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x000000000045fc07 : mul byte ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x000000000040f866 : neg byte ptr [rsi] ; sub dword ptr [rax], eax ; ret
0x000000000043b8d7 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000040c252 : neg eax ; pop rbx ; ret
0x000000000040f03f : neg eax ; ret
0x0000000000404ff5 : nop ; add byte ptr [rax], al ; add al, ch ; ret 0xffb4
0x0000000000426e57 : nop ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x00000000004014b3 : nop ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000041eaac : nop ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000049c22c : nop ; add dword ptr [rax], 0 ; loopne 0x49c221 ; std ; jmp qword ptr [rdi]
0x000000000046218c : nop ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004966a4 : nop ; add dword ptr [rsi + rcx + 0x10], ecx ; ret
0x00000000004405ef : nop ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000047273f : nop ; add rsp, 8 ; ret
0x000000000041121f : nop ; call rax
0x0000000000440de0 : nop ; call rsi
0x000000000043727f : nop ; lea rax, qword ptr [rdi + 1] ; ret
0x000000000043726f : nop ; lea rax, qword ptr [rdi] ; ret
0x00000000004361df : nop ; mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; lea rax, qword ptr [rdx] ; ret
0x000000000047cd3c : nop ; mov cl, 0xfa ; jmp qword ptr [rax]
0x0000000000421a2f : nop ; mov dl, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000421c0f : nop ; mov dx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x00000000004366bf : nop ; mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x000000000046febf : nop ; mov eax, 0x27 ; syscall ; ret
0x00000000004616af : nop ; mov eax, 0xc9 ; syscall ; ret
0x000000000040da0f : nop ; mov eax, 0xffffffff ; ret
0x000000000046b7df : nop ; mov eax, 1 ; pop rbx ; ret
0x0000000000421fcf : nop ; mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000436cff : nop ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 3] ; ret
0x000000000045e7c9 : nop ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x0000000000468bdf : nop ; mov qword ptr [rbp - 0xe0], r11 ; call r10
0x000000000046113f : nop ; mov rax, 1 ; ret
0x000000000045e87f : nop ; mov rax, qword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x000000000040eedf : nop ; mov rax, qword ptr [rdi + 0x68] ; ret
0x00000000004774df : nop ; mov rax, qword ptr [rdi + 0x98] ; ret
0x000000000047524f : nop ; mov rax, qword ptr [rsi + 0xb8] ; ret
0x00000000004783ef : nop ; mov rax, qword ptr [rsi + 8] ; ret
0x000000000043679f : nop ; movdqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x000000000047221f : nop ; pop rbx ; ret
0x00000000004677ec : nop ; push rcx ; std ; inc dword ptr [rbp + 0x5b0e78c0] ; ret
0x00000000004004cf : nop ; ret
0x000000000047d7b5 : nop ; sti ; call qword ptr [rax]
0x000000000047d7dd : nop ; sti ; inc dword ptr [rax] ; xchg eax, ecx ; sti ; jmp qword ptr [rax]
0x000000000047d7d5 : nop ; sti ; inc eax ; nop ; sti ; jmp rax
0x000000000047d7b9 : nop ; sti ; jmp qword ptr [rax]
0x000000000047d758 : nop ; sti ; jmp rax
0x0000000000464d2a : nop ; sub byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000047d708 : nop ; sub ebx, edi ; push qword ptr [rax] ; sub edi, ebx ; call rax
0x000000000040ebff : nop ; sub edx, dword ptr [rax + 0x10] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x000000000040c22f : nop ; test rdx, rdx ; jne 0x40c248 ; xor eax, eax ; ret
0x000000000040c22e : nop ; test rdx, rdx ; jne 0x40c249 ; xor eax, eax ; ret
0x000000000041dddf : nop ; vzeroupper ; xor eax, eax ; ret
0x000000000040c21f : nop ; xor eax, eax ; ret
0x00000000004370af : nop ; xor rax, rax ; ret
0x000000000047a573 : nop dword ptr [rax + rax] ; add rsp, 8 ; ret
0x0000000000407028 : nop dword ptr [rax + rax] ; call qword ptr [rbx]
0x0000000000474a63 : nop dword ptr [rax + rax] ; call rax
0x0000000000470448 : nop dword ptr [rax + rax] ; call rbx
0x000000000041495b : nop dword ptr [rax + rax] ; jmp rax
0x00000000004366db : nop dword ptr [rax + rax] ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x0000000000400a03 : nop dword ptr [rax + rax] ; pop rbp ; ret
0x0000000000409808 : nop dword ptr [rax + rax] ; pop rbx ; ret
0x00000000004009cb : nop dword ptr [rax + rax] ; ret
0x0000000000438aab : nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x000000000046110c : nop dword ptr [rax] ; add rax, 1 ; ret
0x0000000000414bd5 : nop dword ptr [rax] ; add rsp, 0x10 ; pop rbx ; ret
0x000000000045e865 : nop dword ptr [rax] ; mov eax, 0xffffffff ; ret
0x0000000000400a45 : nop dword ptr [rax] ; pop rbp ; ret
0x000000000043ac4c : nop dword ptr [rax] ; pop rbx ; ret
0x0000000000411215 : nop dword ptr [rax] ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000040582c : nop dword ptr [rax] ; ret
0x000000000040c15d : nop dword ptr [rax] ; xor eax, eax ; jmp 0x40c12d
0x000000000040db45 : nop dword ptr [rax] ; xor eax, eax ; ret
0x000000000045ff8d : nop dword ptr [rax] ; xor eax, eax ; vzeroupper ; ret
0x0000000000470447 : nop dword ptr cs:[rax + rax] ; call rbx
0x0000000000407027 : nop word ptr [rax + rax] ; call qword ptr [rbx]
0x0000000000474a62 : nop word ptr [rax + rax] ; call rax
0x000000000041495a : nop word ptr [rax + rax] ; jmp rax
0x000000000040d21a : nop word ptr [rax + rax] ; ret
0x000000000046fe82 : nop word ptr [rax + rax] ; xor eax, eax ; ret
0x000000000040f9eb : not edx ; mov byte ptr [rcx], dl ; je 0x40fa3b ; mov qword ptr [rsi], rcx ; ret
0x000000000041c957 : or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043198f : or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000041c985 : or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000041391d : or al, 0 ; add byte ptr [rax], al ; jmp 0x4138eb
0x0000000000462072 : or al, 0 ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x0000000000415db9 : or al, 0 ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000041360a : or al, 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000460548 : or al, 0 ; add byte ptr [rbx + rax - 0xd], dh ; ret
0x0000000000418186 : or al, 0x16 ; movzx eax, byte ptr [rdi + rdx] ; sub eax, ecx ; ret
0x000000000040f7f0 : or al, 0x1f ; sub dword ptr [rax], eax ; ret
0x000000000040b4e3 : or al, 0x24 ; mov rdi, rbx ; call rax
0x000000000046b439 : or al, 0x37 ; jae 0x46b3e7 ; xor eax, eax ; ret
0x0000000000416b00 : or al, 0x39 ; add al, byte ptr [rax] ; cmovne rax, rdx ; ret
0x00000000004972a4 : or al, 0x3e ; stc ; jmp qword ptr [rsi]
0x000000000046afa3 : or al, 0x48 ; add esp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043bf8d : or al, 0x48 ; add esp, 0x10 ; pop rbx ; ret
0x000000000046d397 : or al, 0x48 ; add esp, 0x38 ; ret
0x00000000004010d1 : or al, 0x48 ; mov eax, dword ptr [rsp + 0x18] ; call rax
0x000000000046fc13 : or al, 0x5b ; pop rbp ; pop r12 ; ret
0x00000000004486d3 : or al, 0x83 ; inc byte ptr [rbx] ; je 0x4486e7 ; ret
0x000000000044c89a : or al, 0x83 ; ret
0x000000000043a963 : or al, 0x83 ; ret 0x8301
0x000000000043a641 : or al, 0x86 ; add rcx, rsi ; jmp rcx
0x000000000043a6cb : or al, 0x89 ; ret 0xe283
0x0000000000416df3 : or al, 0x8a ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000042d2b4 : or al, 0x8a ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x00000000004253dd : or al, 0x8b ; add r9, r11 ; jmp r9
0x000000000041fe5d : or al, 0x8b ; lea r9, qword ptr [r11 + r9] ; jmp r9
0x0000000000462148 : or al, 0x8e ; add eax, dword ptr [rcx + rdx] ; ret
0x000000000041e78f : or al, 0x93 ; add rcx, r11 ; jmp rcx
0x000000000043656b : or al, 0x93 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x000000000041fe61 : or al, 0xb ; jmp r9
0x000000000043656f : or al, 0xb ; jmp rcx
0x000000000045e5cc : or al, 0xeb ; ret 0x5590
0x0000000000427923 : or al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x00000000004549f5 : or al, 0xf6 ; ret 0xf01
0x0000000000456fbc : or al, 0xf6 ; ret 0xf08
0x000000000047d6cd : or al, 0xfb ; call rax
0x000000000049bf34 : or al, 6 ; std ; call rdx
0x00000000004604fb : or al, byte ptr [rax] ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x000000000041cb37 : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000430521 : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000041cb65 : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000047720a : or al, byte ptr [rax] ; add byte ptr [rax], al ; mov edi, 1 ; call rax
0x000000000049be3b : or al, byte ptr [rcx] ; ret
0x0000000000415ef8 : or al, ch ; ret 0xfea5
0x00000000004994f9 : or bh, bl ; call qword ptr [rdx]
0x000000000047d6c9 : or bh, bl ; call rax
0x00000000004169e0 : or bh, dh ; ret 0
0x000000000047d6c5 : or bl, bh ; call rax
0x000000000040555d : or bl, byte ptr [rbx + 0x31] ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x0000000000478bfd : or bl, ch ; adc byte ptr [rax - 0x7d], cl ; ret
0x0000000000427ae3 : or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x000000000043c727 : or bl, dh ; ret
0x00000000004138d5 : or byte ptr [r11 + 0x94807e0], al ; ret
0x000000000043cb88 : or byte ptr [r11 + 0x94901e0], al ; ret 0x894d
0x000000000043cac6 : or byte ptr [r11 + r9*4 + 0x57], r9b ; adc byte ptr [rcx - 0x77], cl ; ret
0x0000000000409601 : or byte ptr [r8 + 0x29], r9b ; ret
0x000000000046f30f : or byte ptr [r8 + 2], r15b ; ret
0x00000000004096cf : or byte ptr [r8 - 0x3f], r9b ; sti ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret
0x0000000000434a18 : or byte ptr [r8 - 0x77], cl ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x0000000000410336 : or byte ptr [r8 - 0x77], r9b ; ret 0x8348
0x0000000000462592 : or byte ptr [r8 - 0x7b], cl ; sal byte ptr [rdi + 0x48], 0x89 ; ret
0x000000000046b465 : or byte ptr [r8 - 0x7b], cl ; sal byte ptr [rsp + rsi + 0x48], 0x89 ; ret
0x0000000000476c67 : or byte ptr [r9 + 0x63], r9b ; add al, 0x86 ; add rax, r14 ; jmp rax
0x0000000000434ad7 : or byte ptr [r9 - 0x76b7f7be], cl ; clc ; ret
0x0000000000409602 : or byte ptr [rax + 0x29], cl ; ret
0x000000000040af45 : or byte ptr [rax + 0x2b], cl ; push rbx ; cmp byte ptr [rax + 0x39], cl ; ret 0x2175
0x0000000000451d1a : or byte ptr [rax + 0x39], cl ; ret 0xf075
0x0000000000416126 : or byte ptr [rax + 0x39], cl ; ret 0xf475
0x000000000040eff9 : or byte ptr [rax + 0x39], cl ; sal byte ptr [rbx + 0x21], 1 ; movzx eax, byte ptr [rax] ; ret
0x000000000049568a : or byte ptr [rax + 0xb], cl ; add dh, byte ptr [rcx + 0xa] ; ret
0x0000000000410da6 : or byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret 0x8948
0x000000000043afe7 : or byte ptr [rax + 1], bh ; pop rbx ; pop rbp ; ret
0x0000000000469281 : or byte ptr [rax + 1], cl ; ret
0x000000000046f310 : or byte ptr [rax + 2], bh ; ret
0x00000000004096d0 : or byte ptr [rax - 0x3f], cl ; sti ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret
0x000000000040fb63 : or byte ptr [rax - 0x75], cl ; adc byte ptr [rcx - 0x7d], al ; ret
0x0000000000410333 : or byte ptr [rax - 0x75], cl ; or byte ptr [r8 - 0x77], r9b ; ret 0x8348
0x0000000000434a1d : or byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000040fe32 : or byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; ret
0x000000000040b198 : or byte ptr [rax - 0x77], cl ; fistp word ptr [rbx + 0x5d] ; jmp rax
0x0000000000434a19 : or byte ptr [rax - 0x77], cl ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x0000000000458d3a : or byte ptr [rax - 0x77], cl ; or cl, bpl ; ret 0xffe1
0x000000000047805e : or byte ptr [rax - 0x77], cl ; ret
0x0000000000410337 : or byte ptr [rax - 0x77], cl ; ret 0x8348
0x00000000004437b4 : or byte ptr [rax - 0x77], cl ; ret 0xc984
0x0000000000458d39 : or byte ptr [rax - 0x77], r9b ; or cl, bpl ; ret 0xffe1
0x000000000046aee8 : or byte ptr [rax - 0x7b], cl ; push qword ptr [rbp - 0x2e] ; ret
0x0000000000462593 : or byte ptr [rax - 0x7b], cl ; sal byte ptr [rdi + 0x48], 0x89 ; ret
0x000000000046b466 : or byte ptr [rax - 0x7b], cl ; sal byte ptr [rsp + rsi + 0x48], 0x89 ; ret
0x0000000000413968 : or byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000043cdd2 : or byte ptr [rax - 0x7d], cl ; ret
0x00000000004671e7 : or byte ptr [rax - 0x7d], cl ; ret 0x101
0x000000000046e93d : or byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000046973f : or byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043cb2e : or byte ptr [rax - 0xa], al ; mov byte ptr [rcx], 0x75 ; or esi, ebx ; ret
0x0000000000409ce6 : or byte ptr [rax - 1], bh ; pop rbx ; pop rbp ; ret
0x000000000040fce8 : or byte ptr [rax], 0 ; add bl, dh ; ret
0x000000000045ef7e : or byte ptr [rax], al ; add al, 0 ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000004657d2 : or byte ptr [rax], al ; add al, ch ; ret 0xfff9
0x000000000040fce9 : or byte ptr [rax], al ; add bl, dh ; ret
0x0000000000447e6a : or byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000041ce07 : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004306c1 : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000041cd45 : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000040df97 : or byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000414426 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x1bf
0x000000000043a715 : or byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000440501 : or byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000414326 : or byte ptr [rax], al ; add byte ptr [rcx + rdi - 0x3e], cl ; jne 0x4142f9 ; ret
0x0000000000431d7e : or byte ptr [rax], r8b ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000047745f : or byte ptr [rbp + 0x1a], dh ; mov rax, qword ptr [rax] ; ret
0x000000000046dca0 : or byte ptr [rbp + 0x39], cl ; ret
0x0000000000470316 : or byte ptr [rbp + 0x440f4cf6], al ; ret
0x000000000045dbea : or byte ptr [rbp + 0x708949c9], al ; xor byte ptr [rdi], cl ; ret 0x4389
0x00000000004774ce : or byte ptr [rbp + 4], dh ; mov qword ptr [rax], rdx ; ret
0x000000000046dab5 : or byte ptr [rbp + rcx*4 + 0x34], cl ; ret 0x8d4a
0x0000000000451ddf : or byte ptr [rbp + rcx*4 + 0x40], 0xff ; call 0x46e097
0x000000000043c5ac : or byte ptr [rbp - 0x7b], cl ; test byte ptr [rdi], 0x94 ; ret 0xc221
0x000000000043c0c3 : or byte ptr [rbp - 0x7b], cl ; test byte ptr [rdi], 0x94 ; ret 0xca21
0x000000000040b8a6 : or byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000401cb5 : or byte ptr [rbx + 0x5d], bl ; ret
0x000000000043d27e : or byte ptr [rbx + 0x94801e2], al ; ret 0x8948
0x00000000004138d6 : or byte ptr [rbx + 0x94807e0], al ; ret
0x000000000043cb89 : or byte ptr [rbx + 0x94901e0], al ; ret 0x894d
0x000000000043cac7 : or byte ptr [rbx + rcx*4 + 0x57], cl ; adc byte ptr [rcx - 0x77], cl ; ret
0x0000000000451577 : or byte ptr [rbx - 0x1776cf3b], al ; pop rbx ; pop rbp ; ret
0x000000000045e2a6 : or byte ptr [rbx - 0x3b7cb7fe], cl ; or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000408089 : or byte ptr [rbx - 0x76fefbbe], al ; ret 0xe281
0x0000000000467259 : or byte ptr [rbx], al ; add byte ptr [rax], al ; ret
0x000000000046f7ca : or byte ptr [rcx + 0x1f0fff], bh ; pop rbx ; ret
0x000000000046f0fb : or byte ptr [rcx + 0x29], cl ; ret 0x894c
0x00000000004748d6 : or byte ptr [rcx + 0x415d5be8], cl ; pop rsp ; pop r13 ; ret
0x000000000045ce43 : or byte ptr [rcx + 0x415d5bf0], cl ; pop rsp ; pop r13 ; ret
0x0000000000476c68 : or byte ptr [rcx + 0x63], cl ; add al, 0x86 ; add rax, r14 ; jmp rax
0x0000000000472c5b : or byte ptr [rcx + 1], cl ; ret 0x894c
0x000000000043d1f4 : or byte ptr [rcx + 9], cl ; rol dword ptr [rcx - 0x7d], cl ; ret 0x4801
0x000000000046e540 : or byte ptr [rcx + rax - 0x3e], cl ; mov rax, rdx ; pop rbx ; ret
0x0000000000406771 : or byte ptr [rcx + rcx*4 + 0x54], cl ; and al, 0x20 ; call rax
0x0000000000474173 : or byte ptr [rcx + rcx*4 - 0x16], cl ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [rax]
0x0000000000409271 : or byte ptr [rcx + rcx*4 - 1], cl ; call rax
0x000000000046f102 : or byte ptr [rcx - 0x2feeb728], cl ; pop rbp ; pop rbx ; ret
0x0000000000434ad8 : or byte ptr [rcx - 0x76b7f7be], cl ; clc ; ret
0x0000000000405bff : or byte ptr [rcx - 0x77], cl ; ret 0x8b4c
0x000000000040c20a : or byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x000000000046f543 : or byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], 0x3d ; ret 0x2319
0x0000000000491cde : or byte ptr [rdi + 0x26], al ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x0000000000467720 : or byte ptr [rdi + 0x315], 4 ; xor eax, eax ; ret
0x000000000049a4f9 : or byte ptr [rdi + 0xb], al ; push rsp ; ret
0x0000000000461f30 : or byte ptr [rdi], cl ; mov dh, 0xc0 ; add rsp, 0x58 ; ret
0x0000000000472d9b : or byte ptr [rdi], cl ; mov dh, 0xc0 ; neg eax ; ret
0x0000000000401340 : or byte ptr [rdi], cl ; ret 0x589
0x000000000042042b : or byte ptr [rdi], cl ; sub dword ptr [rdi], esp ; jmp r9
0x0000000000401191 : or byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000049452a : or byte ptr [rdx + 0xb], cl ; pop rdi ; ret
0x0000000000498138 : or byte ptr [rdx - 6], bl ; jmp qword ptr [rcx]
0x00000000004970a4 : or byte ptr [rdx], dh ; add byte ptr [rax], al ; test al, 0x65 ; clc ; jmp qword ptr [rbx]
0x00000000004004cb : or ch, byte ptr [rdx] ; add byte ptr [rsi - 0x70], ah ; ret
0x0000000000458d3d : or cl, bpl ; ret 0xffe1
0x0000000000448011 : or cl, byte ptr [rax + 0x39] ; ret 0x1176
0x0000000000408b74 : or cl, byte ptr [rax + 1] ; ret 0x8948
0x0000000000416152 : or cl, byte ptr [rax - 0x7d] ; ret 0x4801
0x00000000004736ba : or cl, byte ptr [rax - 0x7d] ; ret 0xf08
0x000000000049a4f7 : or cl, byte ptr [rsi] ; or byte ptr [rdi + 0xb], al ; push rsp ; ret
0x0000000000458d3e : or cl, ch ; ret 0xffe1
0x0000000000405eab : or cl, ch ; ret 0xfffc
0x0000000000427a03 : or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x0000000000479805 : or dh, bl ; ret
0x000000000043d0c8 : or dh, dh ; ret 0x7401
0x000000000040fe96 : or dh, dh ; ret 0x7502
0x000000000043ebc4 : or dh, dh ; ret 0x8902
0x0000000000412c51 : or dh, dh ; ret 0xf04
0x000000000043f18a : or dword ptr [rax + 1], 0xffffffd8 ; jmp rax
0x00000000004061cb : or dword ptr [rax + rax*8 - 0x38b79f8c], eax ; ret 0xfff0
0x00000000004426d7 : or dword ptr [rax - 0x7d], 0x394801c0 ; ret
0x000000000044577f : or dword ptr [rax - 0x7d], ecx ; ret
0x000000000044a0be : or dword ptr [rax - 0x7d], ecx ; ret 0x4101
0x000000000043329e : or dword ptr [rax - 1], ecx ; ret 0xc148
0x000000000045f1cb : or dword ptr [rax], eax ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x000000000041cd17 : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000431c2f : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000041cc55 : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000409ca7 : or dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x0000000000494885 : or dword ptr [rax], eax ; add byte ptr [rax], bl ; sub dh, bh ; call qword ptr [rax]
0x000000000044d1dd : or dword ptr [rax], eax ; add byte ptr [rcx - 0x77], cl ; ret
0x000000000041fbc6 : or dword ptr [rbp - 0xcffffff], 0xf ; outsd dx, dword ptr [rsi] ; push rdi ; ret 0xff3
0x000000000040af70 : or dword ptr [rbx], 0x20 ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000040f748 : or dword ptr [rbx], 8 ; pop rbx ; ret
0x000000000044cc9a : or dword ptr [rcx], eax ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000416987 : or dword ptr [rdx], eax ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x000000000046b7d6 : or dword ptr [rip + 0x23692b], 1 ; pop rbx ; ret
0x000000000045631f : or dword ptr [rsi - 0x2f], esi ; mov qword ptr [rdi], rsi ; ret
0x000000000049be38 : or eax, 0x10a0303 ; ret
0x000000000049be90 : or eax, 0x1370303 ; ret
0x0000000000436fc1 : or eax, 0x1c478d48 ; ret
0x00000000004009fa : or eax, 0x2af0bf5d ; push 0 ; jmp rax
0x0000000000472efe : or eax, 0x30c48348 ; pop rbx ; ret
0x000000000049be28 : or eax, 0x34b0303 ; ret
0x000000000049be5c : or eax, 0x35b0303 ; ret
0x000000000045c63a : or eax, 0x401f0f08 ; add byte ptr [rax - 0x7d], cl ; ret 0x8b04
0x000000000045bf92 : or eax, 0x401f0f08 ; add byte ptr [rcx - 0x7d], cl ; ret 0x4c01
0x000000000044a1ca : or eax, 0x441f0f ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000004328b2 : or eax, 0x48c0bc0f ; lea eax, dword ptr [rdi + rax] ; ret
0x000000000041c867 : or eax, 0x83480000 ; ret 0x4910
0x00000000004301e1 : or eax, 0x83480000 ; ret 0xe910
0x000000000041c895 : or eax, 0x83480000 ; ret 0xeb10
0x000000000045715d : or eax, 0x83fffffd ; ret
0x0000000000454ecc : or eax, 0x89480000 ; ret 0x8948
0x000000000044fa5f : or eax, 0x894c0000 ; ret 0x894c
0x0000000000460d72 : or eax, 0xc2bc0f48 ; shr rax, 2 ; ret
0x00000000004875b9 : or eax, 0xdbf0000 ; add byte ptr [rax], al ; ret 0xd
0x0000000000491313 : or eax, 0xeeb0f650 ; fcmovb st(0), st(3) ; ret
0x00000000004278b3 : or eax, 0xf7f0ff3 ; ret
0x000000000043b8dd : or eax, 0xffffffff ; ret
0x000000000041e4e9 : or eax, 1 ; ret
0x000000000041ca47 : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000430381 : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000041ca75 : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000049568c : or eax, dword ptr [rdx] ; jno 0x49569e ; ret
0x000000000049d112 : or eax, dword ptr [rdx] ; ret 0xe0a
0x000000000040ebf4 : or ebp, dword ptr [rbx] ; push rax ; sbb byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x0000000000410c5f : or ebp, dword ptr [rcx] ; add bl, dh ; ret
0x000000000049c001 : or ebp, edi ; jmp qword ptr [rsi]
0x000000000040a6bd : or ebp, edx ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000427a73 : or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x000000000040d966 : or ebx, esi ; ret
0x0000000000415cae : or ecx, dword ptr [rax + 0x63] ; ret
0x000000000040b897 : or ecx, dword ptr [rax + 1] ; ret 0x8949
0x0000000000442a79 : or ecx, dword ptr [rax - 0x7d] ; ret
0x000000000040f749 : or ecx, dword ptr [rax] ; pop rbx ; ret
0x000000000043cba2 : or edi, eax ; mov qword ptr [rdx], rdi ; pop rbx ; pop rbp ; ret
0x0000000000427993 : or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x000000000043cb34 : or esi, ebx ; ret
0x000000000040af71 : or esp, dword ptr [rax] ; mov eax, 0xffffffff ; pop rbx ; ret
0x0000000000494e42 : or esp, dword ptr [rsi + rcx + 0x18] ; ret
0x0000000000427ae2 : or r11b, r14b ; movq qword ptr [rdi], mm1 ; ret
0x0000000000427a72 : or r11d, r14d ; movq qword ptr [rdi], mm1 ; ret
0x0000000000427a02 : or r14b, r11b ; movq qword ptr [rdi], mm1 ; ret
0x0000000000427992 : or r14d, r11d ; movq qword ptr [rdi], mm1 ; ret
0x000000000049d111 : or r8d, dword ptr [r10] ; ret 0xe0a
0x0000000000448010 : or r9b, byte ptr [r8 + 0x39] ; ret 0x1176
0x000000000049be8f : or rax, 0x1370303 ; ret
0x000000000049be27 : or rax, 0x34b0303 ; ret
0x000000000049be5b : or rax, 0x35b0303 ; ret
0x000000000045c639 : or rax, 0x401f0f08 ; add byte ptr [rax - 0x7d], cl ; ret 0x8b04
0x000000000045bf91 : or rax, 0x401f0f08 ; add byte ptr [rcx - 0x7d], cl ; ret 0x4c01
0x000000000043b8dc : or rax, 0xffffffffffffffff ; ret
0x000000000049568b : or rax, qword ptr [rdx] ; jno 0x49569f ; ret
0x000000000043cba1 : or rdi, rax ; mov qword ptr [rdx], rdi ; pop rbx ; pop rbp ; ret
0x0000000000494e41 : or rsp, qword ptr [rsi + r9 + 0x18] ; ret
0x0000000000416cb6 : out 0, al ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x0000000000416b76 : out 0, eax ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x0000000000477f05 : out 0x41, eax ; call rdi
0x0000000000441832 : out 0x48, al ; add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000045df1d : out 0x48, al ; mov edi, ebx ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x0000000000415828 : out 0x48, eax ; sub eax, 0x10 ; ret
0x0000000000414f8d : out 0x4c, al ; mov edi, edi ; call 0x411236
0x0000000000414122 : out 0x4c, al ; mov edi, esi ; call 0x4103b6
0x000000000040180d : out 0x89, al ; out dx, eax ; call qword ptr [r15 + rbx*8]
0x0000000000474179 : out 0x89, al ; out dx, eax ; call qword ptr [rax]
0x0000000000474015 : out 0x89, al ; out dx, eax ; call qword ptr [rbx]
0x0000000000473fd5 : out 0x89, al ; out dx, eax ; call rax
0x00000000004901c0 : out 0xcf, eax ; movsb byte ptr [rdi], byte ptr [rsi] ; in eax, 0x24 ; outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x000000000045f1fc : out 0xe8, al ; mov dh, 0x12 ; cli ; dec dword ptr [rax + 1] ; ret
0x000000000042727a : out 0xf3, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004272fa : out 0xf3, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000491ee8 : out 0xf5, eax ; mov ch, 0xab ; ret
0x000000000041044e : out dx, al ; adc ch, byte ptr [rcx] ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000491317 : out dx, al ; fcmovb st(0), st(3) ; ret
0x000000000041699e : out dx, al ; jns 0x4169a8 ; add byte ptr [rsi + rax*8 - 0xd], dh ; ret
0x0000000000421a7a : out dx, al ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000044aa4a : out dx, al ; mov rdi, qword ptr [rsp + 8] ; call r12
0x000000000044aa75 : out dx, al ; mov rdi, r14 ; call r12
0x000000000044ab42 : out dx, al ; mov rdi, r15 ; mov rdx, r13 ; call r12
0x000000000044abb8 : out dx, al ; mov rdi, rbx ; call r12
0x0000000000453377 : out dx, al ; mov rdi, rbx ; call rax
0x000000000042768a : out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000431ade : out dx, al ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004058cd : out dx, al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000004797b2 : out dx, al ; stosb byte ptr [rdi], al ; and al, byte ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000040e199 : out dx, eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000040e1f1 : out dx, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000040180f : out dx, eax ; call qword ptr [r15 + rbx*8]
0x000000000047417b : out dx, eax ; call qword ptr [rax]
0x0000000000474017 : out dx, eax ; call qword ptr [rbx]
0x000000000044aa39 : out dx, eax ; call r12
0x0000000000478eed : out dx, eax ; call r14
0x0000000000415317 : out dx, eax ; call rax
0x00000000004609d2 : out dx, eax ; call rbx
0x00000000004218aa : out dx, eax ; mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004219a6 : out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x00000000004218f2 : out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000460b23 : out dx, eax ; mov r9, r14 ; call rbx
0x000000000040683a : out dx, eax ; mov rax, qword ptr [rsp + 8] ; call rax
0x000000000043ce7b : out dx, eax ; mov rsi, qword ptr [rax] ; call r14
0x000000000042770a : out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000431bdd : out dx, eax ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000041e813 : out dx, eax ; push rsi ; adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000041e828 : out dx, eax ; push rsi ; and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000041e83d : out dx, eax ; push rsi ; xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000438cf3 : out dx, eax ; ret 0xf66
0x000000000041fd2c : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x2373
0x000000000041fd15 : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x000000000041fcfe : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x5173
0x000000000041e7ba : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000497421 : out dx, eax ; stc ; jmp qword ptr [rbx]
0x0000000000499f05 : out dx, eax ; sti ; call rax
0x0000000000474e67 : out dx, eax ; xor byte ptr [rax - 0x77], cl ; ret 0x2148
0x000000000042faee : outsb dx, byte ptr [rsi] ; adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043711e : outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7504
0x0000000000491ac3 : outsb dx, byte ptr [rsi] ; ja 0x491a4c ; ret 0x48f
0x0000000000469280 : outsb dx, byte ptr [rsi] ; or byte ptr [rax + 1], cl ; ret
0x000000000048f804 : outsb dx, byte ptr [rsi] ; sahf ; ret 0x38ae
0x000000000040fc12 : outsd dx, dword ptr [rsi] ; and al, 0x89 ; adc byte ptr [r11 + 0x5d], r11b ; ret
0x0000000000416f48 : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000042b46e : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x000000000041fb2d : outsd dx, dword ptr [rsi] ; push rdi ; ret
0x000000000041fbcd : outsd dx, dword ptr [rsi] ; push rdi ; ret 0xff3
0x000000000045fc0a : outsd dx, dword ptr [rsi] ; push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x000000000041fb32 : outsd dx, dword ptr [rsi] ; ret
0x0000000000451999 : outsd dx, dword ptr [rsi] ; ret 0x290f
0x00000000004519c2 : outsd dx, dword ptr [rsi] ; ret 0x57e8
0x00000000004543c0 : outsd dx, dword ptr [rsi] ; ret 0x59e8
0x00000000004901c6 : outsd dx, dword ptr [rsi] ; ret 0x5ae4
0x000000000045439b : outsd dx, dword ptr [rsi] ; ret 0x8341
0x00000000004221e7 : outsd dx, dword ptr [rsi] ; ret 0x8b4c
0x000000000041fbd2 : outsd dx, dword ptr [rsi] ; ret 0xc2b2
0x000000000045fc5a : outsd dx, dword ptr [rsi] ; ret 0xf66
0x0000000000420645 : outsd dx, dword ptr [rsi] ; ret 5
0x0000000000451960 : outsd dx, dword ptr [rsi] ; sbb ah, byte ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; ret
0x00000000004901c5 : outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x000000000041c722 : pcmpeqb mm0, mm1 ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000461104 : pcmpeqb mm3, qword ptr [rcx] ; add rax, 2 ; ret
0x00000000004610ef : pcmpeqb mm3, qword ptr [rsi] ; ret
0x000000000041c721 : pcmpeqb xmm0, xmm1 ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x00000000004915c5 : pcmpeqw mm5, qword ptr [rbp + r12*2 - 0x5f] ; mov cs, edi ; ret 0x8b36
0x00000000004915c6 : pcmpeqw mm5, qword ptr [rbp - 0x5f] ; mov cs, edi ; ret 0x8b36
0x000000000043a3b6 : pextrw edi, mm0, 0x77 ; ret
0x000000000041d8e2 : pmovmskb eax, mm1 ; test eax, eax ; jne 0x41d949 ; xor eax, eax ; ret
0x0000000000432ecf : pmovmskb edx, mm4 ; test edx, edx ; je 0x432ee3 ; bsf eax, edx ; ret
0x000000000049cda9 : pop qword ptr [rax] ; add ah, dl ; pop rdi ; std ; jmp qword ptr [rdx]
0x000000000043dbd4 : pop r10 ; ret
0x0000000000491a4f : pop r10 ; sub ah, ah ; mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x000000000043ca41 : pop r12 ; jmp rax
0x000000000043ca26 : pop r12 ; mov esi, 2 ; jmp rax
0x000000000040b20e : pop r12 ; pop r13 ; jmp rax
0x0000000000414e2b : pop r12 ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x0000000000401f5d : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004005ef : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000407bb9 : pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x00000000004058d0 : pop r12 ; pop r13 ; pop r14 ; ret
0x000000000043ae67 : pop r12 ; pop r13 ; pop rbp ; ret
0x0000000000401d3b : pop r12 ; pop r13 ; ret
0x00000000004014b9 : pop r12 ; ret
0x000000000040b210 : pop r13 ; jmp rax
0x0000000000414e2d : pop r13 ; pop r14 ; pop r15 ; jmp rax
0x0000000000401f5f : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004005f1 : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000407bbb : pop r13 ; pop r14 ; pop rbp ; ret
0x00000000004058d2 : pop r13 ; pop r14 ; ret
0x000000000043ae69 : pop r13 ; pop rbp ; ret
0x0000000000401d3d : pop r13 ; ret
0x0000000000414e2f : pop r14 ; pop r15 ; jmp rax
0x0000000000401f61 : pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004005f3 : pop r14 ; pop r15 ; ret
0x0000000000407bbd : pop r14 ; pop rbp ; ret
0x00000000004058d4 : pop r14 ; ret
0x0000000000414e31 : pop r15 ; jmp rax
0x0000000000401f63 : pop r15 ; pop rbp ; ret
0x00000000004005f5 : pop r15 ; ret
0x000000000048c508 : pop rax ; add al, 0xfd ; call qword ptr [rax]
0x000000000048c51c : pop rax ; add al, 0xfd ; lcall ptr [rax + 4] ; std ; call qword ptr [rax]
0x0000000000471c56 : pop rax ; add dword ptr [rax + 0x39], ecx ; ret 0xd775
0x000000000044c47d : pop rax ; idiv edi ; dec dword ptr [rax - 0x39] ; ret 0x2b40
0x000000000046d1ec : pop rax ; jmp qword ptr [rax]
0x000000000049a4f6 : pop rax ; or cl, byte ptr [rsi] ; or byte ptr [rdi + 0xb], al ; push rsp ; ret
0x000000000046d2a6 : pop rax ; pop rdx ; pop rbx ; ret
0x000000000043bb5c : pop rax ; ret
0x0000000000499bcd : pop rbp ; add byte ptr [rax], al ; mov al, 0xa5 ; sti ; call qword ptr [rbx]
0x000000000046c847 : pop rbp ; cmp al, 0xf9 ; dec dword ptr [rax - 0x77] ; ret
0x000000000040b19d : pop rbp ; jmp rax
0x00000000004009fb : pop rbp ; mov edi, 0x6a2af0 ; jmp rax
0x000000000043ca40 : pop rbp ; pop r12 ; jmp rax
0x000000000043ca25 : pop rbp ; pop r12 ; mov esi, 2 ; jmp rax
0x000000000040b20d : pop rbp ; pop r12 ; pop r13 ; jmp rax
0x0000000000414e2a : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x00000000004005ee : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004058cf : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000401d3a : pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004014b8 : pop rbp ; pop r12 ; ret
0x0000000000414e2e : pop rbp ; pop r14 ; pop r15 ; jmp rax
0x0000000000401f60 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004005f2 : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000407bbc : pop rbp ; pop r14 ; pop rbp ; ret
0x00000000004058d3 : pop rbp ; pop r14 ; ret
0x000000000043ae6a : pop rbp ; pop rbp ; ret
0x000000000046f108 : pop rbp ; pop rbx ; ret
0x0000000000400a08 : pop rbp ; ret
0x000000000046fca1 : pop rbx ; add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x0000000000499a0d : pop rbx ; add byte ptr [rax], al ; and byte ptr [rbx + rdi*8], ah ; call rsp
0x000000000048ed98 : pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x000000000043a706 : pop rbx ; and eax, 0x7ff80000 ; ret
0x0000000000498229 : pop rbx ; cli ; call qword ptr [rcx]
0x000000000048ed96 : pop rbx ; cmc ; pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x00000000004135f1 : pop rbx ; jmp 0x40f883
0x000000000040d664 : pop rbx ; jmp rax
0x000000000046b7f7 : pop rbx ; mov eax, dword ptr fs:[rax] ; ret
0x000000000043a751 : pop rbx ; mov eax, eax ; ret
0x00000000004748e6 : pop rbx ; mov eax, ebp ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000045424d : pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x000000000040de49 : pop rbx ; mov ecx, edx ; xor edx, edx ; jmp rax
0x0000000000415301 : pop rbx ; mov rax, r8 ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000456445 : pop rbx ; mov rax, r9 ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000410462 : pop rbx ; mov rax, rdi ; pop rbp ; pop r12 ; ret
0x0000000000414930 : pop rbx ; mov rax, rdx ; pop rbp ; pop r12 ; ret
0x0000000000407bb8 : pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x000000000043ae66 : pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x000000000044806c : pop rbx ; pop r12 ; ret
0x00000000004492d0 : pop rbx ; pop r14 ; ret
0x000000000040b19c : pop rbx ; pop rbp ; jmp rax
0x000000000045df21 : pop rbx ; pop rbp ; pop r12 ; jmp rax
0x000000000043ca24 : pop rbx ; pop rbp ; pop r12 ; mov esi, 2 ; jmp rax
0x000000000040b20c : pop rbx ; pop rbp ; pop r12 ; pop r13 ; jmp rax
0x00000000004058ce : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000401d39 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004014b7 : pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000401cb6 : pop rbx ; pop rbp ; ret
0x0000000000400d28 : pop rbx ; ret
0x0000000000492080 : pop rbx ; ret 0x6f9
0x0000000000472fa5 : pop rbx ; sar rax, 3 ; pop rbp ; pop r12 ; ret
0x000000000043fd60 : pop rbx ; shl eax, cl ; pop rbp ; pop r12 ; ret
0x000000000040555e : pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000040de12 : pop rbx ; xor edx, edx ; jmp rax
0x0000000000499885 : pop rcx ; add byte ptr [rax], al ; mov byte ptr [rbx], bl ; sti ; call qword ptr [rax]
0x000000000049986d : pop rcx ; add byte ptr [rax], al ; sbb byte ptr [rbx], 0xfb ; call qword ptr [rbx]
0x0000000000499899 : pop rcx ; add byte ptr [rax], al ; test byte ptr [rbx], bl ; sti ; call qword ptr [rdx]
0x000000000049abb9 : pop rcx ; cld ; jmp qword ptr [rbx]
0x00000000004980d9 : pop rcx ; cli ; call qword ptr [rcx]
0x000000000046caef : pop rdi ; adc al, 9 ; ret 0x8b48
0x0000000000420428 : pop rdi ; adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000044449e : pop rdi ; add eax, dword ptr [rax] ; add bh, dh ; ret 0
0x000000000043226d : pop rdi ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000421e49 : pop rdi ; in al, dx ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000421c59 : pop rdi ; in eax, dx ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000049133e : pop rdi ; insd dword ptr [rdi], dx ; test eax, 0x7d4c8c5d ; ret 0xd8f
0x0000000000414e32 : pop rdi ; jmp rax
0x0000000000490301 : pop rdi ; mov dh, 0x4e ; ret 0x474c
0x0000000000421a79 : pop rdi ; out dx, al ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004218a9 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004219a5 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x00000000004218f1 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000401f64 : pop rdi ; pop rbp ; ret
0x00000000004005f6 : pop rdi ; ret
0x000000000049cdad : pop rdi ; std ; jmp qword ptr [rdx]
0x000000000041d0d6 : pop rdx ; add eax, 0x83480000 ; ret 0x4910
0x000000000046f52a : pop rdx ; and rax, qword ptr [rax] ; ret
0x00000000004981d9 : pop rdx ; cli ; call qword ptr [rax]
0x00000000004981f1 : pop rdx ; cli ; call qword ptr [rdx]
0x0000000000498139 : pop rdx ; cli ; jmp qword ptr [rcx]
0x0000000000498169 : pop rdx ; cli ; jmp qword ptr [rdi]
0x0000000000490f21 : pop rdx ; je 0x490eeb ; ret 0xacfc
0x0000000000491ee7 : pop rdx ; out 0xf5, eax ; mov ch, 0xab ; ret
0x000000000043dbd3 : pop rdx ; pop r10 ; ret
0x000000000046d2a7 : pop rdx ; pop rbx ; ret
0x000000000043dbf9 : pop rdx ; pop rsi ; ret
0x000000000043bbb5 : pop rdx ; ret
0x0000000000491a50 : pop rdx ; sub ah, ah ; mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x000000000043216e : pop rsi ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000499d85 : pop rsi ; add byte ptr [rax], al ; cwde ; ret
0x0000000000499d01 : pop rsi ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; ret 0xfffb
0x000000000049ad41 : pop rsi ; cld ; jmp qword ptr [rax]
0x0000000000414e30 : pop rsi ; pop r15 ; jmp rax
0x0000000000401f62 : pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004005f4 : pop rsi ; pop r15 ; ret
0x0000000000407bbe : pop rsi ; pop rbp ; ret
0x00000000004058d5 : pop rsi ; ret
0x00000000004488de : pop rsi ; ret 0xfffc
0x000000000042fd00 : pop rsp ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000041d3d4 : pop rsp ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000430a00 : pop rsp ; add eax, 0x83480000 ; ret 0xe910
0x000000000041254d : pop rsp ; and al, 0x10 ; mov qword ptr [rsp + 8], rax ; call rsi
0x000000000043ca42 : pop rsp ; jmp rax
0x00000000004957b4 : pop rsp ; jp 0x4957b1 ; call qword ptr [rdx]
0x000000000043ca27 : pop rsp ; mov esi, 2 ; jmp rax
0x000000000040b20f : pop rsp ; pop r13 ; jmp rax
0x0000000000414e2c : pop rsp ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x0000000000401f5e : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004005f0 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000407bba : pop rsp ; pop r13 ; pop r14 ; pop rbp ; ret
0x00000000004058d1 : pop rsp ; pop r13 ; pop r14 ; ret
0x000000000043ae68 : pop rsp ; pop r13 ; pop rbp ; ret
0x0000000000401d3c : pop rsp ; pop r13 ; ret
0x00000000004014ba : pop rsp ; ret
0x0000000000407b64 : popfq ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000049dbfd : popfq ; add byte ptr [rax], al ; mov al, 0xc4 ; std ; jmp qword ptr [rax]
0x0000000000458216 : popfq ; idiv rdi ; dec dword ptr [rax - 0x77] ; ret
0x0000000000476a2e : popfq ; ret 0xf45
0x0000000000468e3f : popfq ; ret 0xfffa
0x00000000004277d2 : psllq mm1, qword ptr [r15] ; jg 0x4277ed ; ret
0x000000000042a2f2 : psllq mm1, qword ptr [r15] ; jg 0x42a30d ; ret
0x00000000004277d3 : psllq mm1, qword ptr [rdi] ; jg 0x4277ec ; ret
0x000000000042a2f3 : psllq mm1, qword ptr [rdi] ; jg 0x42a30c ; ret
0x00000000004367e6 : psllq mm1, qword ptr [rdi] ; jg 0x4367fa ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000004367e5 : psllq mm1, qword ptr [rdi] ; jg 0x4367fb ; mov dword ptr [rdi + 0xf], ecx ; ret
0x0000000000436847 : psllq mm1, qword ptr [rdi] ; jg 0x43685c ; mov qword ptr [rdi + 0xf], rcx ; ret
0x0000000000497304 : push -0x27ffffcc ; pushfq ; stc ; call qword ptr [rax]
0x0000000000498a04 : push -0x77ffffb5 ; wait ; cli ; call qword ptr [rax]
0x0000000000437104 : push -0x9ffffff ; ret 0x7501
0x00000000004009ff : push 0 ; jmp rax
0x000000000049a6dd : push 0x41400000 ; cld ; jmp qword ptr [rdx]
0x0000000000409c4d : push 0x48 ; add esp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x0000000000491ac2 : push 0x6e ; ja 0x491a4d ; ret 0x48f
0x000000000040deda : push 0x75c08548 ; ret
0x000000000047d6f3 : push qword ptr [rax + 0x21] ; sti ; call qword ptr [rax]
0x000000000047d713 : push qword ptr [rax + 0x2e] ; sti ; call qword ptr [rax]
0x000000000047cd43 : push qword ptr [rax + 0x40fffab0] ; mov al, 0xfa ; call rax
0x000000000047d23b : push qword ptr [rax + 0x40fffad7] ; xlatb ; cli ; call rax
0x000000000047d76f : push qword ptr [rax + 0x4a] ; sti ; inc eax ; sti ; call qword ptr [rax]
0x000000000045e075 : push qword ptr [rax + rcx + 0x5b] ; ret
0x000000000047d46b : push qword ptr [rax - 0x38] ; cli ; jmp rax
0x000000000047cd73 : push qword ptr [rax - 0x55] ; cli ; call qword ptr [rsi]
0x000000000047c5db : push qword ptr [rax - 0x69] ; stc ; inc dword ptr [rax] ; xchg eax, edi ; stc ; jmp qword ptr [rax]
0x000000000047e67f : push qword ptr [rax] ; add esp, edi ; call qword ptr [rax]
0x00000000004783cd : push qword ptr [rax] ; jne 0x478400 ; mov rax, qword ptr [rsi + 0x10] ; ret
0x000000000047922d : push qword ptr [rax] ; jne 0x479260 ; mov rax, qword ptr [rsi + 0x10] ; ret
0x000000000047d70b : push qword ptr [rax] ; sub edi, ebx ; call rax
0x0000000000438a88 : push qword ptr [rbp + 0x1a] ; xor eax, eax ; ret
0x0000000000468394 : push qword ptr [rbp + 2] ; call rax
0x000000000041e499 : push qword ptr [rbp + 4] ; vzeroupper ; ret
0x000000000040de7d : push qword ptr [rbp + rax - 0xa] ; ret 0x7401
0x000000000047ccdf : push qword ptr [rbp + rbp*4 - 0x52bb0006] ; cli ; call rsp
0x000000000046aeeb : push qword ptr [rbp - 0x2e] ; ret
0x000000000040e230 : push qword ptr [rbp - 0x44] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000043b8cc : push qword ptr [rbx + 1] ; ret
0x000000000048c503 : push qword ptr [rbx + rax - 3] ; lcall ptr [rax + 4] ; std ; call qword ptr [rax]
0x000000000047df1b : push qword ptr [rcx + rbx*8 - 5] ; call rsp
0x00000000004580d8 : push qword ptr [rcx] ; fcmovnb st(0), st(6) ; test eax, esi ; idiv bh ; jmp qword ptr [rax]
0x000000000044d34c : push qword ptr [rcx] ; fcmovnb st(0), st(6) ; test esp, eax ; idiv bh ; jmp qword ptr [rax]
0x000000000040cc7f : push qword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x000000000043bf56 : push qword ptr [rdi + 0x3f] ; ret
0x000000000043bc86 : push qword ptr [rdi + 0x57] ; ret
0x000000000043bbb3 : push qword ptr [rdi + 0x5a] ; ret
0x000000000044a942 : push qword ptr [rdi + 0xb] ; ret
0x000000000043b95a : push qword ptr [rdi + 3] ; ret
0x000000000043bc49 : push qword ptr [rdi + 4] ; ret
0x000000000043b9a8 : push qword ptr [rdi + 5] ; ret
0x0000000000461cfe : push qword ptr [rdi + 7] ; ret
0x000000000043c725 : push qword ptr [rdi + 8] ; ret
0x000000000043bd1c : push qword ptr [rdi + 9] ; ret
0x0000000000461bb4 : push qword ptr [rdi + rax*2 - 0x77] ; ret 0xe283
0x000000000047ce0b : push qword ptr [rdx + 0x42fffaaf] ; scasd eax, dword ptr [rdi] ; cli ; call rdx
0x000000000047d303 : push qword ptr [rdx + 0x42fffad6] ; salc ; cli ; call rdx
0x000000000047de17 : push qword ptr [rdx + rbx*8] ; sti ; call qword ptr [rsi]
0x000000000047cda7 : push qword ptr [rsi + 0x46fffaac] ; lodsb al, byte ptr [rsi] ; cli ; call rsi
0x000000000047d29f : push qword ptr [rsi + 0x46fffad3] ; sar edx, cl ; call rsi
0x000000000047d1d7 : push qword ptr [rsp + rdx*8 - 0x2bbb0006] ; cli ; call rsp
0x000000000040d612 : push r8 ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000045db6a : push rax ; adc byte ptr [rax - 0x77], cl ; ret
0x000000000040ec01 : push rax ; adc byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x0000000000412005 : push rax ; adc dh, dh ; ret 0xf0f
0x000000000047e687 : push rax ; add ah, bh ; call rax
0x00000000004981ec : push rax ; add byte ptr [r8], al ; loopne 0x498253 ; cli ; call qword ptr [rdx]
0x000000000040d613 : push rax ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000400e70 : push rax ; and byte ptr [rax + 1], cl ; ret 0xb70f
0x00000000004404b8 : push rax ; call rbx
0x0000000000414448 : push rax ; clc ; sub byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000043b41e : push rax ; cld ; dec dword ptr [rax - 0x77] ; ret
0x0000000000497e00 : push rax ; cli ; jmp qword ptr [rcx]
0x000000000045d68c : push rax ; cmp byte ptr [rax + 1], cl ; ret
0x000000000049b2a0 : push rax ; je 0x49b2a2 ; jmp rbx
0x000000000045e909 : push rax ; lea r9, qword ptr [rsp + 0x18] ; mov rdi, r12 ; call rbx
0x000000000047cd6c : push rax ; lodsb al, byte ptr [rsi] ; cli ; jmp rax
0x000000000047d677 : push rax ; loopne 0x47d67d ; inc dword ptr [rax] ; jrcxz 0x47d681 ; call qword ptr [rax]
0x0000000000464de4 : push rax ; mov dh, 0xf9 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000446342 : push rax ; mov rdi, qword ptr [rsp + 0x48] ; call r14
0x0000000000443bf2 : push rax ; mov rdi, qword ptr [rsp + 0x48] ; call r15
0x000000000044f40c : push rax ; mul byte ptr [rax + rax] ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x000000000040fb62 : push rax ; or byte ptr [rax - 0x75], cl ; adc byte ptr [rcx - 0x7d], al ; ret
0x000000000040fe95 : push rax ; or dh, dh ; ret 0x7502
0x000000000043ebc3 : push rax ; or dh, dh ; ret 0x8902
0x0000000000471b1c : push rax ; ret 0xfffc
0x000000000047d264 : push rax ; sar edx, cl ; jmp rax
0x000000000040ebf6 : push rax ; sbb byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x000000000045e139 : push rax ; sbb byte ptr [rcx + 0x5bc0310b], cl ; ret
0x000000000047d6ec : push rax ; std ; cli ; call rax
0x000000000047d833 : push rax ; xchg eax, ebp ; sti ; call qword ptr [rax]
0x000000000047d877 : push rax ; xchg eax, edi ; sti ; call qword ptr [rax]
0x000000000047d857 : push rax ; xchg eax, esi ; sti ; call qword ptr [rax]
0x000000000047d807 : push rax ; xchg eax, esp ; sti ; inc dword ptr [rax] ; xchg eax, ebp ; sti ; call qword ptr [rax]
0x00000000004744fa : push rbp ; add bl, ch ; add eax, 0x1489066 ; ret 0xb70f
0x0000000000476d92 : push rbp ; add byte ptr [rax + 0x63], cl ; ret 0xbc80
0x00000000004993cd : push rbp ; add byte ptr [rax], al ; jo 0x4993d6 ; cli ; call rsp
0x000000000045757f : push rbp ; cmp byte ptr [rax + 0x39], cl ; ret
0x000000000047af27 : push rbp ; insb byte ptr [rdi], dx ; clc ; call rsi
0x000000000049da56 : push rbp ; ret
0x00000000004089e6 : push rbx ; adc byte ptr [rax + 1], cl ; ret 0x2b48
0x0000000000400fbf : push rbx ; adc byte ptr [rax - 0x7d], cl ; ret
0x000000000046b48f : push rbx ; adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000046f857 : push rbx ; add al, 0xf ; mov dh, 0xc0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000499259 : push rbx ; add byte ptr [rax], al ; hlt ; hlt ; cli ; jmp rax
0x000000000046d6a7 : push rbx ; and eax, dword ptr [rax] ; mov qword ptr [rax], rdx ; pop rbx ; ret
0x000000000040af48 : push rbx ; cmp byte ptr [rax + 0x39], cl ; ret 0x2175
0x000000000040ae36 : push rbx ; cmp byte ptr [rax + 0x39], cl ; ret 0x4b74
0x0000000000439c75 : push rbx ; jb 0x439c85 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000040af44 : push rbx ; or byte ptr [rax + 0x2b], cl ; push rbx ; cmp byte ptr [rax + 0x39], cl ; ret 0x2175
0x000000000047407f : push rbx ; ret
0x0000000000490f1c : push rbx ; xchg eax, edx ; jae 0x490efb ; push rsi ; pop rdx ; je 0x490ef0 ; ret 0xacfc
0x00000000004901a5 : push rcx ; call qword ptr [rsi]
0x000000000044ce16 : push rcx ; cmp byte ptr [rax + 0x39], cl ; ret
0x00000000004103d8 : push rcx ; dec dword ptr [rax - 0x7b] ; ret 0x850f
0x000000000042ac2d : push rcx ; jl 0x42ac7e ; adc dword ptr [rcx - 1], edi ; ret
0x000000000042ad94 : push rcx ; jl 0x42ade5 ; adc dword ptr [rcx + 7], edi ; ret
0x000000000043d0c7 : push rcx ; or dh, dh ; ret 0x7401
0x0000000000412c50 : push rcx ; or dh, dh ; ret 0xf04
0x0000000000410dad : push rcx ; sbb byte ptr [rcx + 1], cl ; ret 0x8d48
0x00000000004677ed : push rcx ; std ; inc dword ptr [rbp + 0x5b0e78c0] ; ret
0x000000000043de22 : push rdi ; adc byte ptr [rbx - 0x1e], dh ; ret
0x000000000043caca : push rdi ; adc byte ptr [rcx - 0x77], cl ; ret
0x0000000000436d2a : push rdi ; add al, 0x48 ; lea eax, dword ptr [rdi + 5] ; ret
0x0000000000427939 : push rdi ; add al, 0x48 ; mov dword ptr [rdi], ecx ; ret
0x00000000004995ad : push rdi ; add byte ptr [rax], al ; add byte ptr [rax], dl ; sti ; call qword ptr [rcx]
0x000000000043f093 : push rdi ; add byte ptr es:[rbp - 0xcf98b40], al ; ret
0x0000000000436ddc : push rdi ; add eax, 0xc478d48 ; ret
0x000000000044c4bf : push rdi ; and byte ptr [rcx + 0x2b], cl ; push rdi ; sbb byte ptr [rax + 0x39], cl ; ret 0x850f
0x000000000043de10 : push rdi ; and dh, al ; sub byte ptr [r9], r8b ; ret
0x0000000000421738 : push rdi ; clc ; ret
0x00000000004218b0 : push rdi ; cld ; ret
0x00000000004223d7 : push rdi ; cli ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000427219 : push rdi ; cmc ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000045d015 : push rdi ; cmp byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret 0xf41
0x0000000000427199 : push rdi ; hlt ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000426fea : push rdi ; int1 ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000040d524 : push rdi ; mov qword ptr [rdi + 8], rax ; ret
0x000000000042707a : push rdi ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000046f0fa : push rdi ; or byte ptr [rcx + 0x29], cl ; ret 0x894c
0x0000000000472c5a : push rdi ; or byte ptr [rcx + 1], cl ; ret 0x894c
0x000000000046f101 : push rdi ; or byte ptr [rcx - 0x2feeb728], cl ; pop rbp ; pop rbx ; ret
0x0000000000436fc0 : push rdi ; or eax, 0x1c478d48 ; ret
0x000000000041fb2e : push rdi ; ret
0x000000000041fbce : push rdi ; ret 0xff3
0x000000000040fbf0 : push rdi ; sbb byte ptr [rax + 0x39], cl ; ret
0x000000000044c4c3 : push rdi ; sbb byte ptr [rax + 0x39], cl ; ret 0x850f
0x00000000004225d7 : push rdi ; stc ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000421dfa : push rdi ; std ; mov word ptr [rdi - 2], cx ; ret
0x00000000004221d7 : push rdi ; sti ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000045fc0b : push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x000000000041d8e8 : push rdi ; xor eax, eax ; ret
0x0000000000459e8c : push rdx ; and al, 0 ; mov rax, qword ptr [rax + rsi*8] ; jmp rax
0x0000000000416d2a : push rdx ; insb byte ptr [rdi], dx ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x000000000047d32c : push rdx ; sar dl, cl ; jmp rdx
0x000000000047cffc : push rdx ; test al, 0xfa ; call rdx
0x000000000041e814 : push rsi ; adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000439319 : push rsi ; add ah, byte ptr [rdx - 0xf] ; jl 0x439370 ; adc dword ptr [rsi + 3], edx ; ret
0x0000000000499585 : push rsi ; add byte ptr [rax], al ; call 0x124990a2
0x000000000049956d : push rsi ; add byte ptr [rax], al ; loopne 0x499587 ; sti ; call qword ptr [rdi]
0x0000000000427bd1 : push rsi ; add cl, byte ptr [rbx + 0x257890e] ; mov dword ptr [rdi], ecx ; ret
0x0000000000427c41 : push rsi ; add dword ptr [rbx + 0x157890e], ecx ; mov dword ptr [rdi], ecx ; ret
0x0000000000436775 : push rsi ; add eax, 0x480f8948 ; mov dword ptr [rdi + 5], edx ; ret
0x0000000000427b61 : push rsi ; add ecx, dword ptr [rbx + 0x357890e] ; mov dword ptr [rdi], ecx ; ret
0x0000000000436713 : push rsi ; add ecx, dword ptr [rcx + 0x357890f] ; ret
0x000000000041e829 : push rsi ; and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000421862 : push rsi ; clc ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000049aba1 : push rsi ; cld ; jmp qword ptr [rax]
0x0000000000421fd1 : push rsi ; cld ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000421c05 : push rsi ; cld ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000421de5 : push rsi ; cld ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000421fc5 : push rsi ; cld ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000421a25 : push rsi ; cld ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000491ac0 : push rsi ; cli ; push 0x6e ; ja 0x491a4f ; ret 0x48f
0x00000000004385c6 : push rsi ; cmc ; sub eax, edx ; ret
0x000000000047cf8c : push rsi ; cmpsb byte ptr [rsi], byte ptr [rdi] ; cli ; call rsi
0x000000000047cf84 : push rsi ; cmpsd dword ptr [rsi], dword ptr [rdi] ; cli ; call rsi
0x00000000004385b6 : push rsi ; hlt ; sub eax, edx ; ret
0x0000000000438586 : push rsi ; int1 ; sub eax, edx ; ret
0x0000000000472146 : push rsi ; jmp qword ptr [rdx]
0x000000000047cf9c : push rsi ; movsb byte ptr [rdi], byte ptr [rsi] ; cli ; call rsi
0x000000000047cf94 : push rsi ; movsd dword ptr [rdi], dword ptr [rsi] ; cli ; call rsi
0x000000000045702e : push rsi ; or al, 0x83 ; ret
0x0000000000456fbb : push rsi ; or al, 0xf6 ; ret 0xf08
0x000000000043d27d : push rsi ; or byte ptr [rbx + 0x94801e2], al ; ret 0x8948
0x0000000000490f20 : push rsi ; pop rdx ; je 0x490eec ; ret 0xacfc
0x000000000048ee66 : push rsi ; ret
0x000000000047d288 : push rsi ; salc ; cli ; jmp rsi
0x0000000000456d91 : push rsi ; sbb byte ptr [rax - 0x3f], cl ; cli ; add cl, byte ptr [rax + 0x39] ; ret 0x850f
0x000000000047cd90 : push rsi ; scasd eax, dword ptr [rdi] ; cli ; jmp rsi
0x000000000044ae34 : push rsi ; sti ; dec dword ptr [rbp - 0x7b] ; dec dword ptr [rax - 0x77] ; ret
0x000000000044c900 : push rsi ; sub dh, al ; add byte ptr [rcx - 0x7d], cl ; ret
0x0000000000438596 : push rsi ; sub eax, edx ; ret
0x000000000041e83e : push rsi ; xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000499365 : push rsp ; add byte ptr [rax], al ; clc ; idiv edx ; call rbx
0x000000000046d90a : push rsp ; and al, 0x10 ; call rdx
0x00000000004481af : push rsp ; and al, 0x10 ; mov dword ptr [r12], edx ; jmp 0x448182
0x00000000004125d0 : push rsp ; and al, 0x10 ; mov qword ptr [rsp + 8], rax ; call rcx
0x0000000000416456 : push rsp ; and al, 0x18 ; jmp 0x416422
0x0000000000406774 : push rsp ; and al, 0x20 ; call rax
0x0000000000497fa1 : push rsp ; cli ; call qword ptr [rdx]
0x000000000047dec4 : push rsp ; fsincos ; jmp rax
0x000000000047ccc8 : push rsp ; mov al, 0xfa ; jmp rsp
0x000000000049a4fc : push rsp ; ret
0x000000000047d1c0 : push rsp ; xlatb ; cli ; jmp rsp
0x000000000042f9c0 : pushfq ; adc eax, 0x83480000 ; ret 0xe910
0x000000000049db95 : pushfq ; add byte ptr [rax], al ; cwde ; ret 0xfffd
0x00000000004429aa : pushfq ; and al, 0xa0 ; add byte ptr [rax], al ; add dh, dh ; ret 0x4801
0x000000000040dabb : pushfq ; and al, 0xd8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0x2b40
0x00000000004306c0 : pushfq ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000041c894 : pushfq ; or eax, 0x83480000 ; ret 0xeb10
0x0000000000476a67 : pushfq ; ret 0xf45
0x0000000000497309 : pushfq ; stc ; call qword ptr [rax]
0x000000000047d6d4 : rcl byte ptr [rax], 1 ; sti ; call rax
0x000000000047d830 : rcl byte ptr [rbp - 0x6a0f0005], 1 ; sti ; call qword ptr [rax]
0x000000000047d6dc : rcl byte ptr [rbx + rdi*8], 1 ; call rax
0x000000000047d7f8 : rcl byte ptr [rcx - 0x6e1f0005], 0xfb ; call rax
0x0000000000415e5a : rcl byte ptr [rcx], cl ; add al, byte ptr [rax] ; cmovne rax, rdx ; ret
0x000000000047d874 : rcl byte ptr [rdi - 0x680f0005], 1 ; sti ; call qword ptr [rax]
0x000000000047d6d8 : rcl byte ptr [rdx], 1 ; sti ; call rax
0x000000000047d854 : rcl byte ptr [rsi - 0x690f0005], 1 ; sti ; call qword ptr [rax]
0x000000000047d6e0 : rcl byte ptr [rsi], 1 ; sti ; call rax
0x0000000000416b3a : rcl cl, cl ; sub byte ptr [rax], al ; add dh, byte ptr [rax + rcx - 9] ; ret 0
0x000000000044117e : rcl dword ptr [rax + 0x48df8948], -0x7d ; ret
0x0000000000459e8b : rcl dword ptr [rdx + 0x24], 1 ; add byte ptr [rax - 0x75], cl ; add al, 0xf0 ; jmp rax
0x0000000000490f1f : rcl dword ptr [rsi + 0x5a], cl ; je 0x490eed ; ret 0xacfc
0x0000000000490f1b : rcpps xmm2, xmmword ptr [rdx + 0x5a56d373] ; je 0x490ef1 ; ret 0xacfc
0x000000000047d670 : rcr ah, 1 ; cli ; jmp rax
0x000000000047d6e4 : rcr byte ptr [rax], 1 ; sti ; call rax
0x000000000045f9f3 : rcr byte ptr [rbp + 0x41], 0x5c ; pop r13 ; pop r14 ; ret
0x0000000000415304 : rcr byte ptr [rbp + 0x41], 0x5c ; pop r13 ; ret
0x0000000000405560 : rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x0000000000414933 : rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x000000000046f107 : rcr byte ptr [rbp + 0x5b], 1 ; ret
0x0000000000414951 : rcr byte ptr [rbx + 0x48], cl ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x00000000004058f6 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; pop r14 ; ret
0x000000000040c20c : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x0000000000407246 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000477698 : rcr byte ptr [rbx + 0x5d], 0xc3 ; nop dword ptr [rax] ; ret
0x0000000000461a1c : rcr byte ptr [rbx + 0x5d], 1 ; pop r12 ; pop r13 ; ret
0x0000000000455f1c : rcr byte ptr [rbx + 0x5d], 1 ; pop r12 ; ret
0x00000000004082f2 : rcr byte ptr [rbx + 0x5d], 1 ; ret
0x000000000049133d : rcr byte ptr [rdi + 0x6d], cl ; test eax, 0x7d4c8c5d ; ret 0xd8f
0x000000000047d6f0 : rcr byte ptr [rdi], 1 ; sti ; push qword ptr [rax + 0x21] ; sti ; call qword ptr [rax]
0x000000000047a6de : rcr dword ptr [rbx + 0x5d], 1 ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000046da59 : rcr dword ptr [rcx], -0x40 ; and eax, 2 ; sub eax, 1 ; ret
0x0000000000439454 : rep movsb byte ptr [rdi], byte ptr [rsi] ; cld ; ret
0x0000000000439446 : rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000043a17a : rep stosb byte ptr [rdi], al ; mov rax, rdx ; ret
0x00000000004136e1 : rep stosq qword ptr [rdi], rax ; pop rbx ; ret
0x0000000000400416 : ret
0x0000000000400627 : ret 0
0x00000000004879c0 : ret 0x10
0x00000000004671ea : ret 0x101
0x000000000046f0dc : ret 0x114d
0x000000000046b61d : ret 0x1172
0x0000000000442387 : ret 0x1175
0x0000000000448014 : ret 0x1176
0x0000000000474f01 : ret 0x145
0x0000000000462031 : ret 0x1477
0x0000000000438528 : ret 0x148
0x000000000040e252 : ret 0x149
0x0000000000446028 : ret 0x14c
0x000000000042afef : ret 0x14d
0x000000000044282a : ret 0x1689
0x000000000043b7ce : ret 0x16e9
0x000000000041971a : ret 0x17
0x000000000041ddc6 : ret 0x1776
0x0000000000446f0d : ret 0x17e9
0x0000000000474835 : ret 0x17f
0x000000000042af2c : ret 0x180f
0x000000000041d955 : ret 0x1876
0x0000000000442700 : ret 0x1945
0x000000000044800b : ret 0x1a72
0x000000000049189a : ret 0x1ad4
0x000000000049002d : ret 0x1b49
0x0000000000478fcf : ret 0x1be8
0x000000000041442f : ret 0x1bf
0x0000000000416bea : ret 0x1c6
0x0000000000489690 : ret 0x1d4
0x0000000000489e28 : ret 0x1d5
0x0000000000400b81 : ret 0x1d89
0x000000000044b659 : ret 0x1de9
0x0000000000406803 : ret 0x1f0f
0x0000000000449b1d : ret 0x1fe9
0x000000000044a507 : ret 0x200
0x000000000043c28c : ret 0x2044
0x0000000000474e6b : ret 0x2148
0x000000000040af4c : ret 0x2175
0x0000000000474701 : ret 0x22
0x00000000004710f2 : ret 0x220
0x000000000046a3f8 : ret 0x2275
0x0000000000433298 : ret 0x2288
0x0000000000416cfa : ret 0x22a
0x0000000000465f79 : ret 0x23
0x000000000046f549 : ret 0x2319
0x0000000000471f32 : ret 0x2327
0x000000000041fd32 : ret 0x2373
0x0000000000464b32 : ret 0x23be
0x0000000000464c42 : ret 0x23c1
0x000000000043dec7 : ret 0x23e9
0x0000000000488698 : ret 0x24
0x000000000040bff9 : ret 0x2475
0x000000000040cff4 : ret 0x2501
0x000000000044b5a2 : ret 0x2557
0x0000000000476901 : ret 0x25e9
0x00000000004600e6 : ret 0x2774
0x0000000000414a85 : ret 0x2775
0x0000000000454173 : ret 0x27e9
0x00000000004154c1 : ret 0x28
0x0000000000421506 : ret 0x280f
0x000000000041d945 : ret 0x2876
0x000000000046a467 : ret 0x28f5
0x0000000000410822 : ret 0x290e
0x000000000045199a : ret 0x290f
0x000000000044ecdd : ret 0x2944
0x00000000004095f7 : ret 0x2948
0x00000000004768da : ret 0x2949
0x0000000000407520 : ret 0x294c
0x000000000040b2bd : ret 0x294d
0x000000000040e76e : ret 0x2954
0x0000000000471c31 : ret 0x2974
0x0000000000408602 : ret 0x2990
0x0000000000407fb6 : ret 0x2b40
0x00000000004089ea : ret 0x2b48
0x00000000004157fb : ret 0x2b74
0x0000000000413722 : ret 0x2b75
0x000000000043a5f2 : ret 0x2b77
0x0000000000400915 : ret 0x2b8
0x00000000004768ef : ret 0x2be9
0x000000000043dff0 : ret 0x2d75
0x000000000045b924 : ret 0x304
0x000000000045a9f2 : ret 0x30be
0x0000000000455292 : ret 0x3145
0x0000000000465f02 : ret 0x314c
0x0000000000453560 : ret 0x31e8
0x0000000000488b88 : ret 0x33
0x0000000000443db8 : ret 0x3389
0x0000000000406c1a : ret 0x348
0x000000000044eb0e : ret 0x349
0x0000000000474ca0 : ret 0x3575
0x000000000044899a : ret 0x36f
0x0000000000466eba : ret 0x3774
0x000000000041dda6 : ret 0x3776
0x000000000049117a : ret 0x3827
0x000000000045d26e : ret 0x3873
0x000000000041d935 : ret 0x3876
0x000000000040d92b : ret 0x389
0x000000000048f806 : ret 0x38ae
0x00000000004785b2 : ret 0x38e8
0x0000000000473cf0 : ret 0x3901
0x000000000044b93c : ret 0x3941
0x0000000000409281 : ret 0x3948
0x000000000040f4e0 : ret 0x3949
0x0000000000469d4c : ret 0x394c
0x0000000000438ba2 : ret 0x3a01
0x000000000041fd1b : ret 0x3a73
0x0000000000472aa3 : ret 0x3a83
0x00000000004715ad : ret 0x3b01
0x00000000004395c1 : ret 0x3b48
0x000000000043bf6f : ret 0x3b8
0x000000000044652f : ret 0x3b89
0x00000000004145aa : ret 0x3be9
0x0000000000443c8f : ret 0x3ce9
0x000000000046cae4 : ret 0x3d
0x000000000046ade8 : ret 0x3d73
0x000000000046e888 : ret 0x3d74
0x00000000004135b4 : ret 0x3d83
0x000000000044067a : ret 0x3e6
0x0000000000466d1a : ret 0x3e80
0x000000000046eb0a : ret 0x3f
0x000000000043e34e : ret 0x4001
0x0000000000449e57 : ret 0x4002
0x00000000004059ed : ret 0x4074
0x00000000004606c1 : ret 0x408d
0x000000000044a0c1 : ret 0x4101
0x000000000044f75e : ret 0x4108
0x000000000044f5ca : ret 0x4110
0x00000000004138a2 : ret 0x4173
0x000000000044259e : ret 0x41c3
0x000000000041839a : ret 0x4266
0x000000000045dbf3 : ret 0x4389
0x000000000040dc5f : ret 0x43e8
0x00000000004681f3 : ret 0x43e9
0x0000000000405531 : ret 0x4401
0x00000000004560ab : ret 0x4404
0x00000000004443cf : ret 0x445f
0x0000000000490304 : ret 0x474c
0x000000000046387b : ret 0x4773
0x00000000004164c6 : ret 0x4801
0x0000000000415199 : ret 0x4804
0x0000000000433223 : ret 0x4808
0x00000000004028f2 : ret 0x480a
0x0000000000411f56 : ret 0x4810
0x0000000000447ede : ret 0x4811
0x000000000044c357 : ret 0x481e
0x000000000044c377 : ret 0x4820
0x00000000004182a6 : ret 0x4840
0x0000000000432ed8 : ret 0x48c3
0x000000000040f593 : ret 0x48e9
0x0000000000491ac6 : ret 0x48f
0x00000000004054cc : ret 0x4901
0x0000000000445fb3 : ret 0x4902
0x0000000000410042 : ret 0x4908
0x000000000041c86c : ret 0x4910
0x000000000040c583 : ret 0x4a8d
0x000000000040ae3a : ret 0x4b74
0x0000000000444230 : ret 0x4c01
0x0000000000410974 : ret 0x4c10
0x0000000000491527 : ret 0x4e27
0x000000000043cf75 : ret 0x4f01
0x00000000004015ce : ret 0x4f76
0x000000000047241d : ret 0x5076
0x0000000000440b2f : ret 0x5089
0x000000000041fd04 : ret 0x5173
0x000000000044ea0d : ret 0x51ff
0x000000000043c1c7 : ret 0x5488
0x000000000043e2bf : ret 0x548b
0x000000000048f78c : ret 0x5508
0x000000000045e5ce : ret 0x5590
0x000000000041dd86 : ret 0x5776
0x0000000000425432 : ret 0x57c
0x00000000004519c3 : ret 0x57e8
0x0000000000491a58 : ret 0x5803
0x0000000000446e48 : ret 0x5841
0x0000000000401343 : ret 0x589
0x000000000048f460 : ret 0x591c
0x0000000000443fb3 : ret 0x5941
0x00000000004543c1 : ret 0x59e8
0x00000000004901c7 : ret 0x5ae4
0x000000000046c845 : ret 0x5de8
0x0000000000491ef2 : ret 0x62c1
0x0000000000468060 : ret 0x6349
0x00000000004597ac : ret 0x634c
0x000000000046fe24 : ret 0x637f
0x0000000000448813 : ret 0x6411
0x000000000041d8c1 : ret 0x6620
0x0000000000415ee8 : ret 0x66c3
0x0000000000416048 : ret 0x672
0x000000000046b62e : ret 0x674
0x000000000041dd76 : ret 0x6776
0x000000000048f47f : ret 0x67b2
0x000000000040dd05 : ret 0x6874
0x000000000043b87a : ret 0x6ae9
0x0000000000492081 : ret 0x6f9
0x000000000040de81 : ret 0x7401
0x0000000000415166 : ret 0x7402
0x00000000004680ca : ret 0x7403
0x000000000043c8f1 : ret 0x7404
0x000000000040f033 : ret 0x7408
0x000000000040a68d : ret 0x7420
0x00000000004527f4 : ret 0x7450
0x000000000046c83a : ret 0x7472
0x0000000000437109 : ret 0x7501
0x000000000040fe98 : ret 0x7502
0x0000000000437123 : ret 0x7504
0x0000000000438544 : ret 0x7508
0x00000000004370db : ret 0x7510
0x0000000000408622 : ret 0x7520
0x0000000000416c0e : ret 0x7540
0x0000000000405a1a : ret 0x755
0x000000000041ebf2 : ret 0x7677
0x00000000004043ed : ret 0x76b
0x0000000000454f41 : ret 0x76e9
0x0000000000472022 : ret 0x774
0x000000000046dd02 : ret 0x777
0x000000000046ef36 : ret 0x77f
0x0000000000412531 : ret 0x7ae9
0x0000000000402755 : ret 0x7be9
0x000000000041d861 : ret 0x7e20
0x000000000041dcdc : ret 0x7e40
0x0000000000416f4c : ret 0x7f10
0x00000000004254ce : ret 0x80
0x0000000000418129 : ret 0x8000
0x0000000000478272 : ret 0x8001
0x000000000044e92e : ret 0x8148
0x00000000004787c8 : ret 0x8166
0x000000000044c459 : ret 0x820f
0x000000000043a965 : ret 0x8301
0x000000000041e7c0 : ret 0x830f
0x000000000044c224 : ret 0x8341
0x0000000000415e25 : ret 0x8348
0x0000000000439020 : ret 0x8349
0x000000000046ac2f : ret 0x8364
0x000000000046243e : ret 0x8401
0x000000000040363b : ret 0x840f
0x000000000047551e : ret 0x8440
0x000000000040b372 : ret 0x850f
0x0000000000465a22 : ret 0x8545
0x00000000004024d5 : ret 0x8548
0x0000000000414aae : ret 0x854d
0x000000000040139c : ret 0x860f
0x000000000040f965 : ret 0x870f
0x000000000048ed9e : ret 0x871e
0x000000000041d965 : ret 0x876
0x0000000000451e91 : ret 0x87e
0x000000000047410c : ret 0x87f6
0x0000000000402600 : ret 0x8801
0x0000000000469d46 : ret 0x8844
0x0000000000401e07 : ret 0x8901
0x000000000043ebc6 : ret 0x8902
0x000000000040a40b : ret 0x8908
0x000000000044c216 : ret 0x8941
0x00000000004142ef : ret 0x8944
0x0000000000408b77 : ret 0x8948
0x000000000040b89a : ret 0x8949
0x0000000000408cf9 : ret 0x894c
0x000000000043cb8f : ret 0x894d
0x000000000046e53b : ret 0x894e
0x0000000000472640 : ret 0x8b
0x0000000000442418 : ret 0x8b01
0x000000000045c642 : ret 0x8b04
0x0000000000462123 : ret 0x8b05
0x00000000004915ce : ret 0x8b36
0x000000000044a45e : ret 0x8b41
0x000000000045b1f3 : ret 0x8b44
0x0000000000403002 : ret 0x8b48
0x00000000004094a6 : ret 0x8b49
0x000000000046e4be : ret 0x8b4a
0x0000000000405c02 : ret 0x8b4c
0x0000000000452f6e : ret 0x8c0f
0x00000000004463df : ret 0x8ce9
0x000000000047671f : ret 0x8d0f
0x0000000000412814 : ret 0x8d44
0x0000000000410db1 : ret 0x8d48
0x0000000000454ef0 : ret 0x8d49
0x000000000046dab9 : ret 0x8d4a
0x00000000004137ed : ret 0x8d4c
0x000000000040a135 : ret 0x8d4d
0x000000000044c232 : ret 0x8d89
0x0000000000451a59 : ret 0x8e0f
0x000000000044c4da : ret 0x8f0f
0x00000000004326a5 : ret 0x90c3
0x000000000043b208 : ret 0x9272
0x000000000045fca8 : ret 0x94c
0x000000000046f852 : ret 0x950f
0x00000000004903f3 : ret 0x9576
0x00000000004150fe : ret 0x976
0x000000000044a39a : ret 0x98e8
0x0000000000471c28 : ret 0x9eb
0x00000000004871c0 : ret 0xa
0x0000000000498340 : ret 0xa01
0x000000000043c918 : ret 0xa076
0x000000000043b744 : ret 0xa0e9
0x00000000004767de : ret 0xa4e9
0x00000000004900e3 : ret 0xa514
0x00000000004768dd : ret 0xa5e9
0x0000000000406864 : ret 0xa6e9
0x000000000043d52d : ret 0xabe
0x0000000000490567 : ret 0xac65
0x0000000000490f24 : ret 0xacfc
0x000000000040990d : ret 0xb074
0x000000000046c880 : ret 0xb2e8
0x000000000043b730 : ret 0xb4e9
0x000000000044c256 : ret 0xb589
0x0000000000474465 : ret 0xb5e8
0x00000000004025b8 : ret 0xb60f
0x0000000000400e74 : ret 0xb70f
0x00000000004594e1 : ret 0xb848
0x000000000047273a : ret 0xb8d8
0x000000000047223a : ret 0xb8dd
0x0000000000478632 : ret 0xb8e8
0x000000000049042e : ret 0xb9b9
0x0000000000468bf3 : ret 0xbbe9
0x0000000000476d96 : ret 0xbc80
0x000000000044c242 : ret 0xbd89
0x0000000000454650 : ret 0xbe07
0x0000000000490184 : ret 0xbe57
0x000000000041576c : ret 0xbe9
0x000000000041689c : ret 0xbee8
0x000000000040323a : ret 0xbfcd
0x0000000000417fe9 : ret 0xc000
0x0000000000402aee : ret 0xc031
0x000000000044885e : ret 0xc083
0x0000000000462ae3 : ret 0xc084
0x000000000041d720 : ret 0xc085
0x0000000000453438 : ret 0xc141
0x0000000000460cf9 : ret 0xc148
0x00000000004432c0 : ret 0xc149
0x0000000000456a9e : ret 0xc189
0x000000000043c5b2 : ret 0xc221
0x000000000041432b : ret 0xc275
0x000000000041fbd4 : ret 0xc2b2
0x000000000043a65e : ret 0xc35b
0x0000000000447db5 : ret 0xc389
0x000000000041432d : ret 0xc3f3
0x000000000048e922 : ret 0xc4c3
0x000000000048fd38 : ret 0xc4ff
0x000000000041dd41 : ret 0xc540
0x000000000046ac0d : ret 0xc74
0x00000000004335e0 : ret 0xc748
0x00000000004518f8 : ret 0xc789
0x0000000000454cb2 : ret 0xc931
0x00000000004437b7 : ret 0xc984
0x00000000004331f1 : ret 0xc9ff
0x0000000000400831 : ret 0xca21
0x000000000048f7ca : ret 0xcca7
0x00000000004918ad : ret 0xcd11
0x0000000000404932 : ret 0xce80
0x000000000040132e : ret 0xd
0x0000000000414c4f : ret 0xd020
0x00000000004066da : ret 0xd021
0x0000000000455d8c : ret 0xd089
0x000000000046cb3e : ret 0xd141
0x0000000000478d19 : ret 0xd1e8
0x00000000004648fc : ret 0xd201
0x0000000000401194 : ret 0xd284
0x0000000000447b9a : ret 0xd285
0x0000000000465c4d : ret 0xd348
0x000000000046b5b0 : ret 0xd589
0x0000000000441517 : ret 0xd5e9
0x000000000044b896 : ret 0xd774
0x0000000000471c5a : ret 0xd775
0x0000000000491345 : ret 0xd8f
0x000000000046c96c : ret 0xd8f7
0x000000000043d81b : ret 0xda80
0x000000000043a96c : ret 0xda89
0x00000000004082a3 : ret 0xdaf7
0x0000000000491426 : ret 0xdcd9
0x00000000004903a2 : ret 0xde5d
0x000000000048f131 : ret 0xde9e
0x000000000046469b : ret 0xdfe9
0x0000000000417ea9 : ret 0xe000
0x0000000000499a6f : ret 0xe01
0x0000000000437099 : ret 0xe074
0x000000000046e94d : ret 0xe075
0x000000000040d91c : ret 0xe083
0x000000000049d114 : ret 0xe0a
0x000000000047a72d : ret 0xe160
0x00000000004769a1 : ret 0xe1e9
0x000000000043f0d2 : ret 0xe1eb
0x0000000000406290 : ret 0xe281
0x0000000000400bb5 : ret 0xe283
0x000000000044dcef : ret 0xe2e9
0x000000000046256c : ret 0xe2eb
0x000000000040f9e2 : ret 0xe375
0x000000000045f9b8 : ret 0xe575
0x0000000000453b40 : ret 0xe57f
0x0000000000452ea5 : ret 0xe5e8
0x000000000043a652 : ret 0xe680
0x0000000000491546 : ret 0xe71f
0x0000000000415826 : ret 0xe775
0x0000000000453d65 : ret 0xe87f
0x000000000041e3a5 : ret 0xe883
0x0000000000464f52 : ret 0xe8c0
0x0000000000402889 : ret 0xe901
0x00000000004028cb : ret 0xe902
0x0000000000433286 : ret 0xe908
0x000000000042f826 : ret 0xe910
0x000000000044cacd : ret 0xe920
0x0000000000443f3d : ret 0xe95b
0x000000000048f8a7 : ret 0xe970
0x000000000043a5ea : ret 0xea81
0x0000000000400b9d : ret 0xeac1
0x0000000000469476 : ret 0xeb01
0x000000000041c89a : ret 0xeb10
0x0000000000492058 : ret 0xec2
0x000000000044a0c8 : ret 0xed75
0x0000000000491cfa : ret 0xef32
0x0000000000476568 : ret 0xef89
0x000000000041b68e : ret 0xf
0x0000000000417d69 : ret 0xf000
0x000000000040c49a : ret 0xf01
0x000000000041544c : ret 0xf02
0x0000000000412c53 : ret 0xf04
0x0000000000451d1d : ret 0xf075
0x0000000000409b93 : ret 0xf08
0x0000000000412008 : ret 0xf0f
0x0000000000416f02 : ret 0xf10
0x000000000047a7ce : ret 0xf320
0x000000000047a753 : ret 0xf3a0
0x0000000000454b29 : ret 0xf40
0x000000000045d01d : ret 0xf41
0x00000000004545b8 : ret 0xf45
0x0000000000416129 : ret 0xf475
0x0000000000442ede : ret 0xf48
0x000000000040f8f3 : ret 0xf49
0x000000000044ecbe : ret 0xf4c
0x0000000000454731 : ret 0xf50
0x000000000047a77c : ret 0xf560
0x000000000047a7a5 : ret 0xf5e0
0x0000000000461bc5 : ret 0xf631
0x000000000040f946 : ret 0xf641
0x0000000000418326 : ret 0xf66
0x00000000004669f7 : ret 0xf675
0x0000000000444e21 : ret 0xf685
0x000000000045d0dc : ret 0xf741
0x0000000000405052 : ret 0xf748
0x000000000046dce6 : ret 0xf749
0x0000000000417c29 : ret 0xf800
0x000000000048f010 : ret 0xf869
0x000000000040efe3 : ret 0xf8b
0x0000000000432b06 : ret 0xf8c5
0x000000000046883a : ret 0xf8e8
0x000000000047d028 : ret 0xfaa2
0x000000000047d020 : ret 0xfaa3
0x000000000047d018 : ret 0xfaa4
0x000000000047d010 : ret 0xfaa5
0x000000000047d008 : ret 0xfaa6
0x000000000047ce30 : ret 0xfaab
0x000000000047d538 : ret 0xfac6
0x000000000047d530 : ret 0xfac7
0x000000000047d328 : ret 0xfad2
0x000000000047a7f7 : ret 0xfb20
0x000000000047a820 : ret 0xfb80
0x0000000000417ae9 : ret 0xfc00
0x0000000000416a01 : ret 0xfc3
0x000000000043c462 : ret 0xfc3f
0x000000000047a872 : ret 0xfcc0
0x000000000047a89b : ret 0xfd40
0x000000000046271a : ret 0xfd92
0x000000000047a8c4 : ret 0xfda0
0x00000000004179a9 : ret 0xfe00
0x000000000047a704 : ret 0xfe60
0x0000000000400ce5 : ret 0xfe83
0x00000000004165b2 : ret 0xfe9e
0x0000000000415efa : ret 0xfea5
0x0000000000417869 : ret 0xff00
0x0000000000427041 : ret 0xff2
0x000000000043f24b : ret 0xff25
0x000000000041e569 : ret 0xff2d
0x00000000004182ca : ret 0xff3
0x000000000040fca0 : ret 0xff31
0x0000000000459416 : ret 0xff41
0x000000000047405a : ret 0xff5e
0x0000000000417729 : ret 0xff80
0x0000000000404ffa : ret 0xffb4
0x0000000000408fa7 : ret 0xffb8
0x00000000004412da : ret 0xffba
0x00000000004063f2 : ret 0xffc0
0x000000000041398e : ret 0xffdf
0x000000000044a540 : ret 0xffe0
0x0000000000458d40 : ret 0xffe1
0x000000000044e030 : ret 0xffe6
0x000000000045869a : ret 0xffe7
0x000000000045aa1a : ret 0xffe8
0x000000000043a97d : ret 0xffe9
0x000000000045a61a : ret 0xffec
0x0000000000407581 : ret 0xffef
0x00000000004157f2 : ret 0xfff
0x00000000004061d2 : ret 0xfff0
0x00000000004045eb : ret 0xfff1
0x0000000000417229 : ret 0xfff8
0x0000000000464205 : ret 0xfff9
0x000000000045e322 : ret 0xfffa
0x000000000044e2f2 : ret 0xfffb
0x0000000000405ead : ret 0xfffc
0x000000000040eb15 : ret 0xfffd
0x0000000000416fa9 : ret 0xfffe
0x00000000004135f4 : ret 0xffff
0x000000000041dfb5 : ret 1
0x000000000041dfdb : ret 2
0x0000000000411373 : ret 3
0x000000000041d16e : ret 4
0x0000000000420646 : ret 5
0x000000000040f348 : ret 6
0x000000000041ce2a : ret 7
0x000000000041e015 : ret 8
0x0000000000437b4a : ret 9
0x000000000047d515 : retf ; cli ; jmp rdx
0x0000000000477fb3 : retf ; mov rsi, qword ptr [r14] ; call r12
0x0000000000438c65 : rol bl, 0x48 ; mov eax, edi ; ret
0x000000000043a753 : rol bl, 0x48 ; mov eax, edx ; pop rbx ; ret
0x00000000004783ec : rol bl, 0x66 ; nop ; mov rax, qword ptr [rsi + 8] ; ret
0x000000000041d8be : rol bl, 0x83 ; ret 0x6620
0x0000000000460efb : rol bl, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000040ec07 : rol bl, 1 ; mov eax, 0xffffffff ; ret
0x000000000041e08d : rol bl, 1 ; nop ; xor eax, eax ; ret
0x000000000043960d : rol byte ptr [r9 + 0xf], 1 ; adc dword ptr [rbx], esp ; ret
0x000000000047a7c7 : rol byte ptr [rax + 0x1f], 0x96 ; dec dword ptr [rax - 0x39] ; ret 0xf320
0x000000000047a79e : rol byte ptr [rax + 0x1f], 0x96 ; dec dword ptr [rax - 0x39] ; ret 0xf5e0
0x000000000047a7f0 : rol byte ptr [rax + 0x1f], 0x96 ; dec dword ptr [rax - 0x39] ; ret 0xfb20
0x000000000047a819 : rol byte ptr [rax + 0x1f], 0x96 ; dec dword ptr [rax - 0x39] ; ret 0xfb80
0x000000000047a842 : rol byte ptr [rax + 0x1f], 0x96 ; dec dword ptr [rax - 0x39] ; ret 0xfc00
0x000000000047a86b : rol byte ptr [rax + 0x1f], 0x96 ; dec dword ptr [rax - 0x39] ; ret 0xfcc0
0x000000000047a894 : rol byte ptr [rax + 0x1f], 0x96 ; dec dword ptr [rax - 0x39] ; ret 0xfd40
0x000000000047a8bd : rol byte ptr [rax + 0x1f], 0x96 ; dec dword ptr [rax - 0x39] ; ret 0xfda0
0x000000000047a6fd : rol byte ptr [rax + 0x1f], 0x96 ; dec dword ptr [rax - 0x39] ; ret 0xfe60
0x000000000046ffb2 : rol byte ptr [rax + 0x23], cl ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x00000000004182a2 : rol byte ptr [rax + 0x48], 0x83 ; ret 0x4840
0x000000000041ddab : rol byte ptr [rax + 0x48], 1 ; clc ; vzeroupper ; ret
0x00000000004600e2 : rol byte ptr [rax + 0x49], 0x39 ; ret 0x2774
0x000000000048b060 : rol byte ptr [rax + rax], 0 ; ret 4
0x000000000041eafd : rol byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000043ebd3 : rol byte ptr [rax], 0 ; add dh, dh ; ret 0x7404
0x000000000047741e : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x0000000000407dc9 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000047d6b4 : rol byte ptr [rax], 1 ; sti ; call rax
0x000000000041db02 : rol byte ptr [rbp + 0x664975c0], 0xf ; xlatb ; ret 0xc085
0x000000000046caec : rol byte ptr [rbp - 0x75], 0x5f ; adc al, 9 ; ret 0x8b48
0x000000000047d6bc : rol byte ptr [rbx + rdi*8], 1 ; call rax
0x000000000046da5b : rol byte ptr [rbx - 0x177cfd20], 1 ; ret
0x000000000040f038 : rol byte ptr [rbx - 0x6af00002], 0xc0 ; neg eax ; ret
0x0000000000461162 : rol byte ptr [rbx], 0 ; add byte ptr [rax], al ; ret
0x000000000043a5e1 : rol byte ptr [rcx + 0xbeff], cl ; add byte ptr [rdi], cl ; lahf ; ret 0xea81
0x000000000043960e : rol byte ptr [rcx + 0xf], 1 ; adc dword ptr [rbx], esp ; ret
0x00000000004545b4 : rol byte ptr [rcx + 0xf], cl ; xchg eax, esp ; ret 0xf45
0x0000000000461142 : rol byte ptr [rcx], 0 ; add byte ptr [rax], al ; ret
0x00000000004404b6 : rol byte ptr [rcx], 0x50 ; call rbx
0x0000000000448d3b : rol byte ptr [rcx], 0x83 ; ret 0x4801
0x000000000040861d : rol byte ptr [rcx], 0x8b ; adc esi, esi ; ret 0x7520
0x000000000043a968 : rol byte ptr [rcx], 0xf ; scasd eax, dword ptr [rdi] ; ret 0xda89
0x000000000043fd41 : rol byte ptr [rcx], 1 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000047d768 : rol byte ptr [rdi - 5], 1 ; jmp qword ptr [rax]
0x00000000004611a2 : rol byte ptr [rdi], 0 ; add byte ptr [rax], al ; ret
0x0000000000461152 : rol byte ptr [rdx], 0 ; add byte ptr [rax], al ; ret
0x000000000047d6b8 : rol byte ptr [rdx], 1 ; sti ; call rax
0x0000000000461192 : rol byte ptr [rsi], 0 ; add byte ptr [rax], al ; ret
0x000000000047d6c0 : rol byte ptr [rsi], 1 ; sti ; call rax
0x000000000041de2f : rol ch, 1 ; std ; xlatb ; ret
0x000000000045fe56 : rol ch, cl ; std ; xlatb ; ret
0x000000000043319f : rol ch, cl ; std ; xlatb ; ret 0xc085
0x000000000048e920 : rol cl, 0xc2 ; ret
0x00000000004610ec : rol dword ptr [rax + 0x1e740fe1], 1 ; ret
0x0000000000453559 : rol dword ptr [rax + 0x2b], 0x6a ; add byte ptr [rax - 0x39], cl ; ret 0x31e8
0x000000000042542b : rol dword ptr [rax], 0 ; add byte ptr [rbp + rcx*4 + 0x1d], cl ; ret 0x57c
0x000000000041d8e4 : rol dword ptr [rbp + 0x315775c0], -0x40 ; ret
0x000000000041de23 : rol dword ptr [rbp - 0x3a378a40], -3 ; xlatb ; ret 0xc085
0x0000000000432c73 : rol dword ptr [rbp - 0x3a678a40], -3 ; xlatb ; ret 0xc085
0x0000000000400d4e : rol dword ptr [rbx + 0x5f640c9], 1 ; ret
0x000000000045187e : rol dword ptr [rcx + rdi - 0x39], 0x77 ; fadd qword ptr [rcx + rcx*4 - 0x38] ; ret
0x000000000043d1f7 : rol dword ptr [rcx - 0x7d], cl ; ret 0x4801
0x0000000000400899 : rol dword ptr [rcx], -0x73 ; call r11
0x000000000041e565 : rol ebp, 1 ; stc ; xlatb ; ret 0xff2d
0x00000000004157bc : rol ebx, 0x66 ; nop ; xor eax, eax ; ret
0x00000000004157bb : rol r11d, 0x66 ; nop ; xor eax, eax ; ret
0x000000000045ebe5 : ror byte ptr [r9 + rcx*4 - 1], 0x41 ; call rsp
0x0000000000474c88 : ror byte ptr [rax + 0x21], cl ; ret 0xc148
0x000000000041d932 : ror byte ptr [rax + 0x29], 0xc2 ; jbe 0x41d979 ; add rax, rdi ; ret
0x0000000000433037 : ror byte ptr [rax + 0x29], 1 ; clc ; ret
0x0000000000460e0c : ror byte ptr [rax + 0x29], 1 ; clc ; shr rax, 2 ; ret
0x000000000040915e : ror byte ptr [rax + 0x29], 1 ; ret
0x000000000046203c : ror byte ptr [rax + 0x39], 0xd7 ; ja 0x46206f ; ret
0x000000000043dba8 : ror byte ptr [rax + 0x39], 0xfa ; setae al ; ret
0x000000000046840a : ror byte ptr [rax + 0x39], cl ; ret
0x000000000045d273 : ror byte ptr [rax + 0x39], cl ; ret 0xf48
0x000000000040f9ec : ror byte ptr [rax + 0x48417411], cl ; mov dword ptr [rsi], ecx ; ret
0x000000000043f1fd : ror byte ptr [rax + 0x63], cl ; test dword ptr [rax], r8d ; add rax, rbp ; jmp rax
0x000000000044dceb : ror byte ptr [rax + 0xf], 0x44 ; ret 0xe2e9
0x00000000004044e4 : ror byte ptr [rax + 0xf], 0x44 ; shr cl, 1 ; ret
0x000000000044a469 : ror byte ptr [rax + 0xf], 1 ; ret 0x3949
0x000000000044a45a : ror byte ptr [rax + 0xf], 1 ; ret 0x8b41
0x000000000041d9dc : ror byte ptr [rax + 1], 0xf8 ; add rax, rcx ; ret
0x000000000041d902 : ror byte ptr [rax + 1], 0xf8 ; ret
0x000000000041ddf3 : ror byte ptr [rax + 1], 0xf8 ; vzeroupper ; ret
0x000000000040519b : ror byte ptr [rax + 1], 1 ; ret
0x0000000000433034 : ror byte ptr [rax + 1], cl ; ror byte ptr [rax + 0x29], 1 ; clc ; ret
0x0000000000487468 : ror byte ptr [rax + rax], 0 ; ret
0x000000000041e085 : ror byte ptr [rax - 0x2d], 0xfa ; movzx edx, dl ; sub eax, edx ; ret
0x0000000000457854 : ror byte ptr [rax - 0x3f], 0xf8 ; add al, byte ptr [rcx + 0x29] ; ret
0x000000000045782d : ror byte ptr [rax - 0x3f], 0xf8 ; add cl, byte ptr [rax + 0x29] ; ret
0x000000000043e078 : ror byte ptr [rax - 0x73], 0x3c ; ret
0x000000000041d8f2 : ror byte ptr [rax - 0x73], 0x44 ; cmp al, dh ; ret
0x000000000041d922 : ror byte ptr [rax - 0x73], 0x44 ; cmp byte ptr [rax], ah ; ret
0x000000000041d912 : ror byte ptr [rax - 0x73], 0x44 ; cmp byte ptr [rax], dl ; ret
0x00000000004157ee : ror byte ptr [rax - 0x73], 0x44 ; ret 0xfff
0x00000000004093a0 : ror byte ptr [rax - 0x77], 1 ; ret
0x0000000000474c9d : ror byte ptr [rax - 0x77], 1 ; ret 0x3575
0x0000000000449e14 : ror byte ptr [rax - 0x77], 1 ; ret 0x894c
0x000000000040bac0 : ror byte ptr [rax - 0x77], 1 ; ret 0x8b48
0x000000000046d442 : ror byte ptr [rax - 0x77], 1 ; ret 0xc148
0x000000000040628d : ror byte ptr [rax - 0x77], 1 ; ret 0xe281
0x0000000000414645 : ror byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; ret
0x000000000046f84c : ror byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x94 ; ret 0x950f
0x000000000046f545 : ror byte ptr [rax - 0x7d], 0x3d ; ret 0x2319
0x000000000040d5a5 : ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000461f33 : ror byte ptr [rax - 0x7d], 0xc4 ; pop rax ; ret
0x000000000040cc81 : ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x00000000004137e6 : ror byte ptr [rax - 0x7d], 1 ; call 0xffffffffc2ca8005
0x0000000000468398 : ror byte ptr [rax - 0x7d], 1 ; ret
0x0000000000407110 : ror byte ptr [rax - 0x7d], 1 ; ret 0x4801
0x0000000000473ced : ror byte ptr [rax], 0x83 ; ret 0x3901
0x000000000047d6c4 : ror byte ptr [rax], 1 ; sti ; call rax
0x00000000004607dc : ror byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x20 ; call rbx
0x0000000000454f3a : ror byte ptr [rbp - 0x7b], cl ; inc dword ptr [rcx + 0xf] ; xchg eax, esp ; ret 0x76e9
0x000000000047d6cc : ror byte ptr [rbx + rdi*8], 1 ; call rax
0x0000000000476367 : ror byte ptr [rcx + 0x63], 4 ; test byte ptr [rcx + rax - 0x20], cl ; jmp rax
0x0000000000414f8a : ror byte ptr [rcx + rcx*4 - 0x1a], cl ; mov rdi, r15 ; call 0x411239
0x0000000000474055 : ror byte ptr [rcx + rcx*4 - 0x3a], 0xe8 ; ret 0xff5e
0x000000000046a313 : ror byte ptr [rcx + rcx*4 - 0x40], 0x5b ; ret
0x000000000045ebe6 : ror byte ptr [rcx + rcx*4 - 1], 0x41 ; call rsp
0x000000000044150f : ror byte ptr [rcx - 0x7d], cl ; cmp al, 0x24 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd5e9
0x000000000045d0d4 : ror byte ptr [rcx - 9], cl ; cmc ; mov rbp, rax ; jmp 0x45d0a7
0x00000000004432bc : ror byte ptr [rdi + rcx + 0x49], cl ; ret 0xc149
0x000000000047d7a4 : ror byte ptr [rdi - 0x702f0005], 0xfb ; jmp rax
0x000000000043da9c : ror byte ptr [rdi], 0x44 ; ret 0x66c3
0x0000000000458697 : ror byte ptr [rdi], 0x82 ; ret 0xffe7
0x0000000000466130 : ror byte ptr [rdi], 0x84 ; cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, 0x83480000 ; ret
0x0000000000474368 : ror byte ptr [rdi], 0x84 ; leave ; add eax, dword ptr [rax] ; add byte ptr [rax + 1], cl ; ret
0x00000000004083ed : ror byte ptr [rdi], 0x84 ; lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000462189 : ror byte ptr [rdi], 0x84 ; nop ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000407b61 : ror byte ptr [rdi], 0x84 ; popfq ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000045542b : ror byte ptr [rdi], 0x84 ; ret 5
0x0000000000414819 : ror byte ptr [rdi], 0x85 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000043356a : ror byte ptr [rdi], 0x85 ; call qword ptr [rbx]
0x00000000004335a6 : ror byte ptr [rdi], 0x85 ; ret
0x000000000045aa17 : ror byte ptr [rdi], 0x85 ; ret 0xffe8
0x000000000043e5ff : ror byte ptr [rdi], 0x85 ; ret 0xfffe
0x000000000046cae1 : ror byte ptr [rdi], 0x94 ; ret 0x3d
0x000000000046f84f : ror byte ptr [rdi], 0x94 ; ret 0x950f
0x00000000004390de : ror byte ptr [rdi], 0x94 ; ret 0xc085
0x00000000004082a0 : ror byte ptr [rdi], 0x95 ; ret 0xdaf7
0x00000000004157eb : ror byte ptr [rdi], 0xb6 ; ror byte ptr [rax - 0x73], 0x44 ; ret 0xfff
0x000000000040c24e : ror byte ptr [rdi], 0xb6 ; sal bh, 0xd8 ; pop rbx ; ret
0x0000000000439555 : ror byte ptr [rdi], 1 ; adc dword ptr [rdi + rdx - 0x40], edi ; ret
0x00000000004062a2 : ror byte ptr [rdi], 1 ; mov dh, 0x17 ; test dl, dl ; jne 0x40628c ; ret
0x0000000000444483 : ror byte ptr [rdi], cl ; mov ch, ah ; add al, byte ptr [rax] ; add bh, dh ; ret 0xf800
0x000000000047d6c8 : ror byte ptr [rdx], 1 ; sti ; call rax
0x000000000047d6d0 : ror byte ptr [rsi], 1 ; sti ; call rax
0x000000000046fe4e : ror dword ptr [rax + 1], -8 ; sub rax, r8 ; ret
0x00000000004390e8 : ror dword ptr [rax + 1], -8 ; sub rax, rsi ; ret
0x000000000040b9dc : ror dword ptr [rax - 0x39], cl ; ret 0x2b40
0x0000000000474e64 : ror dword ptr [rax - 0x3f], cl ; out dx, eax ; xor byte ptr [rax - 0x77], cl ; ret 0x2148
0x000000000045ca2e : ror dword ptr [rax - 0x75], 4 ; ret 0x8548
0x000000000046e3eb : ror dword ptr [rax - 0x77], 0x34 ; ret 0x8348
0x0000000000454170 : ror dword ptr [rax - 0x77], 1 ; ret 0x27e9
0x0000000000465c4a : ror dword ptr [rax - 0x77], 1 ; ret 0xd348
0x0000000000470451 : ror dword ptr [rax - 0x77], cl ; ret
0x000000000040d4bd : ror dword ptr [rax - 0x7b], -0x2e ; jne 0x40d4b7 ; ret
0x000000000045db2d : ror dword ptr [rax - 0x7b], -0x2e ; jne 0x45db27 ; ret
0x000000000044c374 : ror dword ptr [rax - 0x7d], cl ; ret 0x4820
0x0000000000453b2b : ror dword ptr [rcx - 0x77], 0x14 ; ret
0x0000000000437097 : ror dword ptr [rcx], cl ; ret 0xe074
0x000000000043a97a : ror dword ptr [rdi], -0x51 ; ret 0xffe9
0x000000000041f368 : ror dword ptr [rdi], -0x7b ; adc byte ptr [rdx], cl ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000041fa74 : ror dword ptr [rdi], -0x7b ; add al, 3 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000041f846 : ror dword ptr [rdi], -0x7b ; add eax, 0xc0310000 ; ret
0x000000000041f7c6 : ror dword ptr [rdi], -0x7b ; cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, 0xc0310000 ; ret
0x000000000041fb04 : ror dword ptr [rdi], -0x7b ; je 0x41fb14 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000041f5fb : ror dword ptr [rdi], -0x7b ; jno 0x41f610 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000041f6c3 : ror dword ptr [rdi], -0x7b ; mov ch, 6 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000041f340 : ror dword ptr [rdi], -0x7b ; sub al, 0xa ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000456187 : ror eax, 0x24 ; add byte ptr [rax + 0x63], cl ; ret 0x8948
0x000000000040d4bc : ror qword ptr [r8 - 0x7b], -0x2e ; jne 0x40d4b8 ; ret
0x000000000045db2c : ror qword ptr [r8 - 0x7b], -0x2e ; jne 0x45db28 ; ret
0x0000000000431c2e : sahf ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000048f805 : sahf ; ret 0x38ae
0x0000000000476a54 : sahf ; ret 0xf45
0x0000000000460567 : sahf ; std ; dec dword ptr [rax + 0xf] ; ret 0x90c3
0x000000000040c251 : sal bh, 0xd8 ; pop rbx ; ret
0x000000000040f03e : sal bh, 0xd8 ; ret
0x0000000000418127 : sal bh, 1 ; ret 0x8000
0x0000000000417fe7 : sal bh, 1 ; ret 0xc000
0x0000000000417ea7 : sal bh, 1 ; ret 0xe000
0x0000000000417d67 : sal bh, 1 ; ret 0xf000
0x0000000000417c27 : sal bh, 1 ; ret 0xf800
0x0000000000417ae7 : sal bh, 1 ; ret 0xfc00
0x00000000004179a7 : sal bh, 1 ; ret 0xfe00
0x0000000000417867 : sal bh, 1 ; ret 0xff00
0x0000000000417727 : sal bh, 1 ; ret 0xff80
0x00000000004175e7 : sal bh, 1 ; ret 0xffc0
0x00000000004174a7 : sal bh, 1 ; ret 0xffe0
0x0000000000417367 : sal bh, 1 ; ret 0xfff0
0x0000000000417227 : sal bh, 1 ; ret 0xfff8
0x00000000004170e7 : sal bh, 1 ; ret 0xfffc
0x0000000000416fa7 : sal bh, 1 ; ret 0xfffe
0x0000000000460eef : sal bl, 1 ; ret
0x000000000046aeed : sal bl, cl ; ret
0x00000000004061cd : sal byte ptr [rax + 0x48], 0xc7 ; ret 0xfff0
0x000000000047a74c : sal byte ptr [rax + 0x48ffffff], 0xc7 ; ret 0xf3a0
0x00000000004424ed : sal byte ptr [rax + rsi + 0x48], 0x83 ; ret
0x00000000004603a2 : sal byte ptr [rbp + 0x2b], 0x4c ; mov eax, eax ; vzeroupper ; ret
0x000000000046d8fe : sal byte ptr [rbp + 0x4f], 0x89 ; ret
0x000000000040555b : sal byte ptr [rbp + 0xa], 0x5b ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x0000000000479803 : sal byte ptr [rbp + 0xa], 0xf3 ; ret
0x000000000040c232 : sal byte ptr [rbp + 0xb], cl ; xor eax, eax ; ret
0x0000000000467754 : sal byte ptr [rbp + 2], 0x5b ; ret
0x000000000040feca : sal byte ptr [rbp + 2], 1 ; ret
0x000000000047aa9a : sal byte ptr [rbp + 3], cl ; ret
0x00000000004797e8 : sal byte ptr [rbp + 5], 0xf3 ; ret
0x000000000046f790 : sal byte ptr [rbp + 5], cl ; ret
0x0000000000447226 : sal byte ptr [rbp + rcx*4 - 0x7b], 1 ; sal byte ptr [rcx + rcx*4 + 0x41], 0x89 ; ret 0x8ce9
0x0000000000443c86 : sal byte ptr [rbp + rdx*4 - 0x7b], 1 ; sal byte ptr [rcx + rdx*4 + 0x41], 0x89 ; ret 0x3ce9
0x00000000004463d6 : sal byte ptr [rbp + rdx*4 - 0x7b], 1 ; sal byte ptr [rcx + rdx*4 + 0x41], 0x89 ; ret 0x8ce9
0x000000000040dedd : sal byte ptr [rbp - 0x10], 0xf3 ; ret
0x0000000000438dd0 : sal byte ptr [rbp - 0x13], cl ; lea rax, qword ptr [rcx - 1] ; ret
0x000000000040d4c0 : sal byte ptr [rbp - 0x13], cl ; ret
0x000000000041844b : sal byte ptr [rbp - 0x1e], 0x31 ; shr byte ptr [rcx], 0xc8 ; ret
0x00000000004062a7 : sal byte ptr [rbp - 0x27], cl ; ret
0x000000000041de2d : sal byte ptr [rbp - 0x30], 0xc5 ; std ; xlatb ; ret
0x000000000041de25 : sal byte ptr [rbp - 0x38], 0xc5 ; std ; xlatb ; ret 0xc085
0x0000000000432c7d : sal byte ptr [rbp - 0x50], 0xc5 ; std ; xlatb ; ret
0x0000000000432c75 : sal byte ptr [rbp - 0x68], 0xc5 ; std ; xlatb ; ret 0xc085
0x0000000000460c4b : sal byte ptr [rbp - 0xe], cl ; ret
0x000000000043dbd0 : sal byte ptr [rbp - 0xf], 0x5a ; pop r10 ; ret
0x000000000040effc : sal byte ptr [rbx + 0x21], 1 ; movzx eax, byte ptr [rax] ; ret
0x000000000043ebbe : sal byte ptr [rbx + rbp + 0x48], 0x8b ; push rax ; or dh, dh ; ret 0x8902
0x000000000043afca : sal byte ptr [rbx + rcx + 0x48], cl ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000471c1f : sal byte ptr [rbx + rdi + 0x48], cl ; shl edx, 5 ; add rdx, rax ; jmp 0x471c3d
0x0000000000473ffd : sal byte ptr [rbx - 0x7d], 0xe8 ; add dword ptr [rbp + rcx*4 + 0x74], ecx ; ret
0x000000000044722a : sal byte ptr [rcx + rcx*4 + 0x41], 0x89 ; ret 0x8ce9
0x0000000000432f7c : sal byte ptr [rcx + rdx + 0x48], cl ; bsf eax, edx ; ret
0x0000000000443c8a : sal byte ptr [rcx + rdx*4 + 0x41], 0x89 ; ret 0x3ce9
0x00000000004463da : sal byte ptr [rcx + rdx*4 + 0x41], 0x89 ; ret 0x8ce9
0x00000000004404b2 : sal byte ptr [rcx], 0xd2 ; add eax, 1 ; push rax ; call rbx
0x000000000043dba6 : sal byte ptr [rcx], 1 ; ror byte ptr [rax + 0x39], 0xfa ; setae al ; ret
0x0000000000462596 : sal byte ptr [rdi + 0x48], 0x89 ; ret
0x00000000004600ab : sal byte ptr [rdx + 0x48], cl ; bsf eax, edx ; ret
0x000000000040040d : sal byte ptr [rdx + rax - 1], 0xd0 ; add rsp, 8 ; ret
0x000000000043e3db : sal byte ptr [rdx + rcx + 0x48], cl ; lea edi, dword ptr [rcx + rax + 0x20] ; jmp rdx
0x0000000000433293 : sal byte ptr [rdx + rdx + 0x48], 0xff ; ret 0x2288
0x000000000046fc11 : sal byte ptr [rsp + rcx + 0x5b], 0x5d ; pop r12 ; ret
0x000000000046b469 : sal byte ptr [rsp + rsi + 0x48], 0x89 ; ret
0x00000000004423d1 : sal dword ptr [rdi + rdx + 0xf], 0x1f ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000004394b3 : sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004370d6 : salc ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x000000000041fdf6 : salc ; add rdi, rdx ; add r9, r11 ; jmp r9
0x000000000047a2d1 : salc ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000043921a : salc ; clc ; ret
0x000000000047d309 : salc ; cli ; call rdx
0x000000000047d305 : salc ; cli ; inc dword ptr [rdx - 0x2a] ; cli ; call rdx
0x000000000047d289 : salc ; cli ; jmp rsi
0x000000000040553e : salc ; mov byte ptr [rcx], 0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000046a1e9 : salc ; mov eax, dword ptr [rcx] ; ret
0x00000000004029a4 : sar bh, 0xff ; dec dword ptr [rax - 0x39] ; ret
0x000000000043b883 : sar bh, 0xff ; dec dword ptr [rax - 0x39] ; ret 0xffff
0x000000000046b7f3 : sar bh, 0xff ; lcall ptr [rbx + 0x64] ; mov eax, dword ptr [rax] ; ret
0x000000000046f250 : sar bh, 0xff ; mov eax, 1 ; ret
0x000000000047a775 : sar byte ptr [rax + 0x48ffffff], 0xc7 ; ret 0xf560
0x00000000004677f1 : sar byte ptr [rax + 0xe], 0x5b ; ret
0x000000000043908e : sar byte ptr [rcx], 0xc8 ; jle 0x4390d0 ; movsxd rax, ecx ; ret
0x000000000043f0cd : sar byte ptr [rcx], cl ; ret
0x0000000000448856 : sar byte ptr [rdx], 0xf ; ret 0xc083
0x000000000049019f : sar byte ptr [rsi + rax*2], 0xf8 ; mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x000000000047d6b0 : sar dh, 1 ; cli ; call rax
0x000000000047d32d : sar dl, cl ; jmp rdx
0x000000000042a9f3 : sar dword ptr [rax + rcx*2 + 0x11], 1 ; jns 0x42a9fe ; ret
0x00000000004399c9 : sar dword ptr [rsi + 0x7f], 0x23 ; vzeroupper ; ret
0x000000000045e69c : sar eax, 2 ; lea eax, dword ptr [r8 - 1] ; ret
0x0000000000472fa7 : sar eax, 3 ; pop rbp ; pop r12 ; ret
0x000000000048ff03 : sar ecx, 1 ; jnp 0x48fec4 ; ret
0x0000000000463175 : sar ecx, cl ; dec dword ptr [rax + 0x39] ; ret
0x000000000047d2f9 : sar edx, 1 ; call qword ptr [rdx + 0x22fffad7]
0x000000000047d2f5 : sar edx, 1 ; jmp qword ptr [rdx]
0x000000000045e742 : sar edx, 2 ; sub eax, edx ; ret
0x000000000047d2a5 : sar edx, cl ; call rsi
0x000000000047d2a1 : sar edx, cl ; inc dword ptr [rsi - 0x2d] ; cli ; call rsi
0x000000000047d265 : sar edx, cl ; jmp rax
0x000000000041e087 : sar edx, cl ; movzx edx, dl ; sub eax, edx ; ret
0x0000000000439e83 : sar esi, 1 ; jg 0x439eb3 ; vzeroupper ; ret
0x000000000043a01c : sar esi, 1 ; jg 0x43a04c ; vzeroupper ; ret
0x000000000045e69b : sar r8, 2 ; lea eax, dword ptr [r8 - 1] ; ret
0x0000000000472fa6 : sar rax, 3 ; pop rbp ; pop r12 ; ret
0x000000000045e741 : sar rdx, 2 ; sub eax, edx ; ret
0x000000000041e086 : sar rdx, cl ; movzx edx, dl ; sub eax, edx ; ret
0x0000000000451961 : sbb ah, byte ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; ret
0x0000000000495b51 : sbb al, 0 ; add byte ptr [rsp + rax*4 - 9], cl ; jmp qword ptr [rsi]
0x000000000046d4a7 : sbb al, 0x48 ; add esp, 0x48 ; ret
0x000000000047d918 : sbb al, 0xcd ; sti ; call qword ptr [rax]
0x000000000047d920 : sbb al, 0xcd ; sti ; call qword ptr [rdi]
0x000000000047ec24 : sbb al, byte ptr [rdi] ; cld ; call rdx
0x000000000046f7a7 : sbb al, ch ; ret
0x00000000004939d1 : sbb bh, dh ; call rsp
0x000000000047d6e5 : sbb bl, bh ; call rax
0x000000000048ec85 : sbb bl, byte ptr [rsi] ; ret
0x0000000000416458 : sbb bl, ch ; ret
0x000000000046d2a4 : sbb byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x000000000046f849 : sbb byte ptr [r9], sil ; ror byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x94 ; ret 0x950f
0x0000000000469d49 : sbb byte ptr [rax + 0x29], cl ; ret 0x394c
0x000000000040fbf1 : sbb byte ptr [rax + 0x39], cl ; ret
0x000000000044c4c4 : sbb byte ptr [rax + 0x39], cl ; ret 0x850f
0x000000000046d2a5 : sbb byte ptr [rax + 0x5a], bl ; pop rbx ; ret
0x000000000044ab19 : sbb byte ptr [rax + 1], cl ; ret
0x0000000000456d92 : sbb byte ptr [rax - 0x3f], cl ; cli ; add cl, byte ptr [rax + 0x39] ; ret 0x850f
0x000000000047805a : sbb byte ptr [rax - 0x75], cl ; or byte ptr [rax - 0x77], cl ; ret
0x000000000046d907 : sbb byte ptr [rax - 0x75], cl ; push rsp ; and al, 0x10 ; call rdx
0x0000000000460b20 : sbb byte ptr [rax - 0x77], cl ; out dx, eax ; mov r9, r14 ; call rbx
0x000000000046b48c : sbb byte ptr [rax - 0x77], cl ; push rbx ; adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000043de0d : sbb byte ptr [rax - 0x77], cl ; push rdi ; and dh, al ; sub byte ptr [r9], r8b ; ret
0x000000000040d521 : sbb byte ptr [rax - 0x77], cl ; push rdi ; mov qword ptr [rdi + 8], rax ; ret
0x0000000000414615 : sbb byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; ret
0x000000000047041f : sbb byte ptr [rax - 0x77], cl ; ret
0x0000000000457499 : sbb byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000049abb4 : sbb byte ptr [rbp], ch ; add byte ptr [rax], ch ; pop rcx ; cld ; jmp qword ptr [rbx]
0x0000000000414658 : sbb byte ptr [rbx + 0x5d], bl ; jmp rax
0x000000000043ef2c : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000004098d7 : sbb byte ptr [rbx + 0x5d], bl ; ret
0x000000000040ebf7 : sbb byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x000000000049da1c : sbb byte ptr [rbx - 0x42600000], 0xfd ; call qword ptr [rdx]
0x0000000000498228 : sbb byte ptr [rbx - 6], bl ; call qword ptr [rcx]
0x0000000000499870 : sbb byte ptr [rbx], 0xfb ; call qword ptr [rbx]
0x000000000049a9b4 : sbb byte ptr [rbx], ch ; add al, bh ; cld ; jmp qword ptr [rbx]
0x000000000045e13a : sbb byte ptr [rcx + 0x5bc0310b], cl ; ret
0x0000000000410dae : sbb byte ptr [rcx + 1], cl ; ret 0x8d48
0x000000000045e90e : sbb byte ptr [rcx + rcx*4 - 0x19], cl ; call rbx
0x00000000004730a7 : sbb byte ptr [rcx - 0x77], cl ; ret 0x8d48
0x000000000041576a : sbb byte ptr [rcx], cl ; ret 0xbe9
0x0000000000414643 : sbb byte ptr [rcx], dh ; ror byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; ret
0x000000000046f84a : sbb byte ptr [rcx], dh ; ror byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x94 ; ret 0x950f
0x000000000049c778 : sbb byte ptr [rdx], dh ; std ; jmp qword ptr [rdx]
0x000000000041604d : sbb cl, byte ptr [rcx + rcx*4 - 0x30] ; pop rbx ; ret
0x00000000004037b4 : sbb cl, byte ptr [rcx - 0x7d] ; ret
0x000000000044800d : sbb cl, byte ptr [rdi] ; mov bh, 0x47 ; or cl, byte ptr [rax + 0x39] ; ret 0x1176
0x000000000043037d : sbb cl, byte ptr [rdi] ; xchg ah, bl ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000431fca : sbb cl, byte ptr [rdi] ; xchg bh, bh ; add eax, 0x83480000 ; ret 0x4910
0x00000000004317ea : sbb cl, byte ptr [rdi] ; xchg bh, bl ; or eax, 0x83480000 ; ret 0x4910
0x0000000000431bda : sbb cl, byte ptr [rdi] ; xchg bh, ch ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004313fa : sbb cl, byte ptr [rdi] ; xchg bh, cl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000430edd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004306bd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rcx - 0x7cb80000], bl ; ret 0xe910
0x000000000042fe9d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rdx - 0x7cb80000], bh ; ret 0xe910
0x0000000000431599 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax], dh ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004309fd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004301dd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rcx], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042f9bd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rdx - 0x7cb80000], bl ; ret 0xe910
0x0000000000430b9d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbx + rax - 0x7cb80000], bh ; ret 0xe910
0x0000000000431a8a : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], bh ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004312aa : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], bl ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004323ba : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], cl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042fcfd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx + rdx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042fe33 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], ah ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000430b33 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000430653 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], al ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043198b : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], bh ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004322bb : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000430e73 : sbb cl, byte ptr [rdi] ; xchg dh, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000430173 : sbb cl, byte ptr [rdi] ; xchg dh, ah ; or eax, 0x83480000 ; ret 0x4910
0x000000000042fc93 : sbb cl, byte ptr [rdi] ; xchg dh, al ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000430993 : sbb cl, byte ptr [rdi] ; xchg dh, al ; add eax, 0x83480000 ; ret 0x4910
0x0000000000431adb : sbb cl, byte ptr [rdi] ; xchg dh, ch ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004312fb : sbb cl, byte ptr [rdi] ; xchg dh, cl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000478385 : sbb dh, bl ; ret
0x000000000046f78c : sbb dl, 0 ; test dl, dl ; jne 0x46f7a0 ; ret
0x000000000046c377 : sbb dl, dh ; jmp r11
0x0000000000472f85 : sbb dword ptr [rax - 0x7d], ecx ; ret
0x0000000000478279 : sbb dword ptr [rax - 0x7d], ecx ; ret 0x8001
0x000000000043e259 : sbb dword ptr [rax - 0x7d], ecx ; ret 0xf01
0x00000000004957b1 : sbb dword ptr [rax], eax ; add byte ptr [rdx + rdi*2 - 9], bl ; call qword ptr [rdx]
0x0000000000459c2f : sbb dword ptr [rbx - 0x51f43], eax ; call qword ptr [rax]
0x000000000049153d : sbb dword ptr [rbx], edx ; mov ch, 0x99 ; in eax, 0xff ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x0000000000452b2e : sbb dword ptr [rdx + rdx*8 - 0x7cb6c28c], eax ; ret 0xf01
0x0000000000438aa7 : sbb eax, -1 ; ret
0x00000000004773d2 : sbb eax, 0x18c48348 ; ret
0x000000000047a3f0 : sbb eax, 0x22981b ; jne 0x47a3e0 ; pop rbx ; ret
0x000000000040f960 : sbb eax, 0x39490029 ; ret 0x870f
0x0000000000402750 : sbb eax, 0x89480001 ; ret 0x7be9
0x000000000044c352 : sbb eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x481e
0x000000000046da5a : sbb eax, eax ; and eax, 2 ; sub eax, 1 ; ret
0x000000000041e4e7 : sbb eax, eax ; or eax, 1 ; ret
0x0000000000477f5f : sbb eax, eax ; ret
0x0000000000438aa5 : sbb eax, eax ; sbb eax, -1 ; ret
0x000000000040fbeb : sbb ebp, dword ptr [rcx] ; add byte ptr [rcx + rax + 0x57], al ; sbb byte ptr [rax + 0x39], cl ; ret
0x0000000000416a61 : sbb ebp, dword ptr [rip + 0xf480002] ; ret 0x66c3
0x000000000047a3f1 : sbb ebx, dword ptr [rax - 0x1e8affde] ; pop rbx ; ret
0x0000000000499889 : sbb edi, ebx ; call qword ptr [rax]
0x0000000000499871 : sbb edi, ebx ; call qword ptr [rbx]
0x000000000049989d : sbb edi, ebx ; call qword ptr [rdx]
0x000000000049392d : sbb edi, esi ; jmp rsp
0x000000000041d582 : scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043201e : scasb al, byte ptr [rdi] ; add eax, 0x83480000 ; ret 0xe910
0x000000000047aff5 : scasb al, byte ptr [rdi] ; clc ; jmp qword ptr [rax]
0x000000000047cd59 : scasb al, byte ptr [rdi] ; cli ; call qword ptr [rax]
0x000000000047cd9d : scasb al, byte ptr [rdi] ; cli ; call qword ptr [rsi + 0x26fffaad]
0x000000000043211d : scasd eax, dword ptr [rdi] ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000047ce11 : scasd eax, dword ptr [rdi] ; cli ; call rdx
0x000000000047ce0d : scasd eax, dword ptr [rdi] ; cli ; inc dword ptr [rdx - 0x51] ; cli ; call rdx
0x000000000047cd91 : scasd eax, dword ptr [rdi] ; cli ; jmp rsi
0x000000000040c21e : scasd eax, dword ptr [rdi] ; nop ; xor eax, eax ; ret
0x00000000004073fb : scasd eax, dword ptr [rdi] ; ret
0x000000000044a9be : scasd eax, dword ptr [rdi] ; ret 0x148
0x00000000004095f6 : scasd eax, dword ptr [rdi] ; ret 0x2948
0x0000000000410da9 : scasd eax, dword ptr [rdi] ; ret 0x8948
0x000000000043a96b : scasd eax, dword ptr [rdi] ; ret 0xda89
0x000000000043a97c : scasd eax, dword ptr [rdi] ; ret 0xffe9
0x000000000043a979 : scasd eax, dword ptr [rdi] ; ror dword ptr [rdi], -0x51 ; ret 0xffe9
0x000000000043dbac : setae al ; ret
0x000000000044a6ea : sete dh ; mov dword ptr [rbx + 0x40], esi ; xor eax, eax ; pop rbx ; ret
0x000000000040c24c : setne al ; movzx eax, al ; neg eax ; pop rbx ; ret
0x000000000040f03c : setne al ; neg eax ; ret
0x000000000043f0d0 : setne dl ; jmp 0x43f0b8
0x000000000041ddcb : shl byte ptr [rax + 0x48], 1 ; clc ; vzeroupper ; ret
0x000000000047a726 : shl byte ptr [rax + 0x48ffffff], 0xc7 ; ret 0xe160
0x000000000047cf78 : shl byte ptr [rax - 0x57990006], 0xfa ; jmp rsi
0x000000000041dd8b : shl byte ptr [rax], 0x48 ; add eax, edi ; vzeroupper ; ret
0x0000000000438cef : shl byte ptr [rsi + 0x44], 0xf ; out dx, eax ; ret 0xf66
0x0000000000437093 : shl byte ptr [rsi + 0xf], 0xd7 ; ror dword ptr [rcx], cl ; ret 0xe074
0x0000000000432845 : shl byte ptr [rsi + 0xf], 0xeb ; ret 0xf66
0x000000000041fcfb : shl byte ptr [rsi + 0xf], 0xef ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x5173
0x000000000041fd12 : shl byte ptr [rsi + 0xf], 1 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x000000000045fc46 : shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x000000000045fc57 : shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret 0xf66
0x000000000041fbf1 : shl byte ptr [rsi + 0xf], cl ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000488690 : shl dword ptr [rax + rax], 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x24
0x0000000000490088 : shl dword ptr [rdi - 5], 1 ; ret
0x000000000041fc76 : shl dword ptr [rsi + 0xf], -0x11 ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000438b4b : shl dword ptr [rsi + 0xf], -0x26 ; ret
0x000000000045fc42 : shl dword ptr [rsi + 0xf], -0x29 ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x000000000041fd2d : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x2373
0x000000000041fd16 : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x000000000041fcff : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x5173
0x000000000041e7bb : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000041fc91 : shl dword ptr [rsi + 0xf], 1 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000041d71c : shl dword ptr [rsi + 0xf], 1 ; xlatb ; ret 0xc085
0x000000000041fb51 : shl dword ptr [rsi + 0xf], cl ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000043fd61 : shl eax, cl ; pop rbp ; pop r12 ; ret
0x000000000043fd5d : shl ecx, 3 ; pop rbx ; shl eax, cl ; pop rbp ; pop r12 ; ret
0x000000000046df6c : shl ecx, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x000000000046def7 : shl ecx, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x000000000046dec6 : shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x0000000000471c23 : shl edx, 5 ; add rdx, rax ; jmp 0x471c39
0x000000000046df6b : shl r9, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x000000000046def6 : shl r9, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x000000000046dec5 : shl r9, cl ; mov qword ptr [rdi], r9 ; ret
0x0000000000471c22 : shl rdx, 5 ; add rdx, rax ; jmp 0x471c3a
0x000000000047d710 : shr byte ptr [rbx + rdi*8], 1 ; push qword ptr [rax + 0x2e] ; sti ; call qword ptr [rax]
0x00000000004976b0 : shr byte ptr [rbx], 0xfa ; call qword ptr [rdx]
0x000000000041844f : shr byte ptr [rcx], 0xc8 ; ret
0x00000000004169fa : shr byte ptr [rcx], cl ; add al, byte ptr [rax] ; cmovne rax, rdx ; ret
0x0000000000447bc8 : shr byte ptr [rcx], cl ; ret
0x000000000041e08b : shr byte ptr [rcx], cl ; rol bl, 1 ; nop ; xor eax, eax ; ret
0x00000000004044e8 : shr cl, 1 ; ret
0x0000000000476eb2 : shr cl, 1 ; ret 0xfffe
0x00000000004769bf : shr cl, cl ; ret
0x000000000043a66a : shr eax, 0xe ; and eax, 0x3fc00 ; pop rbx ; ret
0x0000000000460cfb : shr eax, 2 ; ret
0x0000000000461203 : shr eax, 2 ; vzeroupper ; ret
0x000000000043a6b5 : shr eax, 6 ; and eax, 0x3fffc00 ; pop rbx ; ret
0x00000000004136de : shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; pop rbx ; ret
0x000000000046e07c : shr ecx, cl ; mov qword ptr [rdi + 0x10], r9 ; ret
0x000000000046e001 : shr ecx, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x000000000046dfd0 : shr ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x000000000046e07b : shr r9, cl ; mov qword ptr [rdi + 0x10], r9 ; ret
0x000000000046e000 : shr r9, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x000000000046dfcf : shr r9, cl ; mov qword ptr [rdi], r9 ; ret
0x0000000000460cfa : shr rax, 2 ; ret
0x0000000000461202 : shr rax, 2 ; vzeroupper ; ret
0x0000000000465941 : sldt word ptr [rax] ; add byte ptr [rax - 0x77], cl ; fucompi st(0) ; ret
0x0000000000487869 : sldt word ptr [rax] ; ret
0x0000000000460546 : stc ; add byte ptr [rax + rax], cl ; add byte ptr [rbx + rax - 0xd], dh ; ret
0x0000000000497292 : stc ; call qword ptr [rax]
0x0000000000463176 : stc ; dec dword ptr [rax + 0x39] ; ret
0x0000000000464de6 : stc ; dec dword ptr [rax - 0x77] ; ret
0x000000000047c5de : stc ; inc dword ptr [rax] ; xchg eax, edi ; stc ; jmp qword ptr [rax]
0x00000000004310d2 : stc ; je 0x43109e ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000047c5e2 : stc ; jmp qword ptr [rax]
0x0000000000497422 : stc ; jmp qword ptr [rbx]
0x00000000004972a6 : stc ; jmp qword ptr [rsi]
0x000000000048ff04 : stc ; jnp 0x48fec3 ; ret
0x00000000004225d8 : stc ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000045631e : stc ; or dword ptr [rsi - 0x2f], esi ; mov qword ptr [rdi], rsi ; ret
0x000000000047c5da : stc ; push qword ptr [rax - 0x69] ; stc ; inc dword ptr [rax] ; xchg eax, edi ; stc ; jmp qword ptr [rax]
0x000000000047aa88 : stc ; push rbx ; ret
0x0000000000439219 : stc ; salc ; clc ; ret
0x000000000042aef4 : stc ; vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x000000000041e567 : stc ; xlatb ; ret 0xff2d
0x000000000044e796 : std ; and al, 0 ; jmp rax
0x000000000048c50a : std ; call qword ptr [rax]
0x000000000049d69a : std ; call qword ptr [rbx]
0x000000000049d12a : std ; call qword ptr [rdx]
0x000000000048c58e : std ; call rax
0x000000000049c4d6 : std ; call rdi
0x000000000049bf36 : std ; call rdx
0x000000000047d6ed : std ; cli ; call rax
0x0000000000460568 : std ; dec dword ptr [rax + 0xf] ; ret 0x90c3
0x000000000048c5ce : std ; dec dword ptr [rax + 4] ; std ; call qword ptr [rax]
0x000000000043c5fe : std ; dec dword ptr [rax - 0x77] ; ret
0x000000000048d5b2 : std ; dec dword ptr [rbx + rdi*4 - 0x4d770003] ; std ; jmp qword ptr [rax]
0x000000000048c54e : std ; dec eax ; add al, 0xfd ; call qword ptr [rax]
0x00000000004677ee : std ; inc dword ptr [rbp + 0x5b0e78c0] ; ret
0x000000000046d8fb : std ; inc dword ptr [rbp - 0x76b08a40] ; ret
0x000000000046d12e : std ; jbe 0x46d13c ; ret
0x000000000048c50e : std ; jmp qword ptr [rax + 0x10fffd04]
0x000000000048d5ba : std ; jmp qword ptr [rax]
0x000000000049bf22 : std ; jmp qword ptr [rcx]
0x000000000049c232 : std ; jmp qword ptr [rdi]
0x000000000049c77a : std ; jmp qword ptr [rdx]
0x000000000049c002 : std ; jmp qword ptr [rsi]
0x000000000049c792 : std ; jmp rdx
0x000000000048c506 : std ; lcall ptr [rax + 4] ; std ; call qword ptr [rax]
0x000000000048c51a : std ; lcall ptr [rax + 4] ; std ; lcall ptr [rax + 4] ; std ; call qword ptr [rax]
0x0000000000421dfb : std ; mov word ptr [rdi - 2], cx ; ret
0x000000000048c502 : std ; push qword ptr [rbx + rax - 3] ; lcall ptr [rax + 4] ; std ; call qword ptr [rax]
0x0000000000439453 : std ; rep movsb byte ptr [rdi], byte ptr [rsi] ; cld ; ret
0x000000000041de31 : std ; xlatb ; ret
0x000000000041de29 : std ; xlatb ; ret 0xc085
0x000000000041e3a3 : std ; xlatb ; ret 0xe883
0x000000000045fe54 : std ; xlatb ; rol ch, cl ; std ; xlatb ; ret
0x00000000004096d3 : sti ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret
0x000000000047d756 : sti ; call qword ptr [rax - 0x1f0004be]
0x000000000047d6f6 : sti ; call qword ptr [rax]
0x0000000000499872 : sti ; call qword ptr [rbx]
0x000000000047d942 : sti ; call qword ptr [rcx]
0x000000000047d922 : sti ; call qword ptr [rdi]
0x00000000004994fa : sti ; call qword ptr [rdx]
0x000000000047df46 : sti ; call qword ptr [rsi]
0x000000000047d7a6 : sti ; call rax
0x000000000047d962 : sti ; call rdi
0x000000000047df1e : sti ; call rsp
0x000000000044bc06 : sti ; dec dword ptr [rax + 0x29] ; ret
0x000000000044ae35 : sti ; dec dword ptr [rbp - 0x7b] ; dec dword ptr [rax - 0x77] ; ret
0x000000000047d752 : sti ; inc dword ptr [rax + 0x41] ; sti ; call qword ptr [rax - 0x1f0004be]
0x000000000047d762 : sti ; inc dword ptr [rax - 0x2f0004ba] ; sti ; jmp qword ptr [rax]
0x000000000047d7b2 : sti ; inc dword ptr [rax] ; nop ; sti ; call qword ptr [rax]
0x000000000047d80a : sti ; inc dword ptr [rax] ; xchg eax, ebp ; sti ; call qword ptr [rax]
0x000000000047d7de : sti ; inc dword ptr [rax] ; xchg eax, ecx ; sti ; jmp qword ptr [rax]
0x0000000000449587 : sti ; inc dword ptr [rbx - 0x76be0008] ; ret 0x840f
0x0000000000444762 : sti ; inc dword ptr [rcx - 0x45] ; add eax, 0xe9000000 ; ret 0xfffc
0x0000000000446f09 : sti ; inc dword ptr [rcx - 0x77] ; ret 0x17e9
0x000000000047d7d6 : sti ; inc eax ; nop ; sti ; jmp rax
0x000000000047d772 : sti ; inc eax ; sti ; call qword ptr [rax]
0x000000000047d7f6 : sti ; inc eax ; xchg eax, ecx ; sti ; jmp rax
0x000000000047d76a : sti ; jmp qword ptr [rax]
0x000000000047d75a : sti ; jmp rax
0x000000000047de9e : sti ; jmp rdx
0x000000000047df3e : sti ; lcall ptr [rcx + rbx*8 - 0x25860005] ; sti ; call qword ptr [rsi]
0x000000000047de96 : sti ; lcall ptr [rdx + rbx*8 - 0x26770005] ; sti ; jmp rdx
0x000000000047d912 : sti ; lcall ptr [rsi] ; int 0xfb
0x0000000000458cc7 : sti ; loop 0x458ccf ; dec dword ptr [rcx + 0x63] ; ret
0x00000000004221d8 : sti ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000047d6f2 : sti ; push qword ptr [rax + 0x21] ; sti ; call qword ptr [rax]
0x000000000047d712 : sti ; push qword ptr [rax + 0x2e] ; sti ; call qword ptr [rax]
0x000000000047d76e : sti ; push qword ptr [rax + 0x4a] ; sti ; inc eax ; sti ; call qword ptr [rax]
0x000000000047e67e : sti ; push qword ptr [rax] ; add esp, edi ; call qword ptr [rax]
0x000000000047d70a : sti ; push qword ptr [rax] ; sub edi, ebx ; call rax
0x000000000047df1a : sti ; push qword ptr [rcx + rbx*8 - 5] ; call rsp
0x000000000047de16 : sti ; push qword ptr [rdx + rbx*8] ; sti ; call qword ptr [rsi]
0x000000000047d832 : sti ; push rax ; xchg eax, ebp ; sti ; call qword ptr [rax]
0x000000000047d876 : sti ; push rax ; xchg eax, edi ; sti ; call qword ptr [rax]
0x000000000047d856 : sti ; push rax ; xchg eax, esi ; sti ; call qword ptr [rax]
0x000000000047d806 : sti ; push rax ; xchg eax, esp ; sti ; inc dword ptr [rax] ; xchg eax, ebp ; sti ; call qword ptr [rax]
0x0000000000454111 : sti ; ret
0x000000000045e321 : sti ; ret 0xfffa
0x000000000044e2f1 : sti ; ret 0xfffb
0x0000000000449f57 : sti ; test rax, rax ; je 0x449f65 ; call rax
0x00000000004797b3 : stosb byte ptr [rdi], al ; and al, byte ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000467711 : stosb byte ptr [rdi], al ; and eax, dword ptr [rax] ; xor eax, eax ; add rsp, 8 ; ret
0x0000000000490564 : stosb byte ptr [rdi], al ; cli ; ret 0xac65
0x000000000043a17b : stosb byte ptr [rdi], al ; mov rax, rdx ; ret
0x00000000004797a5 : stosd dword ptr [rdi], eax ; and al, byte ptr [rax] ; test eax, eax ; je 0x4797b8 ; ret
0x0000000000416911 : stosd dword ptr [rdi], eax ; and dword ptr [rdx], eax ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x000000000047b005 : stosd dword ptr [rdi], eax ; clc ; call qword ptr [rax]
0x000000000047aff9 : stosd dword ptr [rdi], eax ; clc ; jmp qword ptr [rax]
0x000000000047cd39 : stosd dword ptr [rdi], eax ; cli ; call qword ptr [rax + 0x20fffab1]
0x000000000047cd75 : stosd dword ptr [rdi], eax ; cli ; call qword ptr [rsi]
0x000000000047cd35 : stosd dword ptr [rdi], eax ; cli ; jmp qword ptr [rax]
0x000000000047cd71 : stosd dword ptr [rdi], eax ; cli ; push qword ptr [rax - 0x55] ; cli ; call qword ptr [rsi]
0x000000000045603e : stosd dword ptr [rdi], eax ; mov eax, 1 ; ret
0x00000000004136e3 : stosd dword ptr [rdi], eax ; pop rbx ; ret
0x000000000049166c : stosd dword ptr [rdi], eax ; ret
0x0000000000446f08 : stosd dword ptr [rdi], eax ; sti ; inc dword ptr [rcx - 0x77] ; ret 0x17e9
0x0000000000416bc1 : stosd dword ptr [rdi], eax ; sub eax, dword ptr [rdx] ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x00000000004136e2 : stosq qword ptr [rdi], rax ; pop rbx ; ret
0x0000000000491a51 : sub ah, ah ; mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x0000000000496bc8 : sub al, 0x2d ; add byte ptr [rax], al ; in al, 0xe8 ; idiv edi ; ret 2
0x000000000043a3b2 : sub al, 0x72 ; add cl, byte ptr [rax + 0x77f8c50f] ; ret
0x000000000041f343 : sub al, 0xa ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000499f04 : sub al, 0xef ; sti ; call rax
0x000000000047d711 : sub al, 0xfb ; push qword ptr [rax + 0x2e] ; sti ; call qword ptr [rax]
0x0000000000493db5 : sub al, 0xfe ; inc dword ptr [rsp + rbp - 2] ; jmp rcx
0x0000000000493da9 : sub al, 0xfe ; jmp rcx
0x000000000044aa35 : sub al, 7 ; mov rdi, rbp ; call r12
0x0000000000400a7a : sub al, byte ptr [rax] ; add dword ptr [rbp - 0x3d], ebx ; nop ; ret
0x0000000000402309 : sub al, byte ptr [rax] ; jne 0x40231f ; jmp 0x402339
0x00000000004004cc : sub al, byte ptr [rax] ; nop ; ret
0x000000000040133e : sub al, byte ptr [rax] ; or byte ptr [rdi], cl ; ret 0x589
0x000000000044de96 : sub al, byte ptr [rcx] ; add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret
0x00000000004169ba : sub al, byte ptr [rdx] ; add bh, dh ; ret 0
0x0000000000416d02 : sub al, byte ptr [rdx] ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x000000000041e705 : sub al, ch ; std ; xlatb ; ret
0x00000000004947f9 : sub bh, dh ; jmp qword ptr [rax]
0x0000000000497689 : sub bh, dl ; call qword ptr [rax]
0x000000000049764d : sub bh, dl ; call qword ptr [rdx]
0x000000000049769d : sub bh, dl ; jmp rbx
0x000000000047dee0 : sub bl, dl ; sti ; jmp rdx
0x000000000043de13 : sub byte ptr [r9], r8b ; ret
0x0000000000463aa0 : sub byte ptr [rax + 0x39], cl ; ret 0x870f
0x0000000000463a9f : sub byte ptr [rax + 0x39], r9b ; ret 0x870f
0x000000000046e885 : sub byte ptr [rax + 1], cl ; ret 0x3d74
0x0000000000465f27 : sub byte ptr [rax - 0x3f], cl ; clc ; add dl, byte ptr [rax - 0x77] ; ret 0xc389
0x000000000044a9b7 : sub byte ptr [rax - 0x73], cl ; dec dword ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x148
0x000000000044ab14 : sub byte ptr [rax - 0x75], cl ; je 0x44ab45 ; sbb byte ptr [rax + 1], cl ; ret
0x0000000000411d04 : sub byte ptr [rax - 0x77], cl ; and cl, bpl ; ret 0xfffc
0x0000000000415314 : sub byte ptr [rax - 0x77], cl ; out dx, eax ; call rax
0x00000000004764bc : sub byte ptr [rax - 0x77], cl ; ret
0x000000000045ccc4 : sub byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000405aa0 : sub byte ptr [rax - 0x7d], cl ; ret
0x00000000004972b8 : sub byte ptr [rax - 7], ah ; call qword ptr [rax]
0x0000000000464d2b : sub byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000041444a : sub byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000046ef1d : sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x46ef65 ; leave ; ret
0x00000000004169dc : sub byte ptr [rax], al ; add dh, byte ptr [rax + rcx - 9] ; ret 0
0x00000000004144aa : sub byte ptr [rax], al ; ret
0x0000000000472ab3 : sub byte ptr [rbx - 0x26], dh ; mov eax, 1 ; ret
0x0000000000472ab2 : sub byte ptr [rbx - 0x26], sil ; mov eax, 1 ; ret
0x000000000040a623 : sub byte ptr [rcx + 0x29], 0 ; add byte ptr [rdx + rax - 0xd], dh ; ret
0x000000000046da25 : sub byte ptr [rcx - 0x3b76b310], cl ; mov rbp, r9 ; jmp rdx
0x00000000004563b5 : sub byte ptr [rcx - 0x77], cl ; ret 0x894d
0x000000000049abb8 : sub byte ptr [rcx - 4], bl ; jmp qword ptr [rbx]
0x000000000046307a : sub byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000043de14 : sub byte ptr [rcx], al ; ret
0x0000000000416b1a : sub byte ptr [rdx], al ; add bh, dh ; ret 0
0x0000000000416b5b : sub byte ptr [rdx], al ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x00000000004009fe : sub ch, byte ptr [rdx] ; jmp rax
0x0000000000401d07 : sub cl, byte ptr [rax - 0x77] ; ret
0x000000000040710d : sub cl, byte ptr [rax - 0x77] ; ror byte ptr [rax - 0x7d], 1 ; ret 0x4801
0x0000000000458cc5 : sub cl, ch ; sti ; loop 0x458cd1 ; dec dword ptr [rcx + 0x63] ; ret
0x000000000044c901 : sub dh, al ; add byte ptr [rcx - 0x7d], cl ; ret
0x0000000000494889 : sub dh, bh ; call qword ptr [rax]
0x000000000049489d : sub dh, bh ; call qword ptr [rdx]
0x000000000046bb8a : sub dl, dh ; call r11
0x0000000000403156 : sub dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000040efc0 : sub dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040a625 : sub dword ptr [rax], eax ; add byte ptr [rdx + rax - 0xd], dh ; ret
0x000000000040f786 : sub dword ptr [rax], eax ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000040ef56 : sub dword ptr [rax], eax ; add dword ptr [rip + 0x294cd5], 1 ; ret
0x000000000040eec5 : sub dword ptr [rax], eax ; ret
0x000000000040f7d6 : sub dword ptr [rax], r8d ; ret
0x0000000000420427 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42043d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000420577 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42058d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004206c7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x4206dd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000420817 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42082d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000420967 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42097d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000420ab7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x420acd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000420c07 : sub dword ptr [rdi + 0x10], ebx ; jb 0x420c1d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000420d57 : sub dword ptr [rdi + 0x10], ebx ; jb 0x420d6d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000420ea7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x420ebd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000420ff7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42100d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000421147 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42115d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000421297 : sub dword ptr [rdi + 0x10], ebx ; jb 0x4212ad ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004213e7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x4213fd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000421537 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42154d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000421687 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42169d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000422df7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x422e0d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000422f47 : sub dword ptr [rdi + 0x10], ebx ; jb 0x422f5d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000423097 : sub dword ptr [rdi + 0x10], ebx ; jb 0x4230ad ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004231e7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x4231fd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000423337 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42334d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000423487 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42349d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004235d7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x4235ed ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000423727 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42373d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000423877 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42388d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004239c7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x4239dd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000423b17 : sub dword ptr [rdi + 0x10], ebx ; jb 0x423b2d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000423c67 : sub dword ptr [rdi + 0x10], ebx ; jb 0x423c7d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000423db7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x423dcd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000423f07 : sub dword ptr [rdi + 0x10], ebx ; jb 0x423f1d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000424057 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42406d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000420383 : sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042037f : sub dword ptr [rdi - 0x20], esp ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x000000000042042d : sub dword ptr [rdi], esp ; jmp r9
0x00000000004169fb : sub dword ptr [rdx], eax ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x000000000041fb26 : sub dword ptr [rip - 0xcfffffe], 0xf ; outsd dx, dword ptr [rsi] ; push rdi ; ret
0x000000000041e497 : sub eax, -1 ; jne 0x41e4a8 ; vzeroupper ; ret
0x000000000041582a : sub eax, 0x10 ; ret
0x0000000000457067 : sub eax, 0x83000000 ; ret
0x000000000046774f : sub eax, 0x85ffffff ; sal byte ptr [rbp + 2], 0x5b ; ret
0x0000000000496bc9 : sub eax, 0xe8e40000 ; idiv edi ; ret 2
0x0000000000416a62 : sub eax, 0xf480002 ; ret 0x66c3
0x0000000000448724 : sub eax, 1 ; mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x0000000000438f24 : sub eax, 1 ; ret
0x000000000046d176 : sub eax, dword ptr [0] ; ret
0x0000000000401caf : sub eax, dword ptr [rbx + 8] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000044c895 : sub eax, dword ptr [rcx + 0xf] ; mov dh, 0x47 ; or al, 0x83 ; ret
0x000000000040f75e : sub eax, dword ptr [rdi + 0x18] ; ret
0x000000000043abca : sub eax, dword ptr [rdx + rcx*4] ; je 0x43abb6 ; ret
0x0000000000416bc2 : sub eax, dword ptr [rdx] ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x000000000043f0aa : sub eax, dword ptr [rdx] ; add byte ptr [rcx], bh ; ret
0x000000000043f0c9 : sub eax, dword ptr [rdx] ; add byte ptr [rcx], dh ; sar byte ptr [rcx], cl ; ret
0x000000000040ebd3 : sub eax, dword ptr [rsi + 0x10] ; ret
0x000000000043908d : sub eax, eax ; cmp eax, ecx ; jle 0x4390d1 ; movsxd rax, ecx ; ret
0x000000000046f2f1 : sub eax, eax ; mov dword ptr [rdx], eax ; mov eax, 2 ; ret
0x000000000046fe53 : sub eax, eax ; ret
0x000000000041e4e3 : sub eax, ecx ; je 0x41e4f9 ; sbb eax, eax ; or eax, 1 ; ret
0x000000000040e289 : sub eax, ecx ; lea eax, dword ptr [r8 - 1] ; ret
0x000000000046f210 : sub eax, ecx ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x000000000041818c : sub eax, ecx ; ret
0x0000000000433039 : sub eax, edi ; ret
0x0000000000460e0e : sub eax, edi ; shr rax, 2 ; ret
0x000000000040ebfb : sub eax, edx ; ret
0x0000000000461200 : sub eax, edx ; shr rax, 2 ; vzeroupper ; ret
0x000000000041e4ac : sub eax, edx ; vzeroupper ; ret
0x00000000004390ed : sub eax, esi ; ret
0x000000000046b7d8 : sub ebp, dword ptr [rcx + 0x23] ; add byte ptr [rcx], al ; pop rbx ; ret
0x00000000004902fe : sub ebp, eax ; fcomp qword ptr [rdi - 0x4a] ; ret 0x474c
0x000000000040bd30 : sub ebp, eax ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040a6a6 : sub ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000048ed95 : sub ebx, dword ptr [rbx - 0xb] ; pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x000000000047d709 : sub ebx, edi ; push qword ptr [rax] ; sub edi, ebx ; call rax
0x000000000043ebc0 : sub ecx, dword ptr [rax - 0x75] ; push rax ; or dh, dh ; ret 0x8902
0x00000000004603a4 : sub ecx, dword ptr [rcx + rcx*4 - 0x40] ; vzeroupper ; ret
0x000000000047d70d : sub edi, ebx ; call rax
0x00000000004976d9 : sub edi, edx ; call qword ptr [rbx]
0x00000000004976b1 : sub edi, edx ; call qword ptr [rdx]
0x000000000040ec00 : sub edx, dword ptr [rax + 0x10] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x000000000040ebf5 : sub edx, dword ptr [rax + 0x18] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x00000000004481ae : sub edx, dword ptr [rsp + 0x10] ; mov dword ptr [r12], edx ; jmp 0x448183
0x000000000041d934 : sub edx, eax ; jbe 0x41d977 ; add rax, rdi ; ret
0x000000000041d944 : sub edx, eax ; jbe 0x41d979 ; lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x000000000041d954 : sub edx, eax ; jbe 0x41d979 ; lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x000000000041d964 : sub edx, eax ; jbe 0x41d979 ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x000000000040b4df : sub edx, esi ; mov qword ptr [rsp], rcx ; mov rdi, rbx ; call rax
0x000000000046196d : sub esp, 0x80 ; call 0x43dbb8
0x000000000047ad8d : sub esp, 8 ; add rsp, 8 ; ret
0x000000000040efbf : sub qword ptr [rax], r8 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040e288 : sub r8, rcx ; lea eax, dword ptr [r8 - 1] ; ret
0x0000000000415829 : sub rax, 0x10 ; ret
0x0000000000438f23 : sub rax, 1 ; ret
0x000000000046d175 : sub rax, qword ptr [0] ; ret
0x000000000040f75d : sub rax, qword ptr [rdi + 0x18] ; ret
0x000000000046d174 : sub rax, qword ptr fs:[0] ; ret
0x000000000046fe52 : sub rax, r8 ; ret
0x0000000000433038 : sub rax, rdi ; ret
0x0000000000460e0d : sub rax, rdi ; shr rax, 2 ; ret
0x0000000000438ff3 : sub rax, rdx ; ret
0x000000000043308f : sub rax, rdx ; vzeroupper ; ret
0x00000000004390ec : sub rax, rsi ; ret
0x000000000041d933 : sub rdx, rax ; jbe 0x41d978 ; add rax, rdi ; ret
0x000000000046196c : sub rsp, 0x80 ; call 0x43dbb9
0x000000000047ad8c : sub rsp, 8 ; add rsp, 8 ; ret
0x000000000043dbf7 : syscall ; pop rdx ; pop rsi ; ret
0x00000000004616b5 : syscall ; ret
0x000000000040dfbd : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040b026 : test al, 0 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000475263 : test al, 0 ; add byte ptr [rax], al ; ret
0x000000000040f784 : test al, 0x1f ; sub dword ptr [rax], eax ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000004970a8 : test al, 0x65 ; clc ; jmp qword ptr [rbx]
0x000000000049ce44 : test al, 0x8f ; add byte ptr [rax], al ; fsub dword ptr [rax - 3] ; jmp qword ptr [rcx]
0x000000000048f657 : test al, 0x97 ; xchg eax, esp ; ret
0x000000000047cffd : test al, 0xfa ; call rdx
0x000000000047cf7d : test al, 0xfa ; jmp rsi
0x000000000049d699 : test al, 0xfd ; call qword ptr [rbx]
0x0000000000474078 : test al, 3 ; jne 0x473faa ; ret
0x000000000041844a : test al, al ; jne 0x418438 ; xor eax, eax ; sub eax, ecx ; ret
0x000000000046c966 : test al, al ; jne 0x46c943 ; movsx eax, dl ; neg eax ; ret
0x000000000044d2c6 : test bh, al ; or dword ptr [rax], eax ; add byte ptr [rcx - 0x77], cl ; ret
0x0000000000495b55 : test bh, dh ; jmp qword ptr [rsi]
0x000000000044c350 : test bl, ch ; sbb eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x481e
0x0000000000462490 : test bl, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004083ef : test byte ptr [rax + rax - 0x76b80000], ch ; ret
0x0000000000465544 : test byte ptr [rax + rax*4], ah ; add byte ptr [rax], al ; add cl, ch ; ret
0x0000000000406837 : test byte ptr [rax - 0x77], 0xef ; mov rax, qword ptr [rsp + 8] ; call rax
0x000000000045e31a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; call 0x40a628
0x000000000040702a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; call qword ptr [rbx]
0x000000000047044a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rbx
0x00000000004366aa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x000000000040eeea : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rdi ; ret
0x000000000040aaea : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; movzx eax, byte ptr [rdx] ; ret
0x000000000040980a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000040eeaa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040e0aa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000046112a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor rax, rax ; ret
0x0000000000440cf2 : test byte ptr [rbp + rcx*4 + 0x3c], cl ; ret
0x000000000044d84c : test byte ptr [rbp - 0x7c000012], ah ; ret
0x00000000004584c4 : test byte ptr [rbp - 0x7c000017], ah ; ret
0x000000000040e106 : test byte ptr [rbx], 0x80 ; jne 0x40e136 ; pop rbx ; ret
0x000000000049989c : test byte ptr [rbx], bl ; sti ; call qword ptr [rdx]
0x000000000047636b : test byte ptr [rcx + rax - 0x20], cl ; jmp rax
0x0000000000477f02 : test byte ptr [rcx + rcx*4 - 0x19], 0x41 ; call rdi
0x00000000004582e8 : test byte ptr [rcx - 0x7c000015], al ; ret
0x000000000043d74a : test byte ptr [rcx], dl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000004585da : test byte ptr [rdi - 0x7c000018], cl ; ret
0x000000000043c5af : test byte ptr [rdi], 0x94 ; ret 0xc221
0x000000000043c0c6 : test byte ptr [rdi], 0x94 ; ret 0xca21
0x0000000000402ae9 : test byte ptr [rdi], al ; add byte ptr [rax - 0x77], cl ; ret 0xc031
0x0000000000454b23 : test byte ptr [rdi], al ; add eax, dword ptr [rax] ; add dh, dh ; ret 0xf40
0x000000000045715c : test byte ptr [rip - 0x7c000003], cl ; ret
0x000000000044a51b : test byte ptr [rip - 0xcf78c00], ah ; ret
0x000000000046003d : test byte ptr [rsi + 0x48000000], bl ; bsf eax, edx ; ret
0x000000000043d705 : test byte ptr [rsi - 0x7d000000], dl ; ret
0x0000000000432f1d : test byte ptr [rsi], bh ; add byte ptr [rax], al ; bsf rax, rdx ; ret
0x000000000042542a : test cl, al ; add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 0x1d], cl ; ret 0x57c
0x000000000047436a : test cl, cl ; add eax, dword ptr [rax] ; add byte ptr [rax + 1], cl ; ret
0x0000000000438baf : test cl, cl ; jne 0x438ba4 ; ret
0x0000000000438c5f : test cl, cl ; jne 0x438c54 ; ret
0x0000000000438f1f : test cl, cl ; jne 0x438f18 ; sub rax, 1 ; ret
0x000000000043cb30 : test dh, 1 ; jne 0x43cb46 ; ret
0x00000000004148f2 : test dh, bl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x0000000000442595 : test dh, dh ; mov edx, 0xffffffff ; cmovs eax, edx ; ret
0x0000000000495b54 : test dil, r14b ; jmp qword ptr [rsi]
0x00000000004370f4 : test dl, 0x40 ; jne 0x4370b9 ; lea rax, qword ptr [rdi + 7] ; ret
0x0000000000437122 : test dl, 4 ; jne 0x4370b9 ; lea rax, qword ptr [rdi + 3] ; ret
0x000000000046b5a9 : test dl, al ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0xd589
0x00000000004062a6 : test dl, dl ; jne 0x406288 ; ret
0x0000000000438dcf : test dl, dl ; jne 0x438dc8 ; lea rax, qword ptr [rcx - 1] ; ret
0x000000000046f78f : test dl, dl ; jne 0x46f79d ; ret
0x0000000000459230 : test dword ptr [rax - 0x16000005], esp ; ret 0xfffd
0x000000000045663f : test dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x000000000043f201 : test dword ptr [rax], eax ; add rax, rbp ; jmp rax
0x000000000044d2a1 : test dword ptr [rax], ecx ; idiv edi ; call qword ptr [rax]
0x0000000000456d46 : test dword ptr [rax], esi ; idiv edi ; dec dword ptr [rax - 0x39] ; ret 0x2b40
0x000000000043f200 : test dword ptr [rax], r8d ; add rax, rbp ; jmp rax
0x000000000044e02a : test dword ptr [rbp - 0x1600001b], ebp ; ret 0xffe6
0x000000000041d8b8 : test dword ptr [rbx + 0x31000000], esp ; rol bl, 0x83 ; ret 0x6620
0x000000000041f627 : test dword ptr [rbx + 7], edx ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000041fa76 : test dword ptr [rbx + rax], eax ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000041e6f8 : test dword ptr [rbx - 0x3a000003], esp ; std ; xlatb ; ret 0xe883
0x0000000000461d9b : test dword ptr [rcx + 0x48000000], edi ; add esp, 0x78 ; ret
0x000000000041f5fd : test dword ptr [rcx + 7], esi ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000041f50d : test dword ptr [rcx + 8], esp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000041f41d : test dword ptr [rcx + 9], edx ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004782e4 : test dword ptr [rdi + rdi*8 - 1], esi ; dec dword ptr [rax - 0x7d] ; ret
0x000000000043be52 : test dword ptr [rdi], edi ; add byte ptr [rax], al ; add rsp, 0x68 ; ret
0x000000000041f342 : test dword ptr [rdx + rcx], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000045fe23 : test dword ptr [rip - 0x76ffffff], edi ; ret 0x8948
0x000000000043ba46 : test dword ptr [rsi + 0x48000000], ebp ; add esp, 0x68 ; ret
0x0000000000438932 : test dword ptr [rsi + 1], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000043e0af : test dword ptr [rsi + rdi*8 - 0x76bb0001], eax ; ret 0xc031
0x000000000044575e : test dword ptr [rsi + rdi*8 - 0x7cb70001], esi ; ret
0x0000000000407f7d : test dword ptr [rsi - 0x77000000], esp ; ret 0xe281
0x0000000000445cf5 : test dword ptr [rsi], edx ; add al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret
0x000000000041f848 : test dword ptr [rsi], esp ; add eax, 0xc0310000 ; ret
0x00000000004798c3 : test eax, 0x10022 ; add byte ptr [rax], al ; ret
0x0000000000491340 : test eax, 0x7d4c8c5d ; ret 0xd8f
0x00000000004254c6 : test eax, 0x7f0f41f3 ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x00000000004798b5 : test eax, 0xc0850022 ; je 0x4798c8 ; ret
0x000000000043da9b : test eax, eax ; cmove eax, edx ; ret
0x000000000040040c : test eax, eax ; je 0x400416 ; call rax
0x00000000004157a1 : test eax, eax ; je 0x4157b8 ; lea rax, qword ptr [rdx - 0x10] ; ret
0x000000000041d608 : test eax, eax ; je 0x41d614 ; xchg eax, edx ; sub eax, edx ; ret
0x000000000043c7e8 : test eax, eax ; je 0x43c7f3 ; ret
0x000000000043f096 : test eax, eax ; je 0x43f0a5 ; ret
0x0000000000448feb : test eax, eax ; je 0x448ff5 ; call rax
0x0000000000449f59 : test eax, eax ; je 0x449f63 ; call rax
0x000000000046fc10 : test eax, eax ; je 0x46fc28 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004797a8 : test eax, eax ; je 0x4797b5 ; ret
0x00000000004798b8 : test eax, eax ; je 0x4798c5 ; ret
0x000000000047a684 : test eax, eax ; je 0x47a68e ; call rax
0x000000000047a941 : test eax, eax ; je 0x47a950 ; call rax
0x000000000040dedc : test eax, eax ; jne 0x40ded5 ; ret
0x000000000040ebb4 : test eax, eax ; jne 0x40ebad ; ret
0x000000000041d8e5 : test eax, eax ; jne 0x41d946 ; xor eax, eax ; ret
0x000000000041dd61 : test eax, eax ; jne 0x41dd89 ; xor eax, eax ; vzeroupper ; ret
0x000000000043dbcf : test eax, eax ; jne 0x43dbcb ; pop rdx ; pop r10 ; ret
0x0000000000467753 : test eax, eax ; jne 0x46775e ; pop rbx ; ret
0x00000000004797e7 : test eax, eax ; jne 0x4797f5 ; ret
0x0000000000479802 : test eax, eax ; jne 0x479815 ; ret
0x0000000000479a32 : test eax, eax ; jne 0x479a45 ; ret
0x00000000004677f0 : test eax, eax ; js 0x467807 ; pop rbx ; ret
0x00000000004595ef : test eax, ebx ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8148
0x00000000004647c3 : test eax, ebx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x0000000000457741 : test eax, esi ; idiv bh ; jmp qword ptr [rax]
0x000000000047a9cb : test ebp, ebp ; jne 0x47a9b8 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041d820 : test ebx, ebx ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret 0xc085
0x00000000004370e2 : test ecx, ebx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x0000000000460ee9 : test ecx, ecx ; jne 0x460ea8 ; mov rax, rdx ; ret
0x0000000000468393 : test edi, edi ; jne 0x46839d ; call rax
0x0000000000468393 : test edi, edi ; jne 0x4683a1 ; call rax
0x000000000046aeea : test edi, edi ; jne 0x46aec5 ; ret
0x000000000046f3cd : test edi, edi ; mov byte ptr [rsi], al ; jne 0x46f3c1 ; mov rax, rsi ; ret
0x0000000000432ed2 : test edx, edx ; je 0x432ee0 ; bsf eax, edx ; ret
0x0000000000432ed2 : test edx, edx ; je 0x432ee1 ; bsf eax, edx ; ret
0x0000000000432f7b : test edx, edx ; je 0x432f97 ; bsf rax, rdx ; ret
0x0000000000432f7b : test edx, edx ; je 0x432f98 ; bsf rax, rdx ; ret
0x000000000043e3da : test edx, edx ; je 0x43e3f1 ; lea rdi, qword ptr [rcx + rax + 0x20] ; jmp rdx
0x00000000004600aa : test edx, edx ; je 0x4600d7 ; bsf rax, rdx ; ret
0x00000000004600aa : test edx, edx ; je 0x4600d8 ; bsf rax, rdx ; ret
0x000000000040c231 : test edx, edx ; jne 0x40c246 ; xor eax, eax ; ret
0x000000000040d4bf : test edx, edx ; jne 0x40d4b5 ; ret
0x000000000045db2f : test edx, edx ; jne 0x45db25 ; ret
0x0000000000460c4a : test edx, edx ; jne 0x460c45 ; ret
0x000000000047aa99 : test edx, edx ; jne 0x47aaa5 ; ret
0x00000000004370d5 : test esi, edx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x0000000000448ef0 : test esi, esi ; je 0x448efa ; call rsi
0x000000000045ffa1 : test esi, esi ; jne 0x45ffb0 ; xor rax, rax ; ret
0x0000000000460c51 : test esi, esi ; jne 0x460c60 ; xor rax, rax ; ret
0x000000000044d013 : test esp, eax ; idiv bh ; jmp qword ptr [rax]
0x00000000004370ef : test esp, ebx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7540
0x000000000041d607 : test r8d, r8d ; je 0x41d615 ; xchg eax, edx ; sub eax, edx ; ret
0x0000000000460ee8 : test r9d, r9d ; jne 0x460ea9 ; mov rax, rdx ; ret
0x000000000040040b : test rax, rax ; je 0x400417 ; call rax
0x00000000004157a0 : test rax, rax ; je 0x4157b9 ; lea rax, qword ptr [rdx - 0x10] ; ret
0x000000000043c7e7 : test rax, rax ; je 0x43c7f4 ; ret
0x0000000000448fea : test rax, rax ; je 0x448ff6 ; call rax
0x0000000000449f58 : test rax, rax ; je 0x449f64 ; call rax
0x000000000046fc0f : test rax, rax ; je 0x46fc29 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000047a683 : test rax, rax ; je 0x47a68f ; call rax
0x000000000047a940 : test rax, rax ; je 0x47a951 ; call rax
0x000000000040dedb : test rax, rax ; jne 0x40ded6 ; ret
0x000000000040ebb3 : test rax, rax ; jne 0x40ebae ; ret
0x000000000047a9ca : test rbp, rbp ; jne 0x47a9b9 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000046aee9 : test rdi, rdi ; jne 0x46aec6 ; ret
0x0000000000432f7a : test rdx, rdx ; je 0x432f98 ; bsf rax, rdx ; ret
0x0000000000432f7a : test rdx, rdx ; je 0x432f99 ; bsf rax, rdx ; ret
0x00000000004600a9 : test rdx, rdx ; je 0x4600d8 ; bsf rax, rdx ; ret
0x00000000004600a9 : test rdx, rdx ; je 0x4600d9 ; bsf rax, rdx ; ret
0x000000000040c230 : test rdx, rdx ; jne 0x40c247 ; xor eax, eax ; ret
0x000000000040d4be : test rdx, rdx ; jne 0x40d4b6 ; ret
0x000000000045db2e : test rdx, rdx ; jne 0x45db26 ; ret
0x000000000047aa98 : test rdx, rdx ; jne 0x47aaa6 ; ret
0x0000000000448eef : test rsi, rsi ; je 0x448efb ; call rsi
0x000000000045ffa0 : test rsi, rsi ; jne 0x45ffb1 ; xor rax, rax ; ret
0x0000000000460c50 : test rsi, rsi ; jne 0x460c61 ; xor rax, rax ; ret
0x000000000043cb2f : test sil, 1 ; jne 0x43cb47 ; ret
0x000000000040ca33 : vminsd xmm8, xmm4, qword ptr [rcx + 0x5c] ; ret
0x000000000042aa8a : vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x000000000043983c : vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x0000000000439205 : vmovdqu xmmword ptr [rdi], xmm0 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x000000000043a3c1 : vmovdqu xmmword ptr [rdi], xmm0 ; vzeroupper ; ret
0x0000000000439209 : vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x00000000004399c8 : vmovdqu ymmword ptr [r11], ymm4 ; vzeroupper ; ret
0x0000000000439a6f : vmovdqu ymmword ptr [r11], ymm8 ; vzeroupper ; ret
0x000000000042aa76 : vmovdqu ymmword ptr [r9 - 0x20], ymm1 ; ret
0x000000000042aa5d : vmovdqu ymmword ptr [r9 - 0x20], ymm3 ; ret
0x00000000004397a5 : vmovdqu ymmword ptr [rdi + rdx - 0x20], ymm1 ; vzeroupper ; ret
0x000000000043a32b : vmovdqu ymmword ptr [rdi + rdx - 0x40], ymm0 ; vzeroupper ; ret
0x0000000000439913 : vmovdqu ymmword ptr [rdi + rdx - 0x40], ymm3 ; vzeroupper ; ret
0x00000000004398e5 : vmovdqu ymmword ptr [rdi + rdx - 0x80], ymm7 ; vzeroupper ; ret
0x000000000043a2b2 : vmovdqu ymmword ptr [rdi], ymm0 ; vzeroupper ; ret
0x00000000004391fb : vmovdqu ymmword ptr [rdi], ymm2 ; vmovdqu ymmword ptr [rsi - 0x20], ymm2 ; ret
0x00000000004391ff : vmovdqu ymmword ptr [rsi - 0x20], ymm2 ; ret
0x0000000000439e82 : vmovdqu64 zmmword ptr [r11], zmm4 ; vzeroupper ; ret
0x0000000000439f48 : vmovdqu64 zmmword ptr [r11], zmm8 ; vzeroupper ; ret
0x000000000043a43d : vmovdqu64 zmmword ptr [rdi], zmm0 ; vzeroupper ; ret
0x0000000000439214 : vmovq qword ptr [rdi], xmm0 ; vmovq qword ptr [rsi - 8], xmm0 ; ret
0x0000000000439218 : vmovq qword ptr [rsi - 8], xmm0 ; ret
0x000000000042ad93 : vmovups zmmword ptr [r9 + 0x1c0], zmm15 ; ret
0x000000000042ac2c : vmovups zmmword ptr [r9 - 0x40], zmm15 ; ret
0x000000000042aa2e : vmovups zmmword ptr [r9 - 0x40], zmm3 ; ret
0x000000000042a9f2 : vmovups zmmword ptr [r9 - 0x40], zmm7 ; ret
0x000000000042aef5 : vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x00000000004393b8 : vmovups zmmword ptr [rsi + 0x1c0], zmm2 ; ret
0x000000000043931b : vmovups zmmword ptr [rsi + 0xc0], zmm2 ; ret
0x00000000004391ba : vmovups zmmword ptr [rsi - 0x40], zmm2 ; ret
0x00000000004310d1 : vpcmpeqb xmm0, xmm0, xmm1 ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000041dc08 : vzeroupper ; ret
0x000000000041dde0 : vzeroupper ; xor eax, eax ; ret
0x0000000000498a09 : wait ; cli ; call qword ptr [rax]
0x000000000041cc53 : xchg ah, bl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000043037f : xchg ah, bl ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000041cd43 : xchg ah, ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000041cb63 : xchg ah, cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000044e927 : xchg al, bl ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8148
0x0000000000431fcc : xchg bh, bh ; add eax, 0x83480000 ; ret 0x4910
0x00000000004317ec : xchg bh, bl ; or eax, 0x83480000 ; ret 0x4910
0x0000000000431bdc : xchg bh, ch ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004313fc : xchg bh, cl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004692cc : xchg bh, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000043a642 : xchg byte ptr [rax + 1], cl ; int1 ; jmp rcx
0x000000000041d5ab : xchg byte ptr [rax + rax - 0x7cb80000], al ; ret 0xeb10
0x0000000000430edf : xchg byte ptr [rax + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004306bf : xchg byte ptr [rax + rcx - 0x7cb80000], bl ; ret 0xe910
0x000000000042fe9f : xchg byte ptr [rax + rdx - 0x7cb80000], bh ; ret 0xe910
0x000000000041d103 : xchg byte ptr [rax - 0x7cb80000], ch ; ret 0xeb10
0x000000000043159b : xchg byte ptr [rax], dh ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004309ff : xchg byte ptr [rbp + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000041c893 : xchg byte ptr [rbp + rcx - 0x7cb80000], bl ; ret 0xeb10
0x00000000004301df : xchg byte ptr [rbp + rcx], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042f9bf : xchg byte ptr [rbp + rdx - 0x7cb80000], bl ; ret 0xe910
0x0000000000430b9f : xchg byte ptr [rbx + rax - 0x7cb80000], bh ; ret 0xe910
0x000000000041d2e3 : xchg byte ptr [rbx + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000041ca73 : xchg byte ptr [rbx + rcx - 0x7cb80000], bh ; ret 0xeb10
0x0000000000476c6c : xchg byte ptr [rcx + rax - 0x10], cl ; jmp rax
0x000000000041d4c3 : xchg byte ptr [rcx + rax], ch ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000431a8c : xchg byte ptr [rdi], bh ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004312ac : xchg byte ptr [rdi], bl ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004323bc : xchg byte ptr [rdi], cl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000041d3d3 : xchg byte ptr [rdx + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000042fcff : xchg byte ptr [rdx + rdx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000041cd15 : xchg byte ptr [rdx], bl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000041ce05 : xchg byte ptr [rdx], ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000041cc25 : xchg byte ptr [rdx], cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000460566 : xchg byte ptr [rsi + 0xf48fffd], bl ; ret 0x90c3
0x000000000042fe35 : xchg byte ptr [rsi], ah ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000430b35 : xchg byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000430655 : xchg byte ptr [rsi], al ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043198d : xchg byte ptr [rsi], bh ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004322bd : xchg byte ptr [rsi], cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000041c983 : xchg byte ptr [rsp + rcx - 0x7cb80000], ch ; ret 0xeb10
0x000000000043c5fd : xchg ch, bh ; dec dword ptr [rax - 0x77] ; ret
0x0000000000430e75 : xchg dh, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000430175 : xchg dh, ah ; or eax, 0x83480000 ; ret 0x4910
0x000000000042fc95 : xchg dh, al ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000430995 : xchg dh, al ; add eax, 0x83480000 ; ret 0x4910
0x0000000000431add : xchg dh, ch ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004312fd : xchg dh, cl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000041cb35 : xchg dl, bh ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000041c955 : xchg dl, bl ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000041ca45 : xchg dl, ch ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000041c865 : xchg dl, cl ; or eax, 0x83480000 ; ret 0x4910
0x000000000046cbe1 : xchg dl, dl ; add al, byte ptr [rax] ; add byte ptr [rcx - 0x77], al ; ret
0x000000000040fce7 : xchg dword ptr [rax - 0xcfffff8], eax ; ret
0x0000000000467286 : xchg dword ptr [rax], eax ; add eax, dword ptr [rax] ; add bl, dh ; ret
0x000000000044ff7c : xchg dword ptr [rbp - 0x76fffff0], edi ; ret 0x349
0x0000000000459a03 : xchg dword ptr [rbx - 0x76ffffdf], edx ; ret 0x349
0x000000000048f00c : xchg dword ptr [rcx + 0x79], ecx ; xchg eax, edx ; ret 0xf869
0x000000000047531a : xchg dword ptr [rcx + rax - 8], ecx ; jmp rax
0x000000000043dbcd : xchg dword ptr [rdi], eax ; test eax, eax ; jne 0x43dbcd ; pop rdx ; pop r10 ; ret
0x0000000000451055 : xchg dword ptr [rdx - 0x76ffffff], ebx ; ret 0x349
0x0000000000464f4c : xchg dword ptr [rip - 0x76fffffd], edx ; ret 0xe8c0
0x000000000048f1ab : xchg dword ptr [rsp + rax + 0x6fa9ce9d], esp ; ret
0x000000000046ada8 : xchg eax, ebp ; and eax, dword ptr [rax] ; ret
0x0000000000403f3b : xchg eax, ebp ; ret
0x0000000000474f00 : xchg eax, ebp ; ret 0x145
0x000000000043c1bc : xchg eax, ebp ; ret 0x3948
0x00000000004138ba : xchg eax, ebp ; ret 0x8348
0x0000000000462ae2 : xchg eax, ebp ; ret 0xc084
0x0000000000414c4e : xchg eax, ebp ; ret 0xd020
0x00000000004066d9 : xchg eax, ebp ; ret 0xd021
0x00000000004648fb : xchg eax, ebp ; ret 0xd201
0x00000000004082a2 : xchg eax, ebp ; ret 0xdaf7
0x000000000043f0d1 : xchg eax, ebp ; ret 0xe1eb
0x0000000000476a7a : xchg eax, ebp ; ret 0xf45
0x000000000040c24d : xchg eax, ebp ; ror byte ptr [rdi], 0xb6 ; sal bh, 0xd8 ; pop rbx ; ret
0x000000000040f03d : xchg eax, ebp ; sal bh, 0xd8 ; ret
0x000000000047d80d : xchg eax, ebp ; sti ; call qword ptr [rax]
0x000000000047d82d : xchg eax, ebp ; sti ; call rax
0x000000000047d811 : xchg eax, ebp ; sti ; jmp qword ptr [rax]
0x000000000047d831 : xchg eax, ebp ; sti ; push rax ; xchg eax, ebp ; sti ; call qword ptr [rax]
0x0000000000409242 : xchg eax, ebx ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x294c
0x000000000041e790 : xchg eax, ebx ; add rcx, r11 ; jmp rcx
0x000000000046af0e : xchg eax, ebx ; and eax, dword ptr [rax] ; mov qword ptr [rsi], rax ; ret
0x000000000043656c : xchg eax, ebx ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x000000000041ff32 : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000047c864 : xchg eax, ebx ; xor bh, dl ; jmp qword ptr [rbx]
0x0000000000430f81 : xchg eax, ecx ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x000000000047d7fd : xchg eax, ecx ; sti ; call rax
0x000000000047d7f5 : xchg eax, ecx ; sti ; inc eax ; xchg eax, ecx ; sti ; jmp rax
0x000000000047d7e1 : xchg eax, ecx ; sti ; jmp qword ptr [rax]
0x000000000047d7f9 : xchg eax, ecx ; sti ; jmp rax
0x000000000042f6af : xchg eax, ecx ; sub eax, edx ; ret
0x000000000040839f : xchg eax, ecx ; xor byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x0000000000410735 : xchg eax, edi ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000405a21 : xchg eax, edi ; add rdx, rdi ; jmp rdx
0x0000000000416cb5 : xchg eax, edi ; out 0, al ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x00000000004145a9 : xchg eax, edi ; ret 0x3be9
0x000000000043d81a : xchg eax, edi ; ret 0xda80
0x000000000047c5dd : xchg eax, edi ; stc ; inc dword ptr [rax] ; xchg eax, edi ; stc ; jmp qword ptr [rax]
0x000000000047c5e1 : xchg eax, edi ; stc ; jmp qword ptr [rax]
0x000000000047d879 : xchg eax, edi ; sti ; call qword ptr [rax]
0x000000000047d871 : xchg eax, edi ; sti ; call rax
0x000000000047d875 : xchg eax, edi ; sti ; push rax ; xchg eax, edi ; sti ; call qword ptr [rax]
0x000000000048f658 : xchg eax, edi ; xchg eax, esp ; ret
0x000000000049d125 : xchg eax, edx ; add byte ptr [rax], al ; clc ; jl 0x49d12e ; call qword ptr [rdx]
0x0000000000490f1d : xchg eax, edx ; jae 0x490efa ; push rsi ; pop rdx ; je 0x490eef ; ret 0xacfc
0x000000000047ce04 : xchg eax, edx ; mov al, 0xfa ; jmp qword ptr [rdx]
0x000000000046e1d7 : xchg eax, edx ; ret 0x8949
0x000000000048f00f : xchg eax, edx ; ret 0xf869
0x0000000000413bca : xchg eax, edx ; ret 0xffff
0x00000000004390dd : xchg eax, edx ; ror byte ptr [rdi], 0x94 ; ret 0xc085
0x000000000041d60c : xchg eax, edx ; sub eax, edx ; ret
0x000000000047d2fc : xchg eax, edx ; xlatb ; cli ; jmp qword ptr [rdx]
0x000000000041ea90 : xchg eax, esi ; add byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000426cc3 : xchg eax, esi ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000043a6d4 : xchg eax, esi ; add rax, rsi ; jmp rax
0x000000000047a7ca : xchg eax, esi ; dec dword ptr [rax - 0x39] ; ret 0xf320
0x000000000047a7a1 : xchg eax, esi ; dec dword ptr [rax - 0x39] ; ret 0xf5e0
0x000000000047a7f3 : xchg eax, esi ; dec dword ptr [rax - 0x39] ; ret 0xfb20
0x000000000047a81c : xchg eax, esi ; dec dword ptr [rax - 0x39] ; ret 0xfb80
0x000000000047a845 : xchg eax, esi ; dec dword ptr [rax - 0x39] ; ret 0xfc00
0x000000000047a86e : xchg eax, esi ; dec dword ptr [rax - 0x39] ; ret 0xfcc0
0x000000000047a897 : xchg eax, esi ; dec dword ptr [rax - 0x39] ; ret 0xfd40
0x000000000047a8c0 : xchg eax, esi ; dec dword ptr [rax - 0x39] ; ret 0xfda0
0x000000000047a700 : xchg eax, esi ; dec dword ptr [rax - 0x39] ; ret 0xfe60
0x000000000041eb4d : xchg eax, esi ; lock add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000047cda0 : xchg eax, esi ; lodsd eax, dword ptr [rsi] ; cli ; jmp qword ptr [rsi]
0x000000000041eaab : xchg eax, esi ; nop ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000043b176 : xchg eax, esi ; ret 0xc085
0x00000000004918ac : xchg eax, esi ; ret 0xcd11
0x000000000043b1d7 : xchg eax, esi ; ret 0xd284
0x000000000041eafc : xchg eax, esi ; rol byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000046caeb : xchg eax, esi ; rol byte ptr [rbp - 0x75], 0x5f ; adc al, 9 ; ret 0x8b48
0x000000000047d859 : xchg eax, esi ; sti ; call qword ptr [rax]
0x000000000047d851 : xchg eax, esi ; sti ; call rax
0x000000000047d855 : xchg eax, esi ; sti ; push rax ; xchg eax, esi ; sti ; call qword ptr [rax]
0x000000000049bf30 : xchg eax, esp ; add byte ptr [rax], 0 ; or al, 6 ; std ; call rdx
0x000000000046ae64 : xchg eax, esp ; and eax, dword ptr [rax] ; add rsp, 8 ; ret
0x000000000046ae9d : xchg eax, esp ; and eax, dword ptr [rax] ; ret
0x0000000000491abf : xchg eax, esp ; push rsi ; cli ; push 0x6e ; ja 0x491a50 ; ret 0x48f
0x000000000048f659 : xchg eax, esp ; ret
0x000000000043c28b : xchg eax, esp ; ret 0x2044
0x000000000046cae3 : xchg eax, esp ; ret 0x3d
0x0000000000454f40 : xchg eax, esp ; ret 0x76e9
0x0000000000412530 : xchg eax, esp ; ret 0x7ae9
0x0000000000465a21 : xchg eax, esp ; ret 0x8545
0x000000000046f851 : xchg eax, esp ; ret 0x950f
0x00000000004025b7 : xchg eax, esp ; ret 0xb60f
0x00000000004390e0 : xchg eax, esp ; ret 0xc085
0x000000000043c5b1 : xchg eax, esp ; ret 0xc221
0x0000000000454cb1 : xchg eax, esp ; ret 0xc931
0x000000000043c0c8 : xchg eax, esp ; ret 0xca21
0x0000000000401193 : xchg eax, esp ; ret 0xd284
0x0000000000441516 : xchg eax, esp ; ret 0xd5e9
0x00000000004545b7 : xchg eax, esp ; ret 0xf45
0x00000000004157ea : xchg eax, esp ; ror byte ptr [rdi], 0xb6 ; ror byte ptr [rax - 0x73], 0x44 ; ret 0xfff
0x000000000047d809 : xchg eax, esp ; sti ; inc dword ptr [rax] ; xchg eax, ebp ; sti ; call qword ptr [rax]
0x000000000047d801 : xchg eax, esp ; sti ; jmp rax
0x00000000004140c1 : xchg edx, esp ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; jmp qword ptr [rax]
0x0000000000457497 : xchg esi, esp ; sbb byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000048a6b9 : xlatb ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x000000000041fdf9 : xlatb ; add r9, r11 ; jmp r9
0x000000000047d241 : xlatb ; cli ; call rax
0x000000000047d23d : xlatb ; cli ; inc dword ptr [rax - 0x29] ; cli ; call rax
0x000000000047d2fd : xlatb ; cli ; jmp qword ptr [rdx]
0x000000000047d1c1 : xlatb ; cli ; jmp rsp
0x000000000046203f : xlatb ; ja 0x46206c ; ret
0x0000000000439443 : xlatb ; jb 0x43944e ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000405d0d : xlatb ; jmp rdi
0x0000000000490083 : xlatb ; jo 0x4900ff ; mov ebp, 0xfb67d10d ; ret
0x000000000046f452 : xlatb ; mov byte ptr [rsi], al ; jne 0x46f438 ; mov rax, rsi ; ret
0x00000000004135f0 : xlatb ; pop rbx ; jmp 0x40f884
0x000000000041d734 : xlatb ; ret
0x0000000000491526 : xlatb ; ret 0x4e27
0x000000000045fca7 : xlatb ; ret 0x94c
0x000000000041d71f : xlatb ; ret 0xc085
0x0000000000418240 : xlatb ; ret 0xc148
0x000000000041e3a4 : xlatb ; ret 0xe883
0x0000000000432ef4 : xlatb ; ret 0xf66
0x000000000041e568 : xlatb ; ret 0xff2d
0x000000000041db01 : xlatb ; rol byte ptr [rbp + 0x664975c0], 0xf ; xlatb ; ret 0xc085
0x000000000045fe55 : xlatb ; rol ch, cl ; std ; xlatb ; ret
0x000000000041d8e3 : xlatb ; rol dword ptr [rbp + 0x315775c0], -0x40 ; ret
0x000000000041de22 : xlatb ; rol dword ptr [rbp - 0x3a378a40], -3 ; xlatb ; ret 0xc085
0x0000000000432c72 : xlatb ; rol dword ptr [rbp - 0x3a678a40], -3 ; xlatb ; ret 0xc085
0x0000000000437096 : xlatb ; ror dword ptr [rcx], cl ; ret 0xe074
0x0000000000418126 : xlatb ; sal bh, 1 ; ret 0x8000
0x0000000000417fe6 : xlatb ; sal bh, 1 ; ret 0xc000
0x0000000000417ea6 : xlatb ; sal bh, 1 ; ret 0xe000
0x0000000000417d66 : xlatb ; sal bh, 1 ; ret 0xf000
0x0000000000417c26 : xlatb ; sal bh, 1 ; ret 0xf800
0x0000000000417ae6 : xlatb ; sal bh, 1 ; ret 0xfc00
0x00000000004179a6 : xlatb ; sal bh, 1 ; ret 0xfe00
0x0000000000417866 : xlatb ; sal bh, 1 ; ret 0xff00
0x0000000000417726 : xlatb ; sal bh, 1 ; ret 0xff80
0x00000000004175e6 : xlatb ; sal bh, 1 ; ret 0xffc0
0x00000000004174a6 : xlatb ; sal bh, 1 ; ret 0xffe0
0x0000000000417366 : xlatb ; sal bh, 1 ; ret 0xfff0
0x0000000000417226 : xlatb ; sal bh, 1 ; ret 0xfff8
0x00000000004170e6 : xlatb ; sal bh, 1 ; ret 0xfffc
0x0000000000416fa6 : xlatb ; sal bh, 1 ; ret 0xfffe
0x0000000000437092 : xlatb ; shl byte ptr [rsi + 0xf], 0xd7 ; ror dword ptr [rcx], cl ; ret 0xe074
0x000000000045fc45 : xlatb ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x000000000045fc56 : xlatb ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret 0xf66
0x0000000000416c9a : xor ah, byte ptr [rdi] ; add al, byte ptr [rax] ; cmovne rax, rdx ; ret
0x000000000047d02c : xor ah, byte ptr [rdx - 0x5e5d0006] ; cli ; call qword ptr [rdx]
0x0000000000497305 : xor al, 0 ; add al, bl ; pushfq ; stc ; call qword ptr [rax]
0x00000000004972dd : xor al, 0 ; add byte ptr [rax - 0x7f], dl ; stc ; call qword ptr [rax]
0x00000000004972a1 : xor al, 0 ; add byte ptr [rsi + rdi], cl ; stc ; jmp qword ptr [rsi]
0x000000000048f00a : xor al, 0x19 ; xchg dword ptr [rcx + 0x79], ecx ; xchg eax, edx ; ret 0xf869
0x00000000004975d0 : xor al, 0x37 ; add byte ptr [rax], al ; in al, dx ; and edx, edi ; call rsp
0x000000000049c4d0 : xor al, 0x86 ; add byte ptr [rax], al ; mov word ptr [rcx], fs ; std ; call rdi
0x0000000000449ac2 : xor al, 0x88 ; add rsi, r8 ; jmp rsi
0x000000000045c3f3 : xor al, 0xbe ; add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x0000000000477fb2 : xor al, 0xcb ; mov rsi, qword ptr [r14] ; call r12
0x00000000004901ea : xor al, 0xd8 ; ret
0x000000000047de18 : xor al, 0xda ; sti ; call qword ptr [rsi]
0x0000000000448eed : xor al, 0xf8 ; test rsi, rsi ; je 0x448efd ; call rsi
0x000000000049711d : xor al, byte ptr [rax] ; add byte ptr [rax + 0x72], dh ; clc ; call rsp
0x0000000000463172 : xor al, ch ; xor bl, dl ; stc ; dec dword ptr [rax + 0x39] ; ret
0x000000000049c779 : xor bh, ch ; jmp qword ptr [rdx]
0x000000000049c791 : xor bh, ch ; jmp rdx
0x0000000000497420 : xor bh, ch ; stc ; jmp qword ptr [rbx]
0x000000000047c861 : xor bh, dl ; call qword ptr [rbx + 0x23fffa32]
0x000000000047c865 : xor bh, dl ; jmp qword ptr [rbx]
0x000000000041d96c : xor bl, al ; nop ; xor eax, eax ; ret
0x000000000040f906 : xor bl, dh ; ret
0x0000000000463174 : xor bl, dl ; stc ; dec dword ptr [rax + 0x39] ; ret
0x000000000041d83d : xor byte ptr [r14 + 0xf], r12b ; xlatb ; ret
0x00000000004094a2 : xor byte ptr [r8 + 1], r9b ; ret 0x8b49
0x00000000004327bf : xor byte ptr [rax + 0xf], cl ; ret 0x66c3
0x00000000004326a1 : xor byte ptr [rax + 0xf], cl ; ret 0x90c3
0x0000000000432b02 : xor byte ptr [rax + 0xf], cl ; ret 0xf8c5
0x00000000004094a3 : xor byte ptr [rax + 1], cl ; ret 0x8b49
0x000000000043325f : xor byte ptr [rax - 0x77], cl ; add cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x00000000004609cf : xor byte ptr [rax - 0x77], cl ; out dx, eax ; call rbx
0x0000000000474e68 : xor byte ptr [rax - 0x77], cl ; ret 0x2148
0x00000000004424ef : xor byte ptr [rax - 0x7d], cl ; ret
0x000000000043ef1f : xor byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000004097fb : xor byte ptr [rax], 1 ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x0000000000406f39 : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x0000000000406e73 : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rdx
0x0000000000460c1c : xor byte ptr [rax], al ; add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x0000000000406f5f : xor byte ptr [rax], al ; add byte ptr [rax], al ; mov rdi, qword ptr [rax + 0x20] ; call rdx
0x000000000043a723 : xor byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000045e05a : xor byte ptr [rax], al ; je 0x45e065 ; ret
0x000000000040e108 : xor byte ptr [rbp + 0x25], 0x5b ; ret
0x00000000004783ce : xor byte ptr [rbp + 0x27], dh ; mov rax, qword ptr [rsi + 0x10] ; ret
0x0000000000439695 : xor byte ptr [rbp + 0xf], al ; adc dword ptr [rbx], eax ; ret
0x00000000004993cc : xor byte ptr [rbp], dl ; add byte ptr [rax - 2], dh ; cli ; call rsp
0x0000000000415945 : xor byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000044126a : xor byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000045631c : xor byte ptr [rbx - 0x2e89f607], al ; mov qword ptr [rdi], rsi ; ret
0x000000000047d70c : xor byte ptr [rbx], ch ; sti ; call rax
0x0000000000474c85 : xor byte ptr [rcx + 0x21], cl ; ror byte ptr [rax + 0x21], cl ; ret 0xc148
0x00000000004163d6 : xor byte ptr [rcx - 0x73], cl ; je 0x4163e8 ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x0000000000412c4d : xor byte ptr [rcx - 0x75], cl ; push rcx ; or dh, dh ; ret 0xf04
0x00000000004097fc : xor byte ptr [rcx], al ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x000000000040a827 : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000004083a0 : xor byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x000000000047e680 : xor byte ptr [rcx], al ; cld ; call qword ptr [rax]
0x000000000045dbf0 : xor byte ptr [rdi], cl ; ret 0x4389
0x000000000049711c : xor byte ptr [rdx], 0 ; add byte ptr [rax + 0x72], dh ; clc ; call rsp
0x0000000000415ee2 : xor byte ptr [rdx], al ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x0000000000496402 : xor byte ptr [rdx], al ; ret
0x000000000049c790 : xor byte ptr [rdx], dh ; std ; jmp rdx
0x000000000049741c : xor byte ptr [rip - 0x10d00000], 0xf9 ; jmp qword ptr [rbx]
0x0000000000498337 : xor byte ptr [rsi + 0x380e4106], al ; add dword ptr [rdi], 3 ; ret 0xa01
0x000000000041e83f : xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000045fc0c : xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x000000000041d83e : xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x0000000000497ccc : xor byte ptr [rsi], bh ; add byte ptr [rax], al ; and byte ptr [rbx - 6], al ; call qword ptr [rbx]
0x00000000004697e3 : xor cl, byte ptr [rax - 0x7d] ; ret 0x4810
0x000000000047745e : xor cl, byte ptr [rax] ; jne 0x477483 ; mov rax, qword ptr [rax] ; ret
0x00000000004004ca : xor cl, byte ptr [rdx] ; sub al, byte ptr [rax] ; nop ; ret
0x0000000000449e55 : xor dh, dh ; ret 0x4002
0x00000000004169da : xor dl, bl ; sub byte ptr [rax], al ; add dh, byte ptr [rax + rcx - 9] ; ret 0
0x000000000046bb5e : xor dl, dh ; jmp r11
0x000000000046bc70 : xor dl, dh ; ret
0x000000000045416d : xor dword ptr [rax - 0x77], ecx ; ror dword ptr [rax - 0x77], 1 ; ret 0x27e9
0x000000000043e00f : xor dword ptr [rax - 0x7d], ecx ; ret 0xf01
0x00000000004774cd : xor dword ptr [rax], ecx ; jne 0x4774dc ; mov qword ptr [rax], rdx ; ret
0x000000000043dfee : xor dword ptr [rax], edi ; ret 0x2d75
0x0000000000411b49 : xor dword ptr [rbx - 0x76b7f020], eax ; ret 0x8948
0x0000000000416a41 : xor dword ptr [rdx], eax ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x000000000047c835 : xor eax, 0x358ffffa ; cli ; jmp qword ptr [rbx]
0x0000000000439c53 : xor eax, 0x48000002 ; mov ecx, edx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000049741d : xor eax, 0xef300000 ; stc ; jmp qword ptr [rbx]
0x0000000000406f36 : xor eax, dword ptr [0x30] ; call rax
0x000000000049728d : xor eax, dword ptr [rax] ; add byte ptr [rax], dl ; stc ; call qword ptr [rax]
0x000000000040cc80 : xor eax, eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000004150d6 : xor eax, eax ; add rsp, 0x18 ; ret
0x000000000040d5a4 : xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000044b3c9 : xor eax, eax ; add rsp, 8 ; ret
0x0000000000471e1a : xor eax, eax ; call 0x469f28
0x000000000046203b : xor eax, eax ; cmp rdi, rdx ; ja 0x462070 ; ret
0x000000000043dba7 : xor eax, eax ; cmp rdx, rdi ; setae al ; ret
0x000000000040c160 : xor eax, eax ; jmp 0x40c12a
0x000000000045f9f2 : xor eax, eax ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000040555f : xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000040c20b : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000407245 : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000413aa2 : xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000040af62 : xor eax, eax ; pop rbx ; ret
0x000000000040718d : xor eax, eax ; ret
0x000000000041844e : xor eax, eax ; sub eax, ecx ; ret
0x000000000041dd2c : xor eax, eax ; vzeroupper ; ret
0x0000000000401b50 : xor ebp, ebp ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004488e6 : xor ebx, ebx ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000406a33 : xor ecx, dword ptr [rax + 0x39] ; ret
0x00000000004432d9 : xor ecx, dword ptr [rax - 0x7d] ; ret
0x000000000046f7c9 : xor ecx, dword ptr [rax] ; mov ecx, 0x1f0fff ; pop rbx ; ret
0x0000000000447c49 : xor ecx, ecx ; call r15
0x00000000004607d9 : xor ecx, ecx ; xor edx, edx ; lea r9, qword ptr [rsp + 0x20] ; call rbx
0x0000000000471b19 : xor edi, edi ; call 0x43dd74
0x0000000000406e70 : xor edx, dword ptr [0x30] ; call rdx
0x00000000004404b3 : xor edx, edx ; add eax, 1 ; push rax ; call rbx
0x000000000043f0cc : xor edx, edx ; cmp ebx, eax ; setne dl ; jmp 0x43f0bc
0x000000000045d0d3 : xor edx, edx ; div r13 ; mov rbp, rax ; jmp 0x45d0a8
0x000000000040de13 : xor edx, edx ; jmp rax
0x00000000004607db : xor edx, edx ; lea r9, qword ptr [rsp + 0x20] ; call rbx
0x0000000000414644 : xor edx, edx ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x0000000000414950 : xor edx, edx ; pop rbx ; mov rax, rdx ; pop rbp ; pop r12 ; ret
0x0000000000447c48 : xor r9d, r9d ; call r15
0x0000000000406f35 : xor rax, qword ptr [0x30] ; call rax
0x0000000000406f34 : xor rax, qword ptr fs:[0x30] ; call rax
0x00000000004370b0 : xor rax, rax ; ret
0x0000000000406e6f : xor rdx, qword ptr [0x30] ; call rdx
0x0000000000406e6e : xor rdx, qword ptr fs:[0x30] ; call rdx

Unique gadgets found: 8312
